<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.parttime.ParttimeApplyModifyMapper">
  <resultMap id="BaseResultMap" type="domain.parttime.ParttimeApplyModify">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="modify_type" jdbcType="TINYINT" property="modifyType" />
    <result column="apply_id" jdbcType="INTEGER" property="applyId" />
    <result column="cadre_id" jdbcType="INTEGER" property="cadreId" />
    <result column="apply_date" jdbcType="DATE" property="applyDate" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="is_first" jdbcType="BIT" property="isFirst" />
    <result column="background" jdbcType="BIT" property="background" />
    <result column="has_pay" jdbcType="BIT" property="hasPay" />
    <result column="balance" jdbcType="INTEGER" property="balance" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="start_time" jdbcType="DATE" property="startTime" />
    <result column="end_time" jdbcType="DATE" property="endTime" />
    <result column="modify_proof" jdbcType="VARCHAR" property="modifyProof" />
    <result column="modify_proof_file_name" jdbcType="VARCHAR" property="modifyProofFileName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="modify_user_id" jdbcType="INTEGER" property="modifyUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="stauts" jdbcType="VARCHAR" property="stauts" />
    <result column="is_finish" jdbcType="BIT" property="isFinish" />
    <result column="flow_node" jdbcType="BIT" property="flowNode" />
    <result column="flow_nodes" jdbcType="VARCHAR" property="flowNodes" />
    <result column="flow_users" jdbcType="VARCHAR" property="flowUsers" />
    <result column="is_agreed" jdbcType="BIT" property="isAgreed" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, modify_type, apply_id, cadre_id, apply_date, type, title, is_first, background, 
    has_pay, balance, reason, start_time, end_time, modify_proof, modify_proof_file_name, 
    remark, modify_user_id, create_time, ip, stauts, is_finish, flow_node, flow_nodes, 
    flow_users, is_agreed
  </sql>
  <select id="selectByExample" parameterType="domain.parttime.ParttimeApplyModifyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from parttime_apply_modify
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from parttime_apply_modify
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from parttime_apply_modify
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.parttime.ParttimeApplyModifyExample">
    delete from parttime_apply_modify
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.parttime.ParttimeApplyModify">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into parttime_apply_modify (modify_type, apply_id, cadre_id, 
      apply_date, type, title, 
      is_first, background, has_pay, balance, 
      reason, start_time, end_time, 
      modify_proof, modify_proof_file_name, remark, 
      modify_user_id, create_time, ip, 
      stauts, is_finish, flow_node, 
      flow_nodes, flow_users, is_agreed
      )
    values (#{modifyType,jdbcType=TINYINT}, #{applyId,jdbcType=INTEGER}, #{cadreId,jdbcType=INTEGER}, 
      #{applyDate,jdbcType=DATE}, #{type,jdbcType=TINYINT}, #{title,jdbcType=VARCHAR}, 
      #{isFirst,jdbcType=BIT}, #{background,jdbcType=BIT}, #{hasPay,jdbcType=BIT}, #{balance,jdbcType=INTEGER}, 
      #{reason,jdbcType=VARCHAR}, #{startTime,jdbcType=DATE}, #{endTime,jdbcType=DATE}, 
      #{modifyProof,jdbcType=VARCHAR}, #{modifyProofFileName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{modifyUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}, 
      #{stauts,jdbcType=VARCHAR}, #{isFinish,jdbcType=BIT}, #{flowNode,jdbcType=BIT}, 
      #{flowNodes,jdbcType=VARCHAR}, #{flowUsers,jdbcType=VARCHAR}, #{isAgreed,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.parttime.ParttimeApplyModify">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into parttime_apply_modify
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="modifyType != null">
        modify_type,
      </if>
      <if test="applyId != null">
        apply_id,
      </if>
      <if test="cadreId != null">
        cadre_id,
      </if>
      <if test="applyDate != null">
        apply_date,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="isFirst != null">
        is_first,
      </if>
      <if test="background != null">
        background,
      </if>
      <if test="hasPay != null">
        has_pay,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="modifyProof != null">
        modify_proof,
      </if>
      <if test="modifyProofFileName != null">
        modify_proof_file_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="modifyUserId != null">
        modify_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="stauts != null">
        stauts,
      </if>
      <if test="isFinish != null">
        is_finish,
      </if>
      <if test="flowNode != null">
        flow_node,
      </if>
      <if test="flowNodes != null">
        flow_nodes,
      </if>
      <if test="flowUsers != null">
        flow_users,
      </if>
      <if test="isAgreed != null">
        is_agreed,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="modifyType != null">
        #{modifyType,jdbcType=TINYINT},
      </if>
      <if test="applyId != null">
        #{applyId,jdbcType=INTEGER},
      </if>
      <if test="cadreId != null">
        #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="applyDate != null">
        #{applyDate,jdbcType=DATE},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="isFirst != null">
        #{isFirst,jdbcType=BIT},
      </if>
      <if test="background != null">
        #{background,jdbcType=BIT},
      </if>
      <if test="hasPay != null">
        #{hasPay,jdbcType=BIT},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=DATE},
      </if>
      <if test="modifyProof != null">
        #{modifyProof,jdbcType=VARCHAR},
      </if>
      <if test="modifyProofFileName != null">
        #{modifyProofFileName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserId != null">
        #{modifyUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="stauts != null">
        #{stauts,jdbcType=VARCHAR},
      </if>
      <if test="isFinish != null">
        #{isFinish,jdbcType=BIT},
      </if>
      <if test="flowNode != null">
        #{flowNode,jdbcType=BIT},
      </if>
      <if test="flowNodes != null">
        #{flowNodes,jdbcType=VARCHAR},
      </if>
      <if test="flowUsers != null">
        #{flowUsers,jdbcType=VARCHAR},
      </if>
      <if test="isAgreed != null">
        #{isAgreed,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.parttime.ParttimeApplyModifyExample" resultType="java.lang.Long">
    select count(*) from parttime_apply_modify
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update parttime_apply_modify
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.modifyType != null">
        modify_type = #{record.modifyType,jdbcType=TINYINT},
      </if>
      <if test="record.applyId != null">
        apply_id = #{record.applyId,jdbcType=INTEGER},
      </if>
      <if test="record.cadreId != null">
        cadre_id = #{record.cadreId,jdbcType=INTEGER},
      </if>
      <if test="record.applyDate != null">
        apply_date = #{record.applyDate,jdbcType=DATE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.isFirst != null">
        is_first = #{record.isFirst,jdbcType=BIT},
      </if>
      <if test="record.background != null">
        background = #{record.background,jdbcType=BIT},
      </if>
      <if test="record.hasPay != null">
        has_pay = #{record.hasPay,jdbcType=BIT},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=INTEGER},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=DATE},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=DATE},
      </if>
      <if test="record.modifyProof != null">
        modify_proof = #{record.modifyProof,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyProofFileName != null">
        modify_proof_file_name = #{record.modifyProofFileName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.modifyUserId != null">
        modify_user_id = #{record.modifyUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.stauts != null">
        stauts = #{record.stauts,jdbcType=VARCHAR},
      </if>
      <if test="record.isFinish != null">
        is_finish = #{record.isFinish,jdbcType=BIT},
      </if>
      <if test="record.flowNode != null">
        flow_node = #{record.flowNode,jdbcType=BIT},
      </if>
      <if test="record.flowNodes != null">
        flow_nodes = #{record.flowNodes,jdbcType=VARCHAR},
      </if>
      <if test="record.flowUsers != null">
        flow_users = #{record.flowUsers,jdbcType=VARCHAR},
      </if>
      <if test="record.isAgreed != null">
        is_agreed = #{record.isAgreed,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update parttime_apply_modify
    set id = #{record.id,jdbcType=INTEGER},
      modify_type = #{record.modifyType,jdbcType=TINYINT},
      apply_id = #{record.applyId,jdbcType=INTEGER},
      cadre_id = #{record.cadreId,jdbcType=INTEGER},
      apply_date = #{record.applyDate,jdbcType=DATE},
      type = #{record.type,jdbcType=TINYINT},
      title = #{record.title,jdbcType=VARCHAR},
      is_first = #{record.isFirst,jdbcType=BIT},
      background = #{record.background,jdbcType=BIT},
      has_pay = #{record.hasPay,jdbcType=BIT},
      balance = #{record.balance,jdbcType=INTEGER},
      reason = #{record.reason,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=DATE},
      end_time = #{record.endTime,jdbcType=DATE},
      modify_proof = #{record.modifyProof,jdbcType=VARCHAR},
      modify_proof_file_name = #{record.modifyProofFileName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      modify_user_id = #{record.modifyUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR},
      stauts = #{record.stauts,jdbcType=VARCHAR},
      is_finish = #{record.isFinish,jdbcType=BIT},
      flow_node = #{record.flowNode,jdbcType=BIT},
      flow_nodes = #{record.flowNodes,jdbcType=VARCHAR},
      flow_users = #{record.flowUsers,jdbcType=VARCHAR},
      is_agreed = #{record.isAgreed,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.parttime.ParttimeApplyModify">
    update parttime_apply_modify
    <set>
      <if test="modifyType != null">
        modify_type = #{modifyType,jdbcType=TINYINT},
      </if>
      <if test="applyId != null">
        apply_id = #{applyId,jdbcType=INTEGER},
      </if>
      <if test="cadreId != null">
        cadre_id = #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="applyDate != null">
        apply_date = #{applyDate,jdbcType=DATE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="isFirst != null">
        is_first = #{isFirst,jdbcType=BIT},
      </if>
      <if test="background != null">
        background = #{background,jdbcType=BIT},
      </if>
      <if test="hasPay != null">
        has_pay = #{hasPay,jdbcType=BIT},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=INTEGER},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="modifyProof != null">
        modify_proof = #{modifyProof,jdbcType=VARCHAR},
      </if>
      <if test="modifyProofFileName != null">
        modify_proof_file_name = #{modifyProofFileName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="modifyUserId != null">
        modify_user_id = #{modifyUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="stauts != null">
        stauts = #{stauts,jdbcType=VARCHAR},
      </if>
      <if test="isFinish != null">
        is_finish = #{isFinish,jdbcType=BIT},
      </if>
      <if test="flowNode != null">
        flow_node = #{flowNode,jdbcType=BIT},
      </if>
      <if test="flowNodes != null">
        flow_nodes = #{flowNodes,jdbcType=VARCHAR},
      </if>
      <if test="flowUsers != null">
        flow_users = #{flowUsers,jdbcType=VARCHAR},
      </if>
      <if test="isAgreed != null">
        is_agreed = #{isAgreed,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.parttime.ParttimeApplyModify">
    update parttime_apply_modify
    set modify_type = #{modifyType,jdbcType=TINYINT},
      apply_id = #{applyId,jdbcType=INTEGER},
      cadre_id = #{cadreId,jdbcType=INTEGER},
      apply_date = #{applyDate,jdbcType=DATE},
      type = #{type,jdbcType=TINYINT},
      title = #{title,jdbcType=VARCHAR},
      is_first = #{isFirst,jdbcType=BIT},
      background = #{background,jdbcType=BIT},
      has_pay = #{hasPay,jdbcType=BIT},
      balance = #{balance,jdbcType=INTEGER},
      reason = #{reason,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=DATE},
      end_time = #{endTime,jdbcType=DATE},
      modify_proof = #{modifyProof,jdbcType=VARCHAR},
      modify_proof_file_name = #{modifyProofFileName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      modify_user_id = #{modifyUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      stauts = #{stauts,jdbcType=VARCHAR},
      is_finish = #{isFinish,jdbcType=BIT},
      flow_node = #{flowNode,jdbcType=BIT},
      flow_nodes = #{flowNodes,jdbcType=VARCHAR},
      flow_users = #{flowUsers,jdbcType=VARCHAR},
      is_agreed = #{isAgreed,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.parttime.ParttimeApplyModifyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from parttime_apply_modify
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>