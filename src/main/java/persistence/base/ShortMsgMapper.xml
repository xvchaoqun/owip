<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.base.ShortMsgMapper">
  <resultMap id="BaseResultMap" type="domain.base.ShortMsg">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sender_id" jdbcType="INTEGER" property="senderId" />
    <result column="receiver_id" jdbcType="INTEGER" property="receiverId" />
    <result column="relate_id" jdbcType="INTEGER" property="relateId" />
    <result column="relate_type" jdbcType="TINYINT" property="relateType" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="ret" jdbcType="VARCHAR" property="ret" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, sender_id, receiver_id, relate_id, relate_type, type, mobile, content, create_time, 
    ip, remark, status, ret
  </sql>
  <select id="selectByExample" parameterType="domain.base.ShortMsgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_short_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from base_short_msg
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from base_short_msg
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.base.ShortMsgExample">
    delete from base_short_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.base.ShortMsg">
    insert into base_short_msg (id, sender_id, receiver_id, 
      relate_id, relate_type, type, 
      mobile, content, create_time, 
      ip, remark, status, ret
      )
    values (#{id,jdbcType=INTEGER}, #{senderId,jdbcType=INTEGER}, #{receiverId,jdbcType=INTEGER}, 
      #{relateId,jdbcType=INTEGER}, #{relateType,jdbcType=TINYINT}, #{type,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{ip,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{ret,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.base.ShortMsg">
    insert into base_short_msg
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="senderId != null">
        sender_id,
      </if>
      <if test="receiverId != null">
        receiver_id,
      </if>
      <if test="relateId != null">
        relate_id,
      </if>
      <if test="relateType != null">
        relate_type,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="ret != null">
        ret,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="senderId != null">
        #{senderId,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null">
        #{receiverId,jdbcType=INTEGER},
      </if>
      <if test="relateId != null">
        #{relateId,jdbcType=INTEGER},
      </if>
      <if test="relateType != null">
        #{relateType,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="ret != null">
        #{ret,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.base.ShortMsgExample" resultType="java.lang.Long">
    select count(*) from base_short_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update base_short_msg
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.senderId != null">
        sender_id = #{record.senderId,jdbcType=INTEGER},
      </if>
      <if test="record.receiverId != null">
        receiver_id = #{record.receiverId,jdbcType=INTEGER},
      </if>
      <if test="record.relateId != null">
        relate_id = #{record.relateId,jdbcType=INTEGER},
      </if>
      <if test="record.relateType != null">
        relate_type = #{record.relateType,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.ret != null">
        ret = #{record.ret,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update base_short_msg
    set id = #{record.id,jdbcType=INTEGER},
      sender_id = #{record.senderId,jdbcType=INTEGER},
      receiver_id = #{record.receiverId,jdbcType=INTEGER},
      relate_id = #{record.relateId,jdbcType=INTEGER},
      relate_type = #{record.relateType,jdbcType=TINYINT},
      type = #{record.type,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      ret = #{record.ret,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.base.ShortMsg">
    update base_short_msg
    <set>
      <if test="senderId != null">
        sender_id = #{senderId,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null">
        receiver_id = #{receiverId,jdbcType=INTEGER},
      </if>
      <if test="relateId != null">
        relate_id = #{relateId,jdbcType=INTEGER},
      </if>
      <if test="relateType != null">
        relate_type = #{relateType,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="ret != null">
        ret = #{ret,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.base.ShortMsg">
    update base_short_msg
    set sender_id = #{senderId,jdbcType=INTEGER},
      receiver_id = #{receiverId,jdbcType=INTEGER},
      relate_id = #{relateId,jdbcType=INTEGER},
      relate_type = #{relateType,jdbcType=TINYINT},
      type = #{type,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      ret = #{ret,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.base.ShortMsgExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_short_msg
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>