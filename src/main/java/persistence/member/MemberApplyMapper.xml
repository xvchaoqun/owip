<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.member.MemberApplyMapper">
  <resultMap id="BaseResultMap" type="domain.member.MemberApply">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="apply_time" jdbcType="DATE" property="applyTime" />
    <result column="fill_time" jdbcType="TIMESTAMP" property="fillTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="apply_stage" jdbcType="TINYINT" property="applyStage" />
    <result column="stage" jdbcType="TINYINT" property="stage" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="pass_time" jdbcType="DATE" property="passTime" />
    <result column="active_time" jdbcType="DATE" property="activeTime" />
    <result column="active_train_start_time" jdbcType="DATE" property="activeTrainStartTime" />
    <result column="active_train_end_time" jdbcType="DATE" property="activeTrainEndTime" />
    <result column="active_grade" jdbcType="VARCHAR" property="activeGrade" />
    <result column="concat_user_ids" jdbcType="VARCHAR" property="concatUserIds" />
    <result column="concat_users" jdbcType="VARCHAR" property="concatUsers" />
    <result column="candidate_time" jdbcType="DATE" property="candidateTime" />
    <result column="candidate_train_start_time" jdbcType="DATE" property="candidateTrainStartTime" />
    <result column="candidate_train_end_time" jdbcType="DATE" property="candidateTrainEndTime" />
    <result column="candidate_grade" jdbcType="VARCHAR" property="candidateGrade" />
    <result column="candidate_status" jdbcType="TINYINT" property="candidateStatus" />
    <result column="sponsor_user_ids" jdbcType="VARCHAR" property="sponsorUserIds" />
    <result column="sponsor_users" jdbcType="VARCHAR" property="sponsorUsers" />
    <result column="plan_time" jdbcType="DATE" property="planTime" />
    <result column="plan_status" jdbcType="TINYINT" property="planStatus" />
    <result column="draw_time" jdbcType="DATE" property="drawTime" />
    <result column="draw_status" jdbcType="TINYINT" property="drawStatus" />
    <result column="apply_sn_id" jdbcType="INTEGER" property="applySnId" />
    <result column="apply_sn" jdbcType="VARCHAR" property="applySn" />
    <result column="grow_public_id" jdbcType="INTEGER" property="growPublicId" />
    <result column="grow_time" jdbcType="DATE" property="growTime" />
    <result column="grow_status" jdbcType="TINYINT" property="growStatus" />
    <result column="grow_concat_user_ids" jdbcType="VARCHAR" property="growConcatUserIds" />
    <result column="grow_concat_users" jdbcType="VARCHAR" property="growConcatUsers" />
    <result column="positive_public_id" jdbcType="INTEGER" property="positivePublicId" />
    <result column="positive_time" jdbcType="DATE" property="positiveTime" />
    <result column="positive_status" jdbcType="TINYINT" property="positiveStatus" />
    <result column="is_remove" jdbcType="BIT" property="isRemove" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, party_id, branch_id, type, apply_time, fill_time, remark, apply_stage, stage, 
    reason, pass_time, active_time, active_train_start_time, active_train_end_time, active_grade, 
    concat_user_ids, concat_users, candidate_time, candidate_train_start_time, candidate_train_end_time, 
    candidate_grade, candidate_status, sponsor_user_ids, sponsor_users, plan_time, plan_status, 
    draw_time, draw_status, apply_sn_id, apply_sn, grow_public_id, grow_time, grow_status, 
    grow_concat_user_ids, grow_concat_users, positive_public_id, positive_time, positive_status, 
    is_remove, create_time
  </sql>
  <select id="selectByExample" parameterType="domain.member.MemberApplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ow_member_apply
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ow_member_apply
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.member.MemberApplyExample">
    delete from ow_member_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.member.MemberApply">
    insert into ow_member_apply (user_id, party_id, branch_id, 
      type, apply_time, fill_time, 
      remark, apply_stage, stage, 
      reason, pass_time, active_time, 
      active_train_start_time, active_train_end_time, active_grade, 
      concat_user_ids, concat_users, candidate_time, 
      candidate_train_start_time, candidate_train_end_time, 
      candidate_grade, candidate_status, sponsor_user_ids, 
      sponsor_users, plan_time, plan_status, 
      draw_time, draw_status, apply_sn_id, 
      apply_sn, grow_public_id, grow_time, 
      grow_status, grow_concat_user_ids, grow_concat_users, 
      positive_public_id, positive_time, positive_status, 
      is_remove, create_time)
    values (#{userId,jdbcType=INTEGER}, #{partyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, 
      #{type,jdbcType=TINYINT}, #{applyTime,jdbcType=DATE}, #{fillTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{applyStage,jdbcType=TINYINT}, #{stage,jdbcType=TINYINT}, 
      #{reason,jdbcType=VARCHAR}, #{passTime,jdbcType=DATE}, #{activeTime,jdbcType=DATE}, 
      #{activeTrainStartTime,jdbcType=DATE}, #{activeTrainEndTime,jdbcType=DATE}, #{activeGrade,jdbcType=VARCHAR}, 
      #{concatUserIds,jdbcType=VARCHAR}, #{concatUsers,jdbcType=VARCHAR}, #{candidateTime,jdbcType=DATE}, 
      #{candidateTrainStartTime,jdbcType=DATE}, #{candidateTrainEndTime,jdbcType=DATE}, 
      #{candidateGrade,jdbcType=VARCHAR}, #{candidateStatus,jdbcType=TINYINT}, #{sponsorUserIds,jdbcType=VARCHAR}, 
      #{sponsorUsers,jdbcType=VARCHAR}, #{planTime,jdbcType=DATE}, #{planStatus,jdbcType=TINYINT}, 
      #{drawTime,jdbcType=DATE}, #{drawStatus,jdbcType=TINYINT}, #{applySnId,jdbcType=INTEGER}, 
      #{applySn,jdbcType=VARCHAR}, #{growPublicId,jdbcType=INTEGER}, #{growTime,jdbcType=DATE}, 
      #{growStatus,jdbcType=TINYINT}, #{growConcatUserIds,jdbcType=VARCHAR}, #{growConcatUsers,jdbcType=VARCHAR}, 
      #{positivePublicId,jdbcType=INTEGER}, #{positiveTime,jdbcType=DATE}, #{positiveStatus,jdbcType=TINYINT}, 
      #{isRemove,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="domain.member.MemberApply">
    insert into ow_member_apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="fillTime != null">
        fill_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="applyStage != null">
        apply_stage,
      </if>
      <if test="stage != null">
        stage,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="passTime != null">
        pass_time,
      </if>
      <if test="activeTime != null">
        active_time,
      </if>
      <if test="activeTrainStartTime != null">
        active_train_start_time,
      </if>
      <if test="activeTrainEndTime != null">
        active_train_end_time,
      </if>
      <if test="activeGrade != null">
        active_grade,
      </if>
      <if test="concatUserIds != null">
        concat_user_ids,
      </if>
      <if test="concatUsers != null">
        concat_users,
      </if>
      <if test="candidateTime != null">
        candidate_time,
      </if>
      <if test="candidateTrainStartTime != null">
        candidate_train_start_time,
      </if>
      <if test="candidateTrainEndTime != null">
        candidate_train_end_time,
      </if>
      <if test="candidateGrade != null">
        candidate_grade,
      </if>
      <if test="candidateStatus != null">
        candidate_status,
      </if>
      <if test="sponsorUserIds != null">
        sponsor_user_ids,
      </if>
      <if test="sponsorUsers != null">
        sponsor_users,
      </if>
      <if test="planTime != null">
        plan_time,
      </if>
      <if test="planStatus != null">
        plan_status,
      </if>
      <if test="drawTime != null">
        draw_time,
      </if>
      <if test="drawStatus != null">
        draw_status,
      </if>
      <if test="applySnId != null">
        apply_sn_id,
      </if>
      <if test="applySn != null">
        apply_sn,
      </if>
      <if test="growPublicId != null">
        grow_public_id,
      </if>
      <if test="growTime != null">
        grow_time,
      </if>
      <if test="growStatus != null">
        grow_status,
      </if>
      <if test="growConcatUserIds != null">
        grow_concat_user_ids,
      </if>
      <if test="growConcatUsers != null">
        grow_concat_users,
      </if>
      <if test="positivePublicId != null">
        positive_public_id,
      </if>
      <if test="positiveTime != null">
        positive_time,
      </if>
      <if test="positiveStatus != null">
        positive_status,
      </if>
      <if test="isRemove != null">
        is_remove,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=DATE},
      </if>
      <if test="fillTime != null">
        #{fillTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="applyStage != null">
        #{applyStage,jdbcType=TINYINT},
      </if>
      <if test="stage != null">
        #{stage,jdbcType=TINYINT},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="passTime != null">
        #{passTime,jdbcType=DATE},
      </if>
      <if test="activeTime != null">
        #{activeTime,jdbcType=DATE},
      </if>
      <if test="activeTrainStartTime != null">
        #{activeTrainStartTime,jdbcType=DATE},
      </if>
      <if test="activeTrainEndTime != null">
        #{activeTrainEndTime,jdbcType=DATE},
      </if>
      <if test="activeGrade != null">
        #{activeGrade,jdbcType=VARCHAR},
      </if>
      <if test="concatUserIds != null">
        #{concatUserIds,jdbcType=VARCHAR},
      </if>
      <if test="concatUsers != null">
        #{concatUsers,jdbcType=VARCHAR},
      </if>
      <if test="candidateTime != null">
        #{candidateTime,jdbcType=DATE},
      </if>
      <if test="candidateTrainStartTime != null">
        #{candidateTrainStartTime,jdbcType=DATE},
      </if>
      <if test="candidateTrainEndTime != null">
        #{candidateTrainEndTime,jdbcType=DATE},
      </if>
      <if test="candidateGrade != null">
        #{candidateGrade,jdbcType=VARCHAR},
      </if>
      <if test="candidateStatus != null">
        #{candidateStatus,jdbcType=TINYINT},
      </if>
      <if test="sponsorUserIds != null">
        #{sponsorUserIds,jdbcType=VARCHAR},
      </if>
      <if test="sponsorUsers != null">
        #{sponsorUsers,jdbcType=VARCHAR},
      </if>
      <if test="planTime != null">
        #{planTime,jdbcType=DATE},
      </if>
      <if test="planStatus != null">
        #{planStatus,jdbcType=TINYINT},
      </if>
      <if test="drawTime != null">
        #{drawTime,jdbcType=DATE},
      </if>
      <if test="drawStatus != null">
        #{drawStatus,jdbcType=TINYINT},
      </if>
      <if test="applySnId != null">
        #{applySnId,jdbcType=INTEGER},
      </if>
      <if test="applySn != null">
        #{applySn,jdbcType=VARCHAR},
      </if>
      <if test="growPublicId != null">
        #{growPublicId,jdbcType=INTEGER},
      </if>
      <if test="growTime != null">
        #{growTime,jdbcType=DATE},
      </if>
      <if test="growStatus != null">
        #{growStatus,jdbcType=TINYINT},
      </if>
      <if test="growConcatUserIds != null">
        #{growConcatUserIds,jdbcType=VARCHAR},
      </if>
      <if test="growConcatUsers != null">
        #{growConcatUsers,jdbcType=VARCHAR},
      </if>
      <if test="positivePublicId != null">
        #{positivePublicId,jdbcType=INTEGER},
      </if>
      <if test="positiveTime != null">
        #{positiveTime,jdbcType=DATE},
      </if>
      <if test="positiveStatus != null">
        #{positiveStatus,jdbcType=TINYINT},
      </if>
      <if test="isRemove != null">
        #{isRemove,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.member.MemberApplyExample" resultType="java.lang.Long">
    select count(*) from ow_member_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ow_member_apply
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=DATE},
      </if>
      <if test="record.fillTime != null">
        fill_time = #{record.fillTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.applyStage != null">
        apply_stage = #{record.applyStage,jdbcType=TINYINT},
      </if>
      <if test="record.stage != null">
        stage = #{record.stage,jdbcType=TINYINT},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.passTime != null">
        pass_time = #{record.passTime,jdbcType=DATE},
      </if>
      <if test="record.activeTime != null">
        active_time = #{record.activeTime,jdbcType=DATE},
      </if>
      <if test="record.activeTrainStartTime != null">
        active_train_start_time = #{record.activeTrainStartTime,jdbcType=DATE},
      </if>
      <if test="record.activeTrainEndTime != null">
        active_train_end_time = #{record.activeTrainEndTime,jdbcType=DATE},
      </if>
      <if test="record.activeGrade != null">
        active_grade = #{record.activeGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.concatUserIds != null">
        concat_user_ids = #{record.concatUserIds,jdbcType=VARCHAR},
      </if>
      <if test="record.concatUsers != null">
        concat_users = #{record.concatUsers,jdbcType=VARCHAR},
      </if>
      <if test="record.candidateTime != null">
        candidate_time = #{record.candidateTime,jdbcType=DATE},
      </if>
      <if test="record.candidateTrainStartTime != null">
        candidate_train_start_time = #{record.candidateTrainStartTime,jdbcType=DATE},
      </if>
      <if test="record.candidateTrainEndTime != null">
        candidate_train_end_time = #{record.candidateTrainEndTime,jdbcType=DATE},
      </if>
      <if test="record.candidateGrade != null">
        candidate_grade = #{record.candidateGrade,jdbcType=VARCHAR},
      </if>
      <if test="record.candidateStatus != null">
        candidate_status = #{record.candidateStatus,jdbcType=TINYINT},
      </if>
      <if test="record.sponsorUserIds != null">
        sponsor_user_ids = #{record.sponsorUserIds,jdbcType=VARCHAR},
      </if>
      <if test="record.sponsorUsers != null">
        sponsor_users = #{record.sponsorUsers,jdbcType=VARCHAR},
      </if>
      <if test="record.planTime != null">
        plan_time = #{record.planTime,jdbcType=DATE},
      </if>
      <if test="record.planStatus != null">
        plan_status = #{record.planStatus,jdbcType=TINYINT},
      </if>
      <if test="record.drawTime != null">
        draw_time = #{record.drawTime,jdbcType=DATE},
      </if>
      <if test="record.drawStatus != null">
        draw_status = #{record.drawStatus,jdbcType=TINYINT},
      </if>
      <if test="record.applySnId != null">
        apply_sn_id = #{record.applySnId,jdbcType=INTEGER},
      </if>
      <if test="record.applySn != null">
        apply_sn = #{record.applySn,jdbcType=VARCHAR},
      </if>
      <if test="record.growPublicId != null">
        grow_public_id = #{record.growPublicId,jdbcType=INTEGER},
      </if>
      <if test="record.growTime != null">
        grow_time = #{record.growTime,jdbcType=DATE},
      </if>
      <if test="record.growStatus != null">
        grow_status = #{record.growStatus,jdbcType=TINYINT},
      </if>
      <if test="record.growConcatUserIds != null">
        grow_concat_user_ids = #{record.growConcatUserIds,jdbcType=VARCHAR},
      </if>
      <if test="record.growConcatUsers != null">
        grow_concat_users = #{record.growConcatUsers,jdbcType=VARCHAR},
      </if>
      <if test="record.positivePublicId != null">
        positive_public_id = #{record.positivePublicId,jdbcType=INTEGER},
      </if>
      <if test="record.positiveTime != null">
        positive_time = #{record.positiveTime,jdbcType=DATE},
      </if>
      <if test="record.positiveStatus != null">
        positive_status = #{record.positiveStatus,jdbcType=TINYINT},
      </if>
      <if test="record.isRemove != null">
        is_remove = #{record.isRemove,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ow_member_apply
    set user_id = #{record.userId,jdbcType=INTEGER},
      party_id = #{record.partyId,jdbcType=INTEGER},
      branch_id = #{record.branchId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      apply_time = #{record.applyTime,jdbcType=DATE},
      fill_time = #{record.fillTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      apply_stage = #{record.applyStage,jdbcType=TINYINT},
      stage = #{record.stage,jdbcType=TINYINT},
      reason = #{record.reason,jdbcType=VARCHAR},
      pass_time = #{record.passTime,jdbcType=DATE},
      active_time = #{record.activeTime,jdbcType=DATE},
      active_train_start_time = #{record.activeTrainStartTime,jdbcType=DATE},
      active_train_end_time = #{record.activeTrainEndTime,jdbcType=DATE},
      active_grade = #{record.activeGrade,jdbcType=VARCHAR},
      concat_user_ids = #{record.concatUserIds,jdbcType=VARCHAR},
      concat_users = #{record.concatUsers,jdbcType=VARCHAR},
      candidate_time = #{record.candidateTime,jdbcType=DATE},
      candidate_train_start_time = #{record.candidateTrainStartTime,jdbcType=DATE},
      candidate_train_end_time = #{record.candidateTrainEndTime,jdbcType=DATE},
      candidate_grade = #{record.candidateGrade,jdbcType=VARCHAR},
      candidate_status = #{record.candidateStatus,jdbcType=TINYINT},
      sponsor_user_ids = #{record.sponsorUserIds,jdbcType=VARCHAR},
      sponsor_users = #{record.sponsorUsers,jdbcType=VARCHAR},
      plan_time = #{record.planTime,jdbcType=DATE},
      plan_status = #{record.planStatus,jdbcType=TINYINT},
      draw_time = #{record.drawTime,jdbcType=DATE},
      draw_status = #{record.drawStatus,jdbcType=TINYINT},
      apply_sn_id = #{record.applySnId,jdbcType=INTEGER},
      apply_sn = #{record.applySn,jdbcType=VARCHAR},
      grow_public_id = #{record.growPublicId,jdbcType=INTEGER},
      grow_time = #{record.growTime,jdbcType=DATE},
      grow_status = #{record.growStatus,jdbcType=TINYINT},
      grow_concat_user_ids = #{record.growConcatUserIds,jdbcType=VARCHAR},
      grow_concat_users = #{record.growConcatUsers,jdbcType=VARCHAR},
      positive_public_id = #{record.positivePublicId,jdbcType=INTEGER},
      positive_time = #{record.positiveTime,jdbcType=DATE},
      positive_status = #{record.positiveStatus,jdbcType=TINYINT},
      is_remove = #{record.isRemove,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.member.MemberApply">
    update ow_member_apply
    <set>
      <if test="partyId != null">
        party_id = #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        branch_id = #{branchId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=DATE},
      </if>
      <if test="fillTime != null">
        fill_time = #{fillTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="applyStage != null">
        apply_stage = #{applyStage,jdbcType=TINYINT},
      </if>
      <if test="stage != null">
        stage = #{stage,jdbcType=TINYINT},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="passTime != null">
        pass_time = #{passTime,jdbcType=DATE},
      </if>
      <if test="activeTime != null">
        active_time = #{activeTime,jdbcType=DATE},
      </if>
      <if test="activeTrainStartTime != null">
        active_train_start_time = #{activeTrainStartTime,jdbcType=DATE},
      </if>
      <if test="activeTrainEndTime != null">
        active_train_end_time = #{activeTrainEndTime,jdbcType=DATE},
      </if>
      <if test="activeGrade != null">
        active_grade = #{activeGrade,jdbcType=VARCHAR},
      </if>
      <if test="concatUserIds != null">
        concat_user_ids = #{concatUserIds,jdbcType=VARCHAR},
      </if>
      <if test="concatUsers != null">
        concat_users = #{concatUsers,jdbcType=VARCHAR},
      </if>
      <if test="candidateTime != null">
        candidate_time = #{candidateTime,jdbcType=DATE},
      </if>
      <if test="candidateTrainStartTime != null">
        candidate_train_start_time = #{candidateTrainStartTime,jdbcType=DATE},
      </if>
      <if test="candidateTrainEndTime != null">
        candidate_train_end_time = #{candidateTrainEndTime,jdbcType=DATE},
      </if>
      <if test="candidateGrade != null">
        candidate_grade = #{candidateGrade,jdbcType=VARCHAR},
      </if>
      <if test="candidateStatus != null">
        candidate_status = #{candidateStatus,jdbcType=TINYINT},
      </if>
      <if test="sponsorUserIds != null">
        sponsor_user_ids = #{sponsorUserIds,jdbcType=VARCHAR},
      </if>
      <if test="sponsorUsers != null">
        sponsor_users = #{sponsorUsers,jdbcType=VARCHAR},
      </if>
      <if test="planTime != null">
        plan_time = #{planTime,jdbcType=DATE},
      </if>
      <if test="planStatus != null">
        plan_status = #{planStatus,jdbcType=TINYINT},
      </if>
      <if test="drawTime != null">
        draw_time = #{drawTime,jdbcType=DATE},
      </if>
      <if test="drawStatus != null">
        draw_status = #{drawStatus,jdbcType=TINYINT},
      </if>
      <if test="applySnId != null">
        apply_sn_id = #{applySnId,jdbcType=INTEGER},
      </if>
      <if test="applySn != null">
        apply_sn = #{applySn,jdbcType=VARCHAR},
      </if>
      <if test="growPublicId != null">
        grow_public_id = #{growPublicId,jdbcType=INTEGER},
      </if>
      <if test="growTime != null">
        grow_time = #{growTime,jdbcType=DATE},
      </if>
      <if test="growStatus != null">
        grow_status = #{growStatus,jdbcType=TINYINT},
      </if>
      <if test="growConcatUserIds != null">
        grow_concat_user_ids = #{growConcatUserIds,jdbcType=VARCHAR},
      </if>
      <if test="growConcatUsers != null">
        grow_concat_users = #{growConcatUsers,jdbcType=VARCHAR},
      </if>
      <if test="positivePublicId != null">
        positive_public_id = #{positivePublicId,jdbcType=INTEGER},
      </if>
      <if test="positiveTime != null">
        positive_time = #{positiveTime,jdbcType=DATE},
      </if>
      <if test="positiveStatus != null">
        positive_status = #{positiveStatus,jdbcType=TINYINT},
      </if>
      <if test="isRemove != null">
        is_remove = #{isRemove,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.member.MemberApply">
    update ow_member_apply
    set party_id = #{partyId,jdbcType=INTEGER},
      branch_id = #{branchId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      apply_time = #{applyTime,jdbcType=DATE},
      fill_time = #{fillTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      apply_stage = #{applyStage,jdbcType=TINYINT},
      stage = #{stage,jdbcType=TINYINT},
      reason = #{reason,jdbcType=VARCHAR},
      pass_time = #{passTime,jdbcType=DATE},
      active_time = #{activeTime,jdbcType=DATE},
      active_train_start_time = #{activeTrainStartTime,jdbcType=DATE},
      active_train_end_time = #{activeTrainEndTime,jdbcType=DATE},
      active_grade = #{activeGrade,jdbcType=VARCHAR},
      concat_user_ids = #{concatUserIds,jdbcType=VARCHAR},
      concat_users = #{concatUsers,jdbcType=VARCHAR},
      candidate_time = #{candidateTime,jdbcType=DATE},
      candidate_train_start_time = #{candidateTrainStartTime,jdbcType=DATE},
      candidate_train_end_time = #{candidateTrainEndTime,jdbcType=DATE},
      candidate_grade = #{candidateGrade,jdbcType=VARCHAR},
      candidate_status = #{candidateStatus,jdbcType=TINYINT},
      sponsor_user_ids = #{sponsorUserIds,jdbcType=VARCHAR},
      sponsor_users = #{sponsorUsers,jdbcType=VARCHAR},
      plan_time = #{planTime,jdbcType=DATE},
      plan_status = #{planStatus,jdbcType=TINYINT},
      draw_time = #{drawTime,jdbcType=DATE},
      draw_status = #{drawStatus,jdbcType=TINYINT},
      apply_sn_id = #{applySnId,jdbcType=INTEGER},
      apply_sn = #{applySn,jdbcType=VARCHAR},
      grow_public_id = #{growPublicId,jdbcType=INTEGER},
      grow_time = #{growTime,jdbcType=DATE},
      grow_status = #{growStatus,jdbcType=TINYINT},
      grow_concat_user_ids = #{growConcatUserIds,jdbcType=VARCHAR},
      grow_concat_users = #{growConcatUsers,jdbcType=VARCHAR},
      positive_public_id = #{positivePublicId,jdbcType=INTEGER},
      positive_time = #{positiveTime,jdbcType=DATE},
      positive_status = #{positiveStatus,jdbcType=TINYINT},
      is_remove = #{isRemove,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.member.MemberApplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_apply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>