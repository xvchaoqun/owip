<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.member.ApplySnMapper">
  <resultMap id="BaseResultMap" type="domain.member.ApplySn">
    <id column="sn" jdbcType="BIGINT" property="sn" />
    <result column="range_id" jdbcType="INTEGER" property="rangeId" />
    <result column="is_used" jdbcType="BIT" property="isUsed" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sn, range_id, is_used
  </sql>
  <select id="selectByExample" parameterType="domain.member.ApplySnExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_apply_sn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ow_apply_sn
    where sn = #{sn,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from ow_apply_sn
    where sn = #{sn,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="domain.member.ApplySnExample">
    delete from ow_apply_sn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.member.ApplySn">
    insert into ow_apply_sn (sn, range_id, is_used
      )
    values (#{sn,jdbcType=BIGINT}, #{rangeId,jdbcType=INTEGER}, #{isUsed,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.member.ApplySn">
    insert into ow_apply_sn
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sn != null">
        sn,
      </if>
      <if test="rangeId != null">
        range_id,
      </if>
      <if test="isUsed != null">
        is_used,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sn != null">
        #{sn,jdbcType=BIGINT},
      </if>
      <if test="rangeId != null">
        #{rangeId,jdbcType=INTEGER},
      </if>
      <if test="isUsed != null">
        #{isUsed,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.member.ApplySnExample" resultType="java.lang.Long">
    select count(*) from ow_apply_sn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ow_apply_sn
    <set>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=BIGINT},
      </if>
      <if test="record.rangeId != null">
        range_id = #{record.rangeId,jdbcType=INTEGER},
      </if>
      <if test="record.isUsed != null">
        is_used = #{record.isUsed,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ow_apply_sn
    set sn = #{record.sn,jdbcType=BIGINT},
      range_id = #{record.rangeId,jdbcType=INTEGER},
      is_used = #{record.isUsed,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.member.ApplySn">
    update ow_apply_sn
    <set>
      <if test="rangeId != null">
        range_id = #{rangeId,jdbcType=INTEGER},
      </if>
      <if test="isUsed != null">
        is_used = #{isUsed,jdbcType=BIT},
      </if>
    </set>
    where sn = #{sn,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.member.ApplySn">
    update ow_apply_sn
    set range_id = #{rangeId,jdbcType=INTEGER},
      is_used = #{isUsed,jdbcType=BIT}
    where sn = #{sn,jdbcType=BIGINT}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.member.ApplySnExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_apply_sn
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>