<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.member.MemberOutViewMapper">
  <resultMap id="BaseResultMap" type="domain.member.MemberOutView">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="sn" jdbcType="INTEGER" property="sn" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="political_status" jdbcType="TINYINT" property="politicalStatus" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="to_title" jdbcType="VARCHAR" property="toTitle" />
    <result column="to_unit" jdbcType="VARCHAR" property="toUnit" />
    <result column="from_unit" jdbcType="VARCHAR" property="fromUnit" />
    <result column="from_address" jdbcType="VARCHAR" property="fromAddress" />
    <result column="from_phone" jdbcType="VARCHAR" property="fromPhone" />
    <result column="from_fax" jdbcType="VARCHAR" property="fromFax" />
    <result column="from_post_code" jdbcType="VARCHAR" property="fromPostCode" />
    <result column="pay_time" jdbcType="DATE" property="payTime" />
    <result column="valid_days" jdbcType="INTEGER" property="validDays" />
    <result column="handle_time" jdbcType="DATE" property="handleTime" />
    <result column="has_receipt" jdbcType="BIT" property="hasReceipt" />
    <result column="accept_receipt_time" jdbcType="DATE" property="acceptReceiptTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="is_self_print" jdbcType="BIT" property="isSelfPrint" />
    <result column="is_self_print_count" jdbcType="INTEGER" property="isSelfPrintCount" />
    <result column="is_modify" jdbcType="BIT" property="isModify" />
    <result column="is_back" jdbcType="BIT" property="isBack" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
    <result column="print_count" jdbcType="INTEGER" property="printCount" />
    <result column="last_print_time" jdbcType="TIMESTAMP" property="lastPrintTime" />
    <result column="last_print_user_id" jdbcType="INTEGER" property="lastPrintUserId" />
    <result column="user_type" jdbcType="TINYINT" property="userType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, party_id, branch_id, year, sn, idcard, gender, user_code, realname, 
    age, nation, political_status, phone, type, to_title, to_unit, from_unit, from_address, 
    from_phone, from_fax, from_post_code, pay_time, valid_days, handle_time, has_receipt, 
    accept_receipt_time, status, is_self_print, is_self_print_count, is_modify, is_back, 
    reason, apply_time, check_time, print_count, last_print_time, last_print_user_id, 
    user_type
  </sql>
  <select id="selectByExample" parameterType="domain.member.MemberOutViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_out_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="domain.member.MemberOutViewExample">
    delete from ow_member_out_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.member.MemberOutView">
    insert into ow_member_out_view (id, user_id, party_id, 
      branch_id, year, sn, 
      idcard, gender, user_code, 
      realname, age, nation, 
      political_status, phone, type, 
      to_title, to_unit, from_unit, 
      from_address, from_phone, from_fax, 
      from_post_code, pay_time, valid_days, 
      handle_time, has_receipt, accept_receipt_time, 
      status, is_self_print, is_self_print_count, 
      is_modify, is_back, reason, apply_time, 
      check_time, print_count, last_print_time, 
      last_print_user_id, user_type)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{partyId,jdbcType=INTEGER}, 
      #{branchId,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, #{sn,jdbcType=INTEGER}, 
      #{idcard,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, #{userCode,jdbcType=VARCHAR}, 
      #{realname,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{nation,jdbcType=VARCHAR}, 
      #{politicalStatus,jdbcType=TINYINT}, #{phone,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{toTitle,jdbcType=VARCHAR}, #{toUnit,jdbcType=VARCHAR}, #{fromUnit,jdbcType=VARCHAR}, 
      #{fromAddress,jdbcType=VARCHAR}, #{fromPhone,jdbcType=VARCHAR}, #{fromFax,jdbcType=VARCHAR}, 
      #{fromPostCode,jdbcType=VARCHAR}, #{payTime,jdbcType=DATE}, #{validDays,jdbcType=INTEGER}, 
      #{handleTime,jdbcType=DATE}, #{hasReceipt,jdbcType=BIT}, #{acceptReceiptTime,jdbcType=DATE}, 
      #{status,jdbcType=TINYINT}, #{isSelfPrint,jdbcType=BIT}, #{isSelfPrintCount,jdbcType=INTEGER}, 
      #{isModify,jdbcType=BIT}, #{isBack,jdbcType=BIT}, #{reason,jdbcType=VARCHAR}, #{applyTime,jdbcType=TIMESTAMP}, 
      #{checkTime,jdbcType=TIMESTAMP}, #{printCount,jdbcType=INTEGER}, #{lastPrintTime,jdbcType=TIMESTAMP}, 
      #{lastPrintUserId,jdbcType=INTEGER}, #{userType,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="domain.member.MemberOutView">
    insert into ow_member_out_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="userCode != null">
        user_code,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="politicalStatus != null">
        political_status,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="toTitle != null">
        to_title,
      </if>
      <if test="toUnit != null">
        to_unit,
      </if>
      <if test="fromUnit != null">
        from_unit,
      </if>
      <if test="fromAddress != null">
        from_address,
      </if>
      <if test="fromPhone != null">
        from_phone,
      </if>
      <if test="fromFax != null">
        from_fax,
      </if>
      <if test="fromPostCode != null">
        from_post_code,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="validDays != null">
        valid_days,
      </if>
      <if test="handleTime != null">
        handle_time,
      </if>
      <if test="hasReceipt != null">
        has_receipt,
      </if>
      <if test="acceptReceiptTime != null">
        accept_receipt_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isSelfPrint != null">
        is_self_print,
      </if>
      <if test="isSelfPrintCount != null">
        is_self_print_count,
      </if>
      <if test="isModify != null">
        is_modify,
      </if>
      <if test="isBack != null">
        is_back,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
      <if test="printCount != null">
        print_count,
      </if>
      <if test="lastPrintTime != null">
        last_print_time,
      </if>
      <if test="lastPrintUserId != null">
        last_print_user_id,
      </if>
      <if test="userType != null">
        user_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=INTEGER},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="userCode != null">
        #{userCode,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null">
        #{politicalStatus,jdbcType=TINYINT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="toTitle != null">
        #{toTitle,jdbcType=VARCHAR},
      </if>
      <if test="toUnit != null">
        #{toUnit,jdbcType=VARCHAR},
      </if>
      <if test="fromUnit != null">
        #{fromUnit,jdbcType=VARCHAR},
      </if>
      <if test="fromAddress != null">
        #{fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="fromPhone != null">
        #{fromPhone,jdbcType=VARCHAR},
      </if>
      <if test="fromFax != null">
        #{fromFax,jdbcType=VARCHAR},
      </if>
      <if test="fromPostCode != null">
        #{fromPostCode,jdbcType=VARCHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=DATE},
      </if>
      <if test="validDays != null">
        #{validDays,jdbcType=INTEGER},
      </if>
      <if test="handleTime != null">
        #{handleTime,jdbcType=DATE},
      </if>
      <if test="hasReceipt != null">
        #{hasReceipt,jdbcType=BIT},
      </if>
      <if test="acceptReceiptTime != null">
        #{acceptReceiptTime,jdbcType=DATE},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="isSelfPrint != null">
        #{isSelfPrint,jdbcType=BIT},
      </if>
      <if test="isSelfPrintCount != null">
        #{isSelfPrintCount,jdbcType=INTEGER},
      </if>
      <if test="isModify != null">
        #{isModify,jdbcType=BIT},
      </if>
      <if test="isBack != null">
        #{isBack,jdbcType=BIT},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="printCount != null">
        #{printCount,jdbcType=INTEGER},
      </if>
      <if test="lastPrintTime != null">
        #{lastPrintTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastPrintUserId != null">
        #{lastPrintUserId,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.member.MemberOutViewExample" resultType="java.lang.Long">
    select count(*) from ow_member_out_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ow_member_out_view
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=INTEGER},
      </if>
      <if test="record.idcard != null">
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.userCode != null">
        user_code = #{record.userCode,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.politicalStatus != null">
        political_status = #{record.politicalStatus,jdbcType=TINYINT},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.toTitle != null">
        to_title = #{record.toTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.toUnit != null">
        to_unit = #{record.toUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.fromUnit != null">
        from_unit = #{record.fromUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.fromAddress != null">
        from_address = #{record.fromAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.fromPhone != null">
        from_phone = #{record.fromPhone,jdbcType=VARCHAR},
      </if>
      <if test="record.fromFax != null">
        from_fax = #{record.fromFax,jdbcType=VARCHAR},
      </if>
      <if test="record.fromPostCode != null">
        from_post_code = #{record.fromPostCode,jdbcType=VARCHAR},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=DATE},
      </if>
      <if test="record.validDays != null">
        valid_days = #{record.validDays,jdbcType=INTEGER},
      </if>
      <if test="record.handleTime != null">
        handle_time = #{record.handleTime,jdbcType=DATE},
      </if>
      <if test="record.hasReceipt != null">
        has_receipt = #{record.hasReceipt,jdbcType=BIT},
      </if>
      <if test="record.acceptReceiptTime != null">
        accept_receipt_time = #{record.acceptReceiptTime,jdbcType=DATE},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.isSelfPrint != null">
        is_self_print = #{record.isSelfPrint,jdbcType=BIT},
      </if>
      <if test="record.isSelfPrintCount != null">
        is_self_print_count = #{record.isSelfPrintCount,jdbcType=INTEGER},
      </if>
      <if test="record.isModify != null">
        is_modify = #{record.isModify,jdbcType=BIT},
      </if>
      <if test="record.isBack != null">
        is_back = #{record.isBack,jdbcType=BIT},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkTime != null">
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.printCount != null">
        print_count = #{record.printCount,jdbcType=INTEGER},
      </if>
      <if test="record.lastPrintTime != null">
        last_print_time = #{record.lastPrintTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastPrintUserId != null">
        last_print_user_id = #{record.lastPrintUserId,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ow_member_out_view
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      party_id = #{record.partyId,jdbcType=INTEGER},
      branch_id = #{record.branchId,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      sn = #{record.sn,jdbcType=INTEGER},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      user_code = #{record.userCode,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      age = #{record.age,jdbcType=INTEGER},
      nation = #{record.nation,jdbcType=VARCHAR},
      political_status = #{record.politicalStatus,jdbcType=TINYINT},
      phone = #{record.phone,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      to_title = #{record.toTitle,jdbcType=VARCHAR},
      to_unit = #{record.toUnit,jdbcType=VARCHAR},
      from_unit = #{record.fromUnit,jdbcType=VARCHAR},
      from_address = #{record.fromAddress,jdbcType=VARCHAR},
      from_phone = #{record.fromPhone,jdbcType=VARCHAR},
      from_fax = #{record.fromFax,jdbcType=VARCHAR},
      from_post_code = #{record.fromPostCode,jdbcType=VARCHAR},
      pay_time = #{record.payTime,jdbcType=DATE},
      valid_days = #{record.validDays,jdbcType=INTEGER},
      handle_time = #{record.handleTime,jdbcType=DATE},
      has_receipt = #{record.hasReceipt,jdbcType=BIT},
      accept_receipt_time = #{record.acceptReceiptTime,jdbcType=DATE},
      status = #{record.status,jdbcType=TINYINT},
      is_self_print = #{record.isSelfPrint,jdbcType=BIT},
      is_self_print_count = #{record.isSelfPrintCount,jdbcType=INTEGER},
      is_modify = #{record.isModify,jdbcType=BIT},
      is_back = #{record.isBack,jdbcType=BIT},
      reason = #{record.reason,jdbcType=VARCHAR},
      apply_time = #{record.applyTime,jdbcType=TIMESTAMP},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      print_count = #{record.printCount,jdbcType=INTEGER},
      last_print_time = #{record.lastPrintTime,jdbcType=TIMESTAMP},
      last_print_user_id = #{record.lastPrintUserId,jdbcType=INTEGER},
      user_type = #{record.userType,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.member.MemberOutViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_out_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>