<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.member.common.IMemberMapper">

    <sql id="member_selects_permits">
        <if test="addPermits">
            <if test="adminPartyIdList.size>0 and adminBranchIdList.size>0">
                and (
                party_id in
                <foreach collection="adminPartyIdList" item="partyId"
                         index="index" open="(" close=")" separator=",">
                    #{partyId}
                </foreach>
                or
                branch_id in
                <foreach collection="adminBranchIdList" item="branchId"
                         index="index" open="(" close=")" separator=",">
                    #{branchId}
                </foreach>
                )
            </if>
            <if test="adminPartyIdList.size>0 and adminBranchIdList.size==0">
                and party_id in
                <foreach collection="adminPartyIdList" item="partyId"
                         index="index" open="(" close=")" separator=",">
                    #{partyId}
                </foreach>
            </if>
            <if test="adminPartyIdList.size==0 and adminBranchIdList.size>0">
                and  branch_id in
                <foreach collection="adminBranchIdList" item="branchId"
                         index="index" open="(" close=")" separator=",">
                    #{branchId}
                </foreach>
            </if>
            <if test="adminPartyIdList.size==0 and adminBranchIdList.size==0">
                and m.user_id is null
            </if>
        </if>
    </sql>

    <sql id="selectMemberList_where">
        <if test="isRetire!=null">
            , sys_teacher_info ti
        </if>
        where m.user_id= u.id
        <if test="partyId!=null">
            and m.party_id =#{partyId}
        </if>
        <if test="branchId!=null">
            and m.branch_id =#{branchId}
        </if>
        <if test="type!=null">
            and m.type =#{type}
        </if>
        <if test="politicalStatus!=null">
            and m.political_status =#{politicalStatus}
        </if>
        <if test="statusList!=null and statusList.size>0">
            and m.status in
            <foreach collection="statusList" item="st"
                     index="index" open="(" close=")" separator=",">
                #{st}
            </foreach>
        </if>
        <if test="isRetire!=null">
            and ti.user_id=u.user_id
            <if test="isRetire">
                and ti.is_retire = 1
            </if>
            <if test="!isRetire">
                and (ti.is_retire <![CDATA[<>]]> 1)
            </if>
        </if>
        <include refid="member_selects_permits"/>
        <if test="search != null">
            and (u.username like #{search} or u.realname like #{search} or u.code like #{search})
        </if>
    </sql>
    <select id="selectMemberList" resultMap="persistence.member.MemberMapper.BaseResultMap" parameterType="map">
        select m.* from ow_member m, sys_user_view u
        <include refid="selectMemberList_where"/>
        order by m.grow_time desc
    </select>
    <select id="countMemberList" parameterType="map" resultType="java.lang.Integer">
        select count(m.user_id) from ow_member m, sys_user_view u
        <include refid="selectMemberList_where"/>
    </select>

    <select id="selectMemberInflowList" resultMap="persistence.member.MemberInflowMapper.BaseResultMap"
            parameterType="map">
        select m.* from ow_member_inflow m, sys_user_view user where m.user_id= user.id
        <if test="type!=null">
            and m.type =#{type}
        </if>
        <if test="inflowStatus!=null">
            and m.inflow_status =#{inflowStatus}
        </if>
        <if test="hasOutApply!=null">
            <if test="hasOutApply">
                and m.out_status in(0,1,2)
            </if>
            <if test="!hasOutApply">
                and (m.out_status is null or m.out_status=-1)
            </if>
        </if>
        <include refid="member_selects_permits"/>
        <if test="search != null">
            and (user.username like #{search} or user.realname like #{search} or user.code like #{search})
        </if>
        order by m.flow_time desc
    </select>
    <select id="countMemberInflowList" parameterType="map" resultType="java.lang.Integer">
        select count(m.user_id) from ow_member_inflow m, sys_user_view user where m.user_id= user.id
        <if test="type!=null">
            and m.type =#{type}
        </if>
        <if test="inflowStatus!=null">
            and m.inflow_status =#{inflowStatus}
        </if>
        <if test="hasOutApply!=null">
            <if test="hasOutApply">
                and m.out_status in(0,1,2)
            </if>
            <if test="!hasOutApply">
                and (m.out_status is null or m.out_status=-1)
            </if>
        </if>
        <include refid="member_selects_permits"/>
        <if test="search != null">
            and (user.username like #{search} or user.realname like #{search} or user.code like #{search})
        </if>
    </select>

    <select id="selectMemberApplyCount" parameterType="map" resultType="persistence.member.common.MemberApplyCount">
        select type, stage , count(*) as num from ow_member_apply_view m where m.member_status=0 and m.is_remove=0
        <include refid="member_selects_permits"/>
        group by type, stage
    </select>

    <select id="selectMemberTeacherCount" parameterType="map" resultType="map">
        select sum(if(status=1 and is_retire=0, 1, 0)) as teacher_normalCount,
        sum(if(status=1 and is_retire=1, 1, 0)) as teacher_retireCount,
        sum(if(status=4, 1, 0)) as teacher_transferCount, sum(if(status=1 or status=4, 1, 0)) total from ow_member_view m
        where m.type=1
        <include refid="member_selects_permits"/>
    </select>

    <select id="selectMemberStudentCount" parameterType="map" resultType="map">
        select sum(if(status=1, 1, 0)) as student_normalCount, sum(if(status=4, 1, 0)) as student_transferCount from ow_member_view m
        where m.type=2
        <include refid="member_selects_permits"/>
    </select>

    <sql id="userSearchSql">
        select * from sys_user_view
        <if test="query != null">
            <where>
                and username like '${query}%'
            </where>
            union
            select * from sys_user_view
            <where>
                and realname like '${query}%'
            </where>
            union
            select * from sys_user_view
            <where>
                and code like '${query}%'
            </where>
        </if>
    </sql>

    <select id="selectNotMemberList" resultMap="persistence.sys.SysUserViewMapper.BaseResultMap" parameterType="map">
        select * from (<include refid="userSearchSql" />) u
        where not exists(select 1 from ow_member where user_id=u.id and status=1)
        and role_ids not like "%${regRoleStr}%"
        order by create_time desc
    </select>
    <select id="countNotMemberList" parameterType="map" resultType="java.lang.Integer">
        select count(id) from (<include refid="userSearchSql" />) u
        where not exists(select 1 from ow_member where user_id=u.id and status=1)
        and role_ids not like "%${regRoleStr}%"
    </select>

    <update id="changeMemberParty" parameterType="map">
        update ow_member
        set
        party_id = #{partyId,jdbcType=INTEGER},
        branch_id = #{branchId,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="persistence.member.MemberMapper.Update_By_Example_Where_Clause"/>
        </if>
    </update>

    <update id="increasePrintCount" parameterType="map">
        update ${tableName}
        set
        print_count = print_count + 1,
        last_print_time = #{lastPrintTime},
        last_print_user_id = #{lastPrintUserId}
        where id in
        <foreach collection="idList" item="_id"
                 index="index" open="(" close=")" separator=",">
            #{_id}
        </foreach>
    </update>

    <sql id="memberOutSearchSql">
        <where>
        <!-- 查询状态为“组织部审批通过”的记录（不包含已归档记录） -->
        m.status =2
        <if test="type != null">
            and m.type=#{type}
        </if>
        <if test="query != null">
          and (uv.username like '${query}%'
              or uv.realname like '${query}%'
              or uv.code like '${query}%')
        </if>
        <include refid="member_selects_permits"/>
        </where>
    </sql>
    <select id="selectMemberOutList" resultMap="persistence.member.MemberOutViewMapper.BaseResultMap" parameterType="map">
        select m.* from ow_member_out_view m left join sys_user_view uv on m.user_id=uv.id
         <include refid="memberOutSearchSql"/>
        order by id desc
    </select>
    <select id="countMemberOutList" parameterType="map" resultType="java.lang.Integer">
       select count(m.id) from ow_member_out_view m left join sys_user_view uv on m.user_id=uv.id
         <include refid="memberOutSearchSql"/>
    </select>

    <select id="countMemberNotIntegrity" parameterType="map" resultType="map">

        select count(case when type = 2 then 1
        else null end) as student,
        count(case when type = 1 and is_retire = 0 then 1
        else null end) as teacher,
        count(case when type = 1 and is_retire = 1 then 1
        else null end)as retire
        from ow_member_view where status = 1
        <if test="partyId != null">
            and party_id =#{partyId}
        </if>
        <if test="branchId != null">
            and branch_id =#{branchId}
        </if>
        and integrity != 1;
    </select>

</mapper>