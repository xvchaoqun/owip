<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.member.MemberReportMapper">
  <resultMap id="BaseResultMap" type="domain.member.MemberReport">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="party_name" jdbcType="VARCHAR" property="partyName" />
    <result column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="branch_name" jdbcType="VARCHAR" property="branchName" />
    <result column="report_file" jdbcType="VARCHAR" property="reportFile" />
    <result column="eva_result" jdbcType="TINYINT" property="evaResult" />
    <result column="eva_file" jdbcType="VARCHAR" property="evaFile" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, user_id, party_id, party_name, branch_id, branch_name, report_file, eva_result, 
    eva_file, remark, status
  </sql>
  <select id="selectByExample" parameterType="domain.member.MemberReportExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ow_member_report
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ow_member_report
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.member.MemberReportExample">
    delete from ow_member_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.member.MemberReport">
    insert into ow_member_report (id, year, user_id, 
      party_id, party_name, branch_id, 
      branch_name, report_file, eva_result, 
      eva_file, remark, status
      )
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{partyId,jdbcType=INTEGER}, #{partyName,jdbcType=VARCHAR}, #{branchId,jdbcType=INTEGER}, 
      #{branchName,jdbcType=VARCHAR}, #{reportFile,jdbcType=VARCHAR}, #{evaResult,jdbcType=TINYINT}, 
      #{evaFile,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.member.MemberReport">
    insert into ow_member_report
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="partyName != null">
        party_name,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="branchName != null">
        branch_name,
      </if>
      <if test="reportFile != null">
        report_file,
      </if>
      <if test="evaResult != null">
        eva_result,
      </if>
      <if test="evaFile != null">
        eva_file,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="partyName != null">
        #{partyName,jdbcType=VARCHAR},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="branchName != null">
        #{branchName,jdbcType=VARCHAR},
      </if>
      <if test="reportFile != null">
        #{reportFile,jdbcType=VARCHAR},
      </if>
      <if test="evaResult != null">
        #{evaResult,jdbcType=TINYINT},
      </if>
      <if test="evaFile != null">
        #{evaFile,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.member.MemberReportExample" resultType="java.lang.Long">
    select count(*) from ow_member_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ow_member_report
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.partyName != null">
        party_name = #{record.partyName,jdbcType=VARCHAR},
      </if>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.branchName != null">
        branch_name = #{record.branchName,jdbcType=VARCHAR},
      </if>
      <if test="record.reportFile != null">
        report_file = #{record.reportFile,jdbcType=VARCHAR},
      </if>
      <if test="record.evaResult != null">
        eva_result = #{record.evaResult,jdbcType=TINYINT},
      </if>
      <if test="record.evaFile != null">
        eva_file = #{record.evaFile,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ow_member_report
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      party_id = #{record.partyId,jdbcType=INTEGER},
      party_name = #{record.partyName,jdbcType=VARCHAR},
      branch_id = #{record.branchId,jdbcType=INTEGER},
      branch_name = #{record.branchName,jdbcType=VARCHAR},
      report_file = #{record.reportFile,jdbcType=VARCHAR},
      eva_result = #{record.evaResult,jdbcType=TINYINT},
      eva_file = #{record.evaFile,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.member.MemberReport">
    update ow_member_report
    <set>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        party_id = #{partyId,jdbcType=INTEGER},
      </if>
      <if test="partyName != null">
        party_name = #{partyName,jdbcType=VARCHAR},
      </if>
      <if test="branchId != null">
        branch_id = #{branchId,jdbcType=INTEGER},
      </if>
      <if test="branchName != null">
        branch_name = #{branchName,jdbcType=VARCHAR},
      </if>
      <if test="reportFile != null">
        report_file = #{reportFile,jdbcType=VARCHAR},
      </if>
      <if test="evaResult != null">
        eva_result = #{evaResult,jdbcType=TINYINT},
      </if>
      <if test="evaFile != null">
        eva_file = #{evaFile,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.member.MemberReport">
    update ow_member_report
    set year = #{year,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      party_id = #{partyId,jdbcType=INTEGER},
      party_name = #{partyName,jdbcType=VARCHAR},
      branch_id = #{branchId,jdbcType=INTEGER},
      branch_name = #{branchName,jdbcType=VARCHAR},
      report_file = #{reportFile,jdbcType=VARCHAR},
      eva_result = #{evaResult,jdbcType=TINYINT},
      eva_file = #{evaFile,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.member.MemberReportExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_report
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>