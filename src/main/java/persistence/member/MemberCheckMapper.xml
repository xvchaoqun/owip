<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.member.MemberCheckMapper">
  <resultMap id="BaseResultMap" type="domain.member.MemberCheck">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="political_status" jdbcType="TINYINT" property="politicalStatus" />
    <result column="transfer_time" jdbcType="DATE" property="transferTime" />
    <result column="apply_time" jdbcType="DATE" property="applyTime" />
    <result column="active_time" jdbcType="DATE" property="activeTime" />
    <result column="candidate_time" jdbcType="DATE" property="candidateTime" />
    <result column="sponsor" jdbcType="VARCHAR" property="sponsor" />
    <result column="grow_time" jdbcType="DATE" property="growTime" />
    <result column="grow_branch" jdbcType="VARCHAR" property="growBranch" />
    <result column="positive_time" jdbcType="DATE" property="positiveTime" />
    <result column="positive_branch" jdbcType="VARCHAR" property="positiveBranch" />
    <result column="party_post" jdbcType="VARCHAR" property="partyPost" />
    <result column="party_reward" jdbcType="VARCHAR" property="partyReward" />
    <result column="other_reward" jdbcType="VARCHAR" property="otherReward" />
    <result column="original_json" jdbcType="VARCHAR" property="originalJson" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, party_id, branch_id, native_place, mobile, phone, email, political_status, 
    transfer_time, apply_time, active_time, candidate_time, sponsor, grow_time, grow_branch, 
    positive_time, positive_branch, party_post, party_reward, other_reward, original_json, 
    create_time, ip, status, reason
  </sql>
  <select id="selectByExample" parameterType="domain.member.MemberCheckExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ow_member_check
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ow_member_check
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.member.MemberCheckExample">
    delete from ow_member_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.member.MemberCheck">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ow_member_check (user_id, party_id, branch_id, 
      native_place, mobile, phone, 
      email, political_status, transfer_time, 
      apply_time, active_time, candidate_time, 
      sponsor, grow_time, grow_branch, 
      positive_time, positive_branch, party_post, 
      party_reward, other_reward, original_json, 
      create_time, ip, status, 
      reason)
    values (#{userId,jdbcType=INTEGER}, #{partyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, 
      #{nativePlace,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{politicalStatus,jdbcType=TINYINT}, #{transferTime,jdbcType=DATE}, 
      #{applyTime,jdbcType=DATE}, #{activeTime,jdbcType=DATE}, #{candidateTime,jdbcType=DATE}, 
      #{sponsor,jdbcType=VARCHAR}, #{growTime,jdbcType=DATE}, #{growBranch,jdbcType=VARCHAR}, 
      #{positiveTime,jdbcType=DATE}, #{positiveBranch,jdbcType=VARCHAR}, #{partyPost,jdbcType=VARCHAR}, 
      #{partyReward,jdbcType=VARCHAR}, #{otherReward,jdbcType=VARCHAR}, #{originalJson,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{reason,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.member.MemberCheck">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ow_member_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="nativePlace != null">
        native_place,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="politicalStatus != null">
        political_status,
      </if>
      <if test="transferTime != null">
        transfer_time,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="activeTime != null">
        active_time,
      </if>
      <if test="candidateTime != null">
        candidate_time,
      </if>
      <if test="sponsor != null">
        sponsor,
      </if>
      <if test="growTime != null">
        grow_time,
      </if>
      <if test="growBranch != null">
        grow_branch,
      </if>
      <if test="positiveTime != null">
        positive_time,
      </if>
      <if test="positiveBranch != null">
        positive_branch,
      </if>
      <if test="partyPost != null">
        party_post,
      </if>
      <if test="partyReward != null">
        party_reward,
      </if>
      <if test="otherReward != null">
        other_reward,
      </if>
      <if test="originalJson != null">
        original_json,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="reason != null">
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="nativePlace != null">
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null">
        #{politicalStatus,jdbcType=TINYINT},
      </if>
      <if test="transferTime != null">
        #{transferTime,jdbcType=DATE},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=DATE},
      </if>
      <if test="activeTime != null">
        #{activeTime,jdbcType=DATE},
      </if>
      <if test="candidateTime != null">
        #{candidateTime,jdbcType=DATE},
      </if>
      <if test="sponsor != null">
        #{sponsor,jdbcType=VARCHAR},
      </if>
      <if test="growTime != null">
        #{growTime,jdbcType=DATE},
      </if>
      <if test="growBranch != null">
        #{growBranch,jdbcType=VARCHAR},
      </if>
      <if test="positiveTime != null">
        #{positiveTime,jdbcType=DATE},
      </if>
      <if test="positiveBranch != null">
        #{positiveBranch,jdbcType=VARCHAR},
      </if>
      <if test="partyPost != null">
        #{partyPost,jdbcType=VARCHAR},
      </if>
      <if test="partyReward != null">
        #{partyReward,jdbcType=VARCHAR},
      </if>
      <if test="otherReward != null">
        #{otherReward,jdbcType=VARCHAR},
      </if>
      <if test="originalJson != null">
        #{originalJson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.member.MemberCheckExample" resultType="java.lang.Long">
    select count(*) from ow_member_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ow_member_check
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.nativePlace != null">
        native_place = #{record.nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.politicalStatus != null">
        political_status = #{record.politicalStatus,jdbcType=TINYINT},
      </if>
      <if test="record.transferTime != null">
        transfer_time = #{record.transferTime,jdbcType=DATE},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=DATE},
      </if>
      <if test="record.activeTime != null">
        active_time = #{record.activeTime,jdbcType=DATE},
      </if>
      <if test="record.candidateTime != null">
        candidate_time = #{record.candidateTime,jdbcType=DATE},
      </if>
      <if test="record.sponsor != null">
        sponsor = #{record.sponsor,jdbcType=VARCHAR},
      </if>
      <if test="record.growTime != null">
        grow_time = #{record.growTime,jdbcType=DATE},
      </if>
      <if test="record.growBranch != null">
        grow_branch = #{record.growBranch,jdbcType=VARCHAR},
      </if>
      <if test="record.positiveTime != null">
        positive_time = #{record.positiveTime,jdbcType=DATE},
      </if>
      <if test="record.positiveBranch != null">
        positive_branch = #{record.positiveBranch,jdbcType=VARCHAR},
      </if>
      <if test="record.partyPost != null">
        party_post = #{record.partyPost,jdbcType=VARCHAR},
      </if>
      <if test="record.partyReward != null">
        party_reward = #{record.partyReward,jdbcType=VARCHAR},
      </if>
      <if test="record.otherReward != null">
        other_reward = #{record.otherReward,jdbcType=VARCHAR},
      </if>
      <if test="record.originalJson != null">
        original_json = #{record.originalJson,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ow_member_check
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      party_id = #{record.partyId,jdbcType=INTEGER},
      branch_id = #{record.branchId,jdbcType=INTEGER},
      native_place = #{record.nativePlace,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      political_status = #{record.politicalStatus,jdbcType=TINYINT},
      transfer_time = #{record.transferTime,jdbcType=DATE},
      apply_time = #{record.applyTime,jdbcType=DATE},
      active_time = #{record.activeTime,jdbcType=DATE},
      candidate_time = #{record.candidateTime,jdbcType=DATE},
      sponsor = #{record.sponsor,jdbcType=VARCHAR},
      grow_time = #{record.growTime,jdbcType=DATE},
      grow_branch = #{record.growBranch,jdbcType=VARCHAR},
      positive_time = #{record.positiveTime,jdbcType=DATE},
      positive_branch = #{record.positiveBranch,jdbcType=VARCHAR},
      party_post = #{record.partyPost,jdbcType=VARCHAR},
      party_reward = #{record.partyReward,jdbcType=VARCHAR},
      other_reward = #{record.otherReward,jdbcType=VARCHAR},
      original_json = #{record.originalJson,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      reason = #{record.reason,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.member.MemberCheck">
    update ow_member_check
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        party_id = #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        branch_id = #{branchId,jdbcType=INTEGER},
      </if>
      <if test="nativePlace != null">
        native_place = #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="politicalStatus != null">
        political_status = #{politicalStatus,jdbcType=TINYINT},
      </if>
      <if test="transferTime != null">
        transfer_time = #{transferTime,jdbcType=DATE},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=DATE},
      </if>
      <if test="activeTime != null">
        active_time = #{activeTime,jdbcType=DATE},
      </if>
      <if test="candidateTime != null">
        candidate_time = #{candidateTime,jdbcType=DATE},
      </if>
      <if test="sponsor != null">
        sponsor = #{sponsor,jdbcType=VARCHAR},
      </if>
      <if test="growTime != null">
        grow_time = #{growTime,jdbcType=DATE},
      </if>
      <if test="growBranch != null">
        grow_branch = #{growBranch,jdbcType=VARCHAR},
      </if>
      <if test="positiveTime != null">
        positive_time = #{positiveTime,jdbcType=DATE},
      </if>
      <if test="positiveBranch != null">
        positive_branch = #{positiveBranch,jdbcType=VARCHAR},
      </if>
      <if test="partyPost != null">
        party_post = #{partyPost,jdbcType=VARCHAR},
      </if>
      <if test="partyReward != null">
        party_reward = #{partyReward,jdbcType=VARCHAR},
      </if>
      <if test="otherReward != null">
        other_reward = #{otherReward,jdbcType=VARCHAR},
      </if>
      <if test="originalJson != null">
        original_json = #{originalJson,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.member.MemberCheck">
    update ow_member_check
    set user_id = #{userId,jdbcType=INTEGER},
      party_id = #{partyId,jdbcType=INTEGER},
      branch_id = #{branchId,jdbcType=INTEGER},
      native_place = #{nativePlace,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      political_status = #{politicalStatus,jdbcType=TINYINT},
      transfer_time = #{transferTime,jdbcType=DATE},
      apply_time = #{applyTime,jdbcType=DATE},
      active_time = #{activeTime,jdbcType=DATE},
      candidate_time = #{candidateTime,jdbcType=DATE},
      sponsor = #{sponsor,jdbcType=VARCHAR},
      grow_time = #{growTime,jdbcType=DATE},
      grow_branch = #{growBranch,jdbcType=VARCHAR},
      positive_time = #{positiveTime,jdbcType=DATE},
      positive_branch = #{positiveBranch,jdbcType=VARCHAR},
      party_post = #{partyPost,jdbcType=VARCHAR},
      party_reward = #{partyReward,jdbcType=VARCHAR},
      other_reward = #{otherReward,jdbcType=VARCHAR},
      original_json = #{originalJson,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      reason = #{reason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.member.MemberCheckExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>