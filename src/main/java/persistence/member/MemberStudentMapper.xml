<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.member.MemberStudentMapper">
  <resultMap id="BaseResultMap" type="domain.member.MemberStudent">
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="apply_time" jdbcType="DATE" property="applyTime" />
    <result column="member_source" jdbcType="TINYINT" property="memberSource" />
    <result column="add_type" jdbcType="INTEGER" property="addType" />
    <result column="source" jdbcType="TINYINT" property="source" />
    <result column="positive_time" jdbcType="DATE" property="positiveTime" />
    <result column="active_time" jdbcType="DATE" property="activeTime" />
    <result column="political_status" jdbcType="TINYINT" property="politicalStatus" />
    <result column="transfer_time" jdbcType="TIMESTAMP" property="transferTime" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="candidate_time" jdbcType="DATE" property="candidateTime" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="sponsor" jdbcType="VARCHAR" property="sponsor" />
    <result column="grow_branch" jdbcType="VARCHAR" property="growBranch" />
    <result column="positive_branch" jdbcType="VARCHAR" property="positiveBranch" />
    <result column="grow_time" jdbcType="DATE" property="growTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="party_post" jdbcType="VARCHAR" property="partyPost" />
    <result column="party_reward" jdbcType="VARCHAR" property="partyReward" />
    <result column="other_reward" jdbcType="VARCHAR" property="otherReward" />
    <result column="delay_year" jdbcType="REAL" property="delayYear" />
    <result column="period" jdbcType="VARCHAR" property="period" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="edu_category" jdbcType="VARCHAR" property="eduCategory" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="actual_graduate_time" jdbcType="DATE" property="actualGraduateTime" />
    <result column="expect_graduate_time" jdbcType="DATE" property="expectGraduateTime" />
    <result column="actual_enrol_time" jdbcType="DATE" property="actualEnrolTime" />
    <result column="sync_source" jdbcType="TINYINT" property="syncSource" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="is_full_time" jdbcType="BIT" property="isFullTime" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="enrol_year" jdbcType="VARCHAR" property="enrolYear" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="edu_way" jdbcType="VARCHAR" property="eduWay" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="edu_level" jdbcType="VARCHAR" property="eduLevel" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="edu_type" jdbcType="VARCHAR" property="eduType" />
    <result column="xj_status" jdbcType="VARCHAR" property="xjStatus" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="out_status" jdbcType="TINYINT" property="outStatus" />
    <result column="out_handle_time" jdbcType="DATE" property="outHandleTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    create_time, apply_time, member_source, add_type, source, positive_time, active_time, 
    political_status, transfer_time, user_id, branch_id, candidate_time, party_id, sponsor, 
    grow_branch, positive_branch, grow_time, status, party_post, party_reward, other_reward, 
    delay_year, period, code, edu_category, gender, birth, nation, actual_graduate_time, 
    expect_graduate_time, actual_enrol_time, sync_source, type, is_full_time, realname, 
    enrol_year, native_place, edu_way, idcard, edu_level, grade, edu_type, xj_status, 
    unit_id, out_status, out_handle_time
  </sql>
  <select id="selectByExample" parameterType="domain.member.MemberStudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="countByExample" parameterType="domain.member.MemberStudentExample" resultType="java.lang.Long">
    select count(*) from ow_member_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="domain.member.MemberStudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>