<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.member.MemberStudentMapper" >
  <resultMap id="BaseResultMap" type="domain.member.MemberStudent" >
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="apply_time" property="applyTime" jdbcType="DATE" />
    <result column="source" property="source" jdbcType="TINYINT" />
    <result column="positive_time" property="positiveTime" jdbcType="DATE" />
    <result column="active_time" property="activeTime" jdbcType="DATE" />
    <result column="political_status" property="politicalStatus" jdbcType="TINYINT" />
    <result column="transfer_time" property="transferTime" jdbcType="TIMESTAMP" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="branch_id" property="branchId" jdbcType="INTEGER" />
    <result column="candidate_time" property="candidateTime" jdbcType="DATE" />
    <result column="party_id" property="partyId" jdbcType="INTEGER" />
    <result column="grow_time" property="growTime" jdbcType="DATE" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="party_post" property="partyPost" jdbcType="VARCHAR" />
    <result column="party_reward" property="partyReward" jdbcType="VARCHAR" />
    <result column="other_reward" property="otherReward" jdbcType="VARCHAR" />
    <result column="delay_year" property="delayYear" jdbcType="REAL" />
    <result column="period" property="period" jdbcType="VARCHAR" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="edu_category" property="eduCategory" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="TINYINT" />
    <result column="birth" property="birth" jdbcType="DATE" />
    <result column="nation" property="nation" jdbcType="VARCHAR" />
    <result column="actual_graduate_time" property="actualGraduateTime" jdbcType="DATE" />
    <result column="expect_graduate_time" property="expectGraduateTime" jdbcType="DATE" />
    <result column="actual_enrol_time" property="actualEnrolTime" jdbcType="DATE" />
    <result column="sync_source" property="syncSource" jdbcType="TINYINT" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="is_full_time" property="isFullTime" jdbcType="BIT" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="enrol_year" property="enrolYear" jdbcType="VARCHAR" />
    <result column="native_place" property="nativePlace" jdbcType="VARCHAR" />
    <result column="edu_way" property="eduWay" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="edu_level" property="eduLevel" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="edu_type" property="eduType" jdbcType="VARCHAR" />
    <result column="xj_status" property="xjStatus" jdbcType="VARCHAR" />
    <result column="unit_id" property="unitId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    create_time, apply_time, source, positive_time, active_time, political_status, transfer_time, 
    user_id, branch_id, candidate_time, party_id, grow_time, status, party_post, party_reward, 
    other_reward, delay_year, period, code, edu_category, gender, birth, nation, actual_graduate_time, 
    expect_graduate_time, actual_enrol_time, sync_source, type, is_full_time, realname, 
    enrol_year, native_place, edu_way, idcard, edu_level, grade, edu_type, xj_status, 
    unit_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="domain.member.MemberStudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="domain.member.MemberStudentExample" >
    delete from ow_member_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.member.MemberStudent" >
    insert into ow_member_student (create_time, apply_time, source, 
      positive_time, active_time, political_status, 
      transfer_time, user_id, branch_id, 
      candidate_time, party_id, grow_time, 
      status, party_post, party_reward, 
      other_reward, delay_year, period, 
      code, edu_category, gender, 
      birth, nation, actual_graduate_time, 
      expect_graduate_time, actual_enrol_time, sync_source, 
      type, is_full_time, realname, 
      enrol_year, native_place, edu_way, 
      idcard, edu_level, grade, 
      edu_type, xj_status, unit_id
      )
    values (#{createTime,jdbcType=TIMESTAMP}, #{applyTime,jdbcType=DATE}, #{source,jdbcType=TINYINT}, 
      #{positiveTime,jdbcType=DATE}, #{activeTime,jdbcType=DATE}, #{politicalStatus,jdbcType=TINYINT}, 
      #{transferTime,jdbcType=TIMESTAMP}, #{userId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, 
      #{candidateTime,jdbcType=DATE}, #{partyId,jdbcType=INTEGER}, #{growTime,jdbcType=DATE}, 
      #{status,jdbcType=TINYINT}, #{partyPost,jdbcType=VARCHAR}, #{partyReward,jdbcType=VARCHAR}, 
      #{otherReward,jdbcType=VARCHAR}, #{delayYear,jdbcType=REAL}, #{period,jdbcType=VARCHAR}, 
      #{code,jdbcType=VARCHAR}, #{eduCategory,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, 
      #{birth,jdbcType=DATE}, #{nation,jdbcType=VARCHAR}, #{actualGraduateTime,jdbcType=DATE}, 
      #{expectGraduateTime,jdbcType=DATE}, #{actualEnrolTime,jdbcType=DATE}, #{syncSource,jdbcType=TINYINT}, 
      #{type,jdbcType=VARCHAR}, #{isFullTime,jdbcType=BIT}, #{realname,jdbcType=VARCHAR}, 
      #{enrolYear,jdbcType=VARCHAR}, #{nativePlace,jdbcType=VARCHAR}, #{eduWay,jdbcType=VARCHAR}, 
      #{idcard,jdbcType=VARCHAR}, #{eduLevel,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, 
      #{eduType,jdbcType=VARCHAR}, #{xjStatus,jdbcType=VARCHAR}, #{unitId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.member.MemberStudent" >
    insert into ow_member_student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="applyTime != null" >
        apply_time,
      </if>
      <if test="source != null" >
        source,
      </if>
      <if test="positiveTime != null" >
        positive_time,
      </if>
      <if test="activeTime != null" >
        active_time,
      </if>
      <if test="politicalStatus != null" >
        political_status,
      </if>
      <if test="transferTime != null" >
        transfer_time,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="branchId != null" >
        branch_id,
      </if>
      <if test="candidateTime != null" >
        candidate_time,
      </if>
      <if test="partyId != null" >
        party_id,
      </if>
      <if test="growTime != null" >
        grow_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="partyPost != null" >
        party_post,
      </if>
      <if test="partyReward != null" >
        party_reward,
      </if>
      <if test="otherReward != null" >
        other_reward,
      </if>
      <if test="delayYear != null" >
        delay_year,
      </if>
      <if test="period != null" >
        period,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="eduCategory != null" >
        edu_category,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="birth != null" >
        birth,
      </if>
      <if test="nation != null" >
        nation,
      </if>
      <if test="actualGraduateTime != null" >
        actual_graduate_time,
      </if>
      <if test="expectGraduateTime != null" >
        expect_graduate_time,
      </if>
      <if test="actualEnrolTime != null" >
        actual_enrol_time,
      </if>
      <if test="syncSource != null" >
        sync_source,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="isFullTime != null" >
        is_full_time,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="enrolYear != null" >
        enrol_year,
      </if>
      <if test="nativePlace != null" >
        native_place,
      </if>
      <if test="eduWay != null" >
        edu_way,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="eduLevel != null" >
        edu_level,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="eduType != null" >
        edu_type,
      </if>
      <if test="xjStatus != null" >
        xj_status,
      </if>
      <if test="unitId != null" >
        unit_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyTime != null" >
        #{applyTime,jdbcType=DATE},
      </if>
      <if test="source != null" >
        #{source,jdbcType=TINYINT},
      </if>
      <if test="positiveTime != null" >
        #{positiveTime,jdbcType=DATE},
      </if>
      <if test="activeTime != null" >
        #{activeTime,jdbcType=DATE},
      </if>
      <if test="politicalStatus != null" >
        #{politicalStatus,jdbcType=TINYINT},
      </if>
      <if test="transferTime != null" >
        #{transferTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null" >
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="candidateTime != null" >
        #{candidateTime,jdbcType=DATE},
      </if>
      <if test="partyId != null" >
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="growTime != null" >
        #{growTime,jdbcType=DATE},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="partyPost != null" >
        #{partyPost,jdbcType=VARCHAR},
      </if>
      <if test="partyReward != null" >
        #{partyReward,jdbcType=VARCHAR},
      </if>
      <if test="otherReward != null" >
        #{otherReward,jdbcType=VARCHAR},
      </if>
      <if test="delayYear != null" >
        #{delayYear,jdbcType=REAL},
      </if>
      <if test="period != null" >
        #{period,jdbcType=VARCHAR},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="eduCategory != null" >
        #{eduCategory,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=DATE},
      </if>
      <if test="nation != null" >
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="actualGraduateTime != null" >
        #{actualGraduateTime,jdbcType=DATE},
      </if>
      <if test="expectGraduateTime != null" >
        #{expectGraduateTime,jdbcType=DATE},
      </if>
      <if test="actualEnrolTime != null" >
        #{actualEnrolTime,jdbcType=DATE},
      </if>
      <if test="syncSource != null" >
        #{syncSource,jdbcType=TINYINT},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="isFullTime != null" >
        #{isFullTime,jdbcType=BIT},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="enrolYear != null" >
        #{enrolYear,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null" >
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="eduWay != null" >
        #{eduWay,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="eduLevel != null" >
        #{eduLevel,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="eduType != null" >
        #{eduType,jdbcType=VARCHAR},
      </if>
      <if test="xjStatus != null" >
        #{xjStatus,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null" >
        #{unitId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.member.MemberStudentExample" resultType="java.lang.Integer" >
    select count(*) from ow_member_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ow_member_student
    <set >
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.applyTime != null" >
        apply_time = #{record.applyTime,jdbcType=DATE},
      </if>
      <if test="record.source != null" >
        source = #{record.source,jdbcType=TINYINT},
      </if>
      <if test="record.positiveTime != null" >
        positive_time = #{record.positiveTime,jdbcType=DATE},
      </if>
      <if test="record.activeTime != null" >
        active_time = #{record.activeTime,jdbcType=DATE},
      </if>
      <if test="record.politicalStatus != null" >
        political_status = #{record.politicalStatus,jdbcType=TINYINT},
      </if>
      <if test="record.transferTime != null" >
        transfer_time = #{record.transferTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.branchId != null" >
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.candidateTime != null" >
        candidate_time = #{record.candidateTime,jdbcType=DATE},
      </if>
      <if test="record.partyId != null" >
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.growTime != null" >
        grow_time = #{record.growTime,jdbcType=DATE},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.partyPost != null" >
        party_post = #{record.partyPost,jdbcType=VARCHAR},
      </if>
      <if test="record.partyReward != null" >
        party_reward = #{record.partyReward,jdbcType=VARCHAR},
      </if>
      <if test="record.otherReward != null" >
        other_reward = #{record.otherReward,jdbcType=VARCHAR},
      </if>
      <if test="record.delayYear != null" >
        delay_year = #{record.delayYear,jdbcType=REAL},
      </if>
      <if test="record.period != null" >
        period = #{record.period,jdbcType=VARCHAR},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.eduCategory != null" >
        edu_category = #{record.eduCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.birth != null" >
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.nation != null" >
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.actualGraduateTime != null" >
        actual_graduate_time = #{record.actualGraduateTime,jdbcType=DATE},
      </if>
      <if test="record.expectGraduateTime != null" >
        expect_graduate_time = #{record.expectGraduateTime,jdbcType=DATE},
      </if>
      <if test="record.actualEnrolTime != null" >
        actual_enrol_time = #{record.actualEnrolTime,jdbcType=DATE},
      </if>
      <if test="record.syncSource != null" >
        sync_source = #{record.syncSource,jdbcType=TINYINT},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.isFullTime != null" >
        is_full_time = #{record.isFullTime,jdbcType=BIT},
      </if>
      <if test="record.realname != null" >
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.enrolYear != null" >
        enrol_year = #{record.enrolYear,jdbcType=VARCHAR},
      </if>
      <if test="record.nativePlace != null" >
        native_place = #{record.nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.eduWay != null" >
        edu_way = #{record.eduWay,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null" >
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.eduLevel != null" >
        edu_level = #{record.eduLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.eduType != null" >
        edu_type = #{record.eduType,jdbcType=VARCHAR},
      </if>
      <if test="record.xjStatus != null" >
        xj_status = #{record.xjStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.unitId != null" >
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ow_member_student
    set create_time = #{record.createTime,jdbcType=TIMESTAMP},
      apply_time = #{record.applyTime,jdbcType=DATE},
      source = #{record.source,jdbcType=TINYINT},
      positive_time = #{record.positiveTime,jdbcType=DATE},
      active_time = #{record.activeTime,jdbcType=DATE},
      political_status = #{record.politicalStatus,jdbcType=TINYINT},
      transfer_time = #{record.transferTime,jdbcType=TIMESTAMP},
      user_id = #{record.userId,jdbcType=INTEGER},
      branch_id = #{record.branchId,jdbcType=INTEGER},
      candidate_time = #{record.candidateTime,jdbcType=DATE},
      party_id = #{record.partyId,jdbcType=INTEGER},
      grow_time = #{record.growTime,jdbcType=DATE},
      status = #{record.status,jdbcType=TINYINT},
      party_post = #{record.partyPost,jdbcType=VARCHAR},
      party_reward = #{record.partyReward,jdbcType=VARCHAR},
      other_reward = #{record.otherReward,jdbcType=VARCHAR},
      delay_year = #{record.delayYear,jdbcType=REAL},
      period = #{record.period,jdbcType=VARCHAR},
      code = #{record.code,jdbcType=VARCHAR},
      edu_category = #{record.eduCategory,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      birth = #{record.birth,jdbcType=DATE},
      nation = #{record.nation,jdbcType=VARCHAR},
      actual_graduate_time = #{record.actualGraduateTime,jdbcType=DATE},
      expect_graduate_time = #{record.expectGraduateTime,jdbcType=DATE},
      actual_enrol_time = #{record.actualEnrolTime,jdbcType=DATE},
      sync_source = #{record.syncSource,jdbcType=TINYINT},
      type = #{record.type,jdbcType=VARCHAR},
      is_full_time = #{record.isFullTime,jdbcType=BIT},
      realname = #{record.realname,jdbcType=VARCHAR},
      enrol_year = #{record.enrolYear,jdbcType=VARCHAR},
      native_place = #{record.nativePlace,jdbcType=VARCHAR},
      edu_way = #{record.eduWay,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      edu_level = #{record.eduLevel,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      edu_type = #{record.eduType,jdbcType=VARCHAR},
      xj_status = #{record.xjStatus,jdbcType=VARCHAR},
      unit_id = #{record.unitId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select resultMap="BaseResultMap" parameterType="domain.member.MemberStudentExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>