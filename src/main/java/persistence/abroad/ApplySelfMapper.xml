<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.abroad.ApplySelfMapper">
  <resultMap id="BaseResultMap" type="domain.abroad.ApplySelf">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cadre_id" jdbcType="INTEGER" property="cadreId" />
    <result column="apply_date" jdbcType="DATE" property="applyDate" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="to_country" jdbcType="VARCHAR" property="toCountry" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="peer_staff" jdbcType="VARCHAR" property="peerStaff" />
    <result column="cost_source" jdbcType="VARCHAR" property="costSource" />
    <result column="need_passports" jdbcType="VARCHAR" property="needPassports" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="status" jdbcType="BIT" property="status" />
    <result column="is_finish" jdbcType="BIT" property="isFinish" />
    <result column="flow_node" jdbcType="INTEGER" property="flowNode" />
    <result column="flow_nodes" jdbcType="VARCHAR" property="flowNodes" />
    <result column="flow_users" jdbcType="VARCHAR" property="flowUsers" />
    <result column="is_agreed" jdbcType="BIT" property="isAgreed" />
    <result column="is_modify" jdbcType="BIT" property="isModify" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cadre_id, apply_date, type, start_date, end_date, to_country, reason, peer_staff, 
    cost_source, need_passports, create_time, ip, status, is_finish, flow_node, flow_nodes, 
    flow_users, is_agreed, is_modify, is_deleted, remark
  </sql>
  <select id="selectByExample" parameterType="domain.abroad.ApplySelfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from abroad_apply_self
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from abroad_apply_self
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from abroad_apply_self
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.abroad.ApplySelfExample">
    delete from abroad_apply_self
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert keyProperty="id" id="insert" parameterType="domain.abroad.ApplySelf">
    insert into abroad_apply_self (id, cadre_id, apply_date, 
      type, start_date, end_date, 
      to_country, reason, peer_staff, 
      cost_source, need_passports, create_time, 
      ip, status, is_finish, flow_node, 
      flow_nodes, flow_users, is_agreed, 
      is_modify, is_deleted, remark
      )
    values (#{id,jdbcType=INTEGER}, #{cadreId,jdbcType=INTEGER}, #{applyDate,jdbcType=DATE}, 
      #{type,jdbcType=TINYINT}, #{startDate,jdbcType=DATE}, #{endDate,jdbcType=DATE}, 
      #{toCountry,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, #{peerStaff,jdbcType=VARCHAR}, 
      #{costSource,jdbcType=VARCHAR}, #{needPassports,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{ip,jdbcType=VARCHAR}, #{status,jdbcType=BIT}, #{isFinish,jdbcType=BIT}, #{flowNode,jdbcType=INTEGER}, 
      #{flowNodes,jdbcType=VARCHAR}, #{flowUsers,jdbcType=VARCHAR}, #{isAgreed,jdbcType=BIT}, 
      #{isModify,jdbcType=BIT}, #{isDeleted,jdbcType=BIT}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert keyProperty="id" id="insertSelective" parameterType="domain.abroad.ApplySelf">
    insert into abroad_apply_self
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cadreId != null">
        cadre_id,
      </if>
      <if test="applyDate != null">
        apply_date,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="toCountry != null">
        to_country,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="peerStaff != null">
        peer_staff,
      </if>
      <if test="costSource != null">
        cost_source,
      </if>
      <if test="needPassports != null">
        need_passports,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="isFinish != null">
        is_finish,
      </if>
      <if test="flowNode != null">
        flow_node,
      </if>
      <if test="flowNodes != null">
        flow_nodes,
      </if>
      <if test="flowUsers != null">
        flow_users,
      </if>
      <if test="isAgreed != null">
        is_agreed,
      </if>
      <if test="isModify != null">
        is_modify,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cadreId != null">
        #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="applyDate != null">
        #{applyDate,jdbcType=DATE},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="toCountry != null">
        #{toCountry,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="peerStaff != null">
        #{peerStaff,jdbcType=VARCHAR},
      </if>
      <if test="costSource != null">
        #{costSource,jdbcType=VARCHAR},
      </if>
      <if test="needPassports != null">
        #{needPassports,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=BIT},
      </if>
      <if test="isFinish != null">
        #{isFinish,jdbcType=BIT},
      </if>
      <if test="flowNode != null">
        #{flowNode,jdbcType=INTEGER},
      </if>
      <if test="flowNodes != null">
        #{flowNodes,jdbcType=VARCHAR},
      </if>
      <if test="flowUsers != null">
        #{flowUsers,jdbcType=VARCHAR},
      </if>
      <if test="isAgreed != null">
        #{isAgreed,jdbcType=BIT},
      </if>
      <if test="isModify != null">
        #{isModify,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.abroad.ApplySelfExample" resultType="java.lang.Long">
    select count(*) from abroad_apply_self
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update abroad_apply_self
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cadreId != null">
        cadre_id = #{record.cadreId,jdbcType=INTEGER},
      </if>
      <if test="record.applyDate != null">
        apply_date = #{record.applyDate,jdbcType=DATE},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.toCountry != null">
        to_country = #{record.toCountry,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.peerStaff != null">
        peer_staff = #{record.peerStaff,jdbcType=VARCHAR},
      </if>
      <if test="record.costSource != null">
        cost_source = #{record.costSource,jdbcType=VARCHAR},
      </if>
      <if test="record.needPassports != null">
        need_passports = #{record.needPassports,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.isFinish != null">
        is_finish = #{record.isFinish,jdbcType=BIT},
      </if>
      <if test="record.flowNode != null">
        flow_node = #{record.flowNode,jdbcType=INTEGER},
      </if>
      <if test="record.flowNodes != null">
        flow_nodes = #{record.flowNodes,jdbcType=VARCHAR},
      </if>
      <if test="record.flowUsers != null">
        flow_users = #{record.flowUsers,jdbcType=VARCHAR},
      </if>
      <if test="record.isAgreed != null">
        is_agreed = #{record.isAgreed,jdbcType=BIT},
      </if>
      <if test="record.isModify != null">
        is_modify = #{record.isModify,jdbcType=BIT},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update abroad_apply_self
    set id = #{record.id,jdbcType=INTEGER},
      cadre_id = #{record.cadreId,jdbcType=INTEGER},
      apply_date = #{record.applyDate,jdbcType=DATE},
      type = #{record.type,jdbcType=TINYINT},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      to_country = #{record.toCountry,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      peer_staff = #{record.peerStaff,jdbcType=VARCHAR},
      cost_source = #{record.costSource,jdbcType=VARCHAR},
      need_passports = #{record.needPassports,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=BIT},
      is_finish = #{record.isFinish,jdbcType=BIT},
      flow_node = #{record.flowNode,jdbcType=INTEGER},
      flow_nodes = #{record.flowNodes,jdbcType=VARCHAR},
      flow_users = #{record.flowUsers,jdbcType=VARCHAR},
      is_agreed = #{record.isAgreed,jdbcType=BIT},
      is_modify = #{record.isModify,jdbcType=BIT},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.abroad.ApplySelf">
    update abroad_apply_self
    <set>
      <if test="cadreId != null">
        cadre_id = #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="applyDate != null">
        apply_date = #{applyDate,jdbcType=DATE},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="toCountry != null">
        to_country = #{toCountry,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="peerStaff != null">
        peer_staff = #{peerStaff,jdbcType=VARCHAR},
      </if>
      <if test="costSource != null">
        cost_source = #{costSource,jdbcType=VARCHAR},
      </if>
      <if test="needPassports != null">
        need_passports = #{needPassports,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=BIT},
      </if>
      <if test="isFinish != null">
        is_finish = #{isFinish,jdbcType=BIT},
      </if>
      <if test="flowNode != null">
        flow_node = #{flowNode,jdbcType=INTEGER},
      </if>
      <if test="flowNodes != null">
        flow_nodes = #{flowNodes,jdbcType=VARCHAR},
      </if>
      <if test="flowUsers != null">
        flow_users = #{flowUsers,jdbcType=VARCHAR},
      </if>
      <if test="isAgreed != null">
        is_agreed = #{isAgreed,jdbcType=BIT},
      </if>
      <if test="isModify != null">
        is_modify = #{isModify,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.abroad.ApplySelf">
    update abroad_apply_self
    set cadre_id = #{cadreId,jdbcType=INTEGER},
      apply_date = #{applyDate,jdbcType=DATE},
      type = #{type,jdbcType=TINYINT},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      to_country = #{toCountry,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      peer_staff = #{peerStaff,jdbcType=VARCHAR},
      cost_source = #{costSource,jdbcType=VARCHAR},
      need_passports = #{needPassports,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      status = #{status,jdbcType=BIT},
      is_finish = #{isFinish,jdbcType=BIT},
      flow_node = #{flowNode,jdbcType=INTEGER},
      flow_nodes = #{flowNodes,jdbcType=VARCHAR},
      flow_users = #{flowUsers,jdbcType=VARCHAR},
      is_agreed = #{isAgreed,jdbcType=BIT},
      is_modify = #{isModify,jdbcType=BIT},
      is_deleted = #{isDeleted,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.abroad.ApplySelfExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from abroad_apply_self
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>