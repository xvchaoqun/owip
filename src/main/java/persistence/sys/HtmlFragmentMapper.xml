<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.sys.HtmlFragmentMapper">
  <resultMap id="BaseResultMap" type="domain.sys.HtmlFragment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="fid" jdbcType="INTEGER" property="fid" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="category" jdbcType="TINYINT" property="category" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="attr" jdbcType="VARCHAR" property="attr" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, fid, code, category, type, role_id, title, content, attr, is_deleted, remark, 
    sort_order
  </sql>
  <select id="selectByExample" parameterType="domain.sys.HtmlFragmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_html_fragment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_html_fragment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_html_fragment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.sys.HtmlFragmentExample">
    delete from sys_html_fragment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.sys.HtmlFragment">
    insert into sys_html_fragment (id, fid, code, 
      category, type, role_id, 
      title, content, attr, 
      is_deleted, remark, sort_order
      )
    values (#{id,jdbcType=INTEGER}, #{fid,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, 
      #{category,jdbcType=TINYINT}, #{type,jdbcType=TINYINT}, #{roleId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{content,jdbcType=VARCHAR}, #{attr,jdbcType=VARCHAR}, 
      #{isDeleted,jdbcType=BIT}, #{remark,jdbcType=VARCHAR}, #{sortOrder,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.sys.HtmlFragment">
    insert into sys_html_fragment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fid != null">
        fid,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="attr != null">
        attr,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fid != null">
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        #{category,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="attr != null">
        #{attr,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.sys.HtmlFragmentExample" resultType="java.lang.Integer" >
    select count(*) from sys_html_fragment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_html_fragment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fid != null">
        fid = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.attr != null">
        attr = #{record.attr,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_html_fragment
    set id = #{record.id,jdbcType=INTEGER},
      fid = #{record.fid,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      category = #{record.category,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      role_id = #{record.roleId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      content = #{record.content,jdbcType=VARCHAR},
      attr = #{record.attr,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR},
      sort_order = #{record.sortOrder,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.sys.HtmlFragment">
    update sys_html_fragment
    <set>
      <if test="fid != null">
        fid = #{fid,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="attr != null">
        attr = #{attr,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.sys.HtmlFragment">
    update sys_html_fragment
    set fid = #{fid,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      category = #{category,jdbcType=TINYINT},
      type = #{type,jdbcType=TINYINT},
      role_id = #{roleId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      content = #{content,jdbcType=VARCHAR},
      attr = #{attr,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      sort_order = #{sortOrder,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.sys.HtmlFragmentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_html_fragment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>