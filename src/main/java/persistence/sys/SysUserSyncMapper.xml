<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.sys.SysUserSyncMapper" >
  <resultMap id="BaseResultMap" type="domain.sys.SysUserSync" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="auto_start" property="autoStart" jdbcType="BIT" />
    <result column="auto_stop" property="autoStop" jdbcType="BIT" />
    <result column="is_stop" property="isStop" jdbcType="BIT" />
    <result column="total_page" property="totalPage" jdbcType="INTEGER" />
    <result column="total_count" property="totalCount" jdbcType="INTEGER" />
    <result column="current_page" property="currentPage" jdbcType="INTEGER" />
    <result column="current_count" property="currentCount" jdbcType="INTEGER" />
    <result column="insert_count" property="insertCount" jdbcType="INTEGER" />
    <result column="update_count" property="updateCount" jdbcType="INTEGER" />
    <result column="start_time" property="startTime" jdbcType="TIMESTAMP" />
    <result column="end_time" property="endTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, type, user_id, auto_start, auto_stop, is_stop, total_page, total_count, current_page, 
    current_count, insert_count, update_count, start_time, end_time, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="domain.sys.SysUserSyncExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user_sync
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from sys_user_sync
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user_sync
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.sys.SysUserSyncExample" >
    delete from sys_user_sync
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert keyProperty="id" id="insert" parameterType="domain.sys.SysUserSync" >
    insert into sys_user_sync (id, type, user_id, 
      auto_start, auto_stop, is_stop, total_page, 
      total_count, current_page, current_count, 
      insert_count, update_count, start_time, 
      end_time, update_time)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{userId,jdbcType=INTEGER}, 
      #{autoStart,jdbcType=BIT}, #{autoStop,jdbcType=BIT}, #{isStop,jdbcType=BIT}, #{totalPage,jdbcType=INTEGER}, 
      #{totalCount,jdbcType=INTEGER}, #{currentPage,jdbcType=INTEGER}, #{currentCount,jdbcType=INTEGER}, 
      #{insertCount,jdbcType=INTEGER}, #{updateCount,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert keyProperty="id" id="insertSelective" parameterType="domain.sys.SysUserSync" >
    insert into sys_user_sync
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="autoStart != null" >
        auto_start,
      </if>
      <if test="autoStop != null" >
        auto_stop,
      </if>
      <if test="isStop != null" >
        is_stop,
      </if>
      <if test="totalPage != null" >
        total_page,
      </if>
      <if test="totalCount != null" >
        total_count,
      </if>
      <if test="currentPage != null" >
        current_page,
      </if>
      <if test="currentCount != null" >
        current_count,
      </if>
      <if test="insertCount != null" >
        insert_count,
      </if>
      <if test="updateCount != null" >
        update_count,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="autoStart != null" >
        #{autoStart,jdbcType=BIT},
      </if>
      <if test="autoStop != null" >
        #{autoStop,jdbcType=BIT},
      </if>
      <if test="isStop != null" >
        #{isStop,jdbcType=BIT},
      </if>
      <if test="totalPage != null" >
        #{totalPage,jdbcType=INTEGER},
      </if>
      <if test="totalCount != null" >
        #{totalCount,jdbcType=INTEGER},
      </if>
      <if test="currentPage != null" >
        #{currentPage,jdbcType=INTEGER},
      </if>
      <if test="currentCount != null" >
        #{currentCount,jdbcType=INTEGER},
      </if>
      <if test="insertCount != null" >
        #{insertCount,jdbcType=INTEGER},
      </if>
      <if test="updateCount != null" >
        #{updateCount,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.sys.SysUserSyncExample" resultType="java.lang.Integer" >
    select count(*) from sys_user_sync
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update sys_user_sync
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.autoStart != null" >
        auto_start = #{record.autoStart,jdbcType=BIT},
      </if>
      <if test="record.autoStop != null" >
        auto_stop = #{record.autoStop,jdbcType=BIT},
      </if>
      <if test="record.isStop != null" >
        is_stop = #{record.isStop,jdbcType=BIT},
      </if>
      <if test="record.totalPage != null" >
        total_page = #{record.totalPage,jdbcType=INTEGER},
      </if>
      <if test="record.totalCount != null" >
        total_count = #{record.totalCount,jdbcType=INTEGER},
      </if>
      <if test="record.currentPage != null" >
        current_page = #{record.currentPage,jdbcType=INTEGER},
      </if>
      <if test="record.currentCount != null" >
        current_count = #{record.currentCount,jdbcType=INTEGER},
      </if>
      <if test="record.insertCount != null" >
        insert_count = #{record.insertCount,jdbcType=INTEGER},
      </if>
      <if test="record.updateCount != null" >
        update_count = #{record.updateCount,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null" >
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null" >
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update sys_user_sync
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      auto_start = #{record.autoStart,jdbcType=BIT},
      auto_stop = #{record.autoStop,jdbcType=BIT},
      is_stop = #{record.isStop,jdbcType=BIT},
      total_page = #{record.totalPage,jdbcType=INTEGER},
      total_count = #{record.totalCount,jdbcType=INTEGER},
      current_page = #{record.currentPage,jdbcType=INTEGER},
      current_count = #{record.currentCount,jdbcType=INTEGER},
      insert_count = #{record.insertCount,jdbcType=INTEGER},
      update_count = #{record.updateCount,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.sys.SysUserSync" >
    update sys_user_sync
    <set >
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="autoStart != null" >
        auto_start = #{autoStart,jdbcType=BIT},
      </if>
      <if test="autoStop != null" >
        auto_stop = #{autoStop,jdbcType=BIT},
      </if>
      <if test="isStop != null" >
        is_stop = #{isStop,jdbcType=BIT},
      </if>
      <if test="totalPage != null" >
        total_page = #{totalPage,jdbcType=INTEGER},
      </if>
      <if test="totalCount != null" >
        total_count = #{totalCount,jdbcType=INTEGER},
      </if>
      <if test="currentPage != null" >
        current_page = #{currentPage,jdbcType=INTEGER},
      </if>
      <if test="currentCount != null" >
        current_count = #{currentCount,jdbcType=INTEGER},
      </if>
      <if test="insertCount != null" >
        insert_count = #{insertCount,jdbcType=INTEGER},
      </if>
      <if test="updateCount != null" >
        update_count = #{updateCount,jdbcType=INTEGER},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.sys.SysUserSync" >
    update sys_user_sync
    set type = #{type,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      auto_start = #{autoStart,jdbcType=BIT},
      auto_stop = #{autoStop,jdbcType=BIT},
      is_stop = #{isStop,jdbcType=BIT},
      total_page = #{totalPage,jdbcType=INTEGER},
      total_count = #{totalCount,jdbcType=INTEGER},
      current_page = #{currentPage,jdbcType=INTEGER},
      current_count = #{currentCount,jdbcType=INTEGER},
      insert_count = #{insertCount,jdbcType=INTEGER},
      update_count = #{updateCount,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="domain.sys.SysUserSyncExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_user_sync
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>