<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.sys.SysRoleMapper">
  <resultMap id="BaseResultMap" type="domain.sys.SysRole">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="resource_ids" jdbcType="VARCHAR" property="resourceIds" />
    <result column="m_resource_ids" jdbcType="VARCHAR" property="mResourceIds" />
    <result column="resource_ids_minus" jdbcType="VARCHAR" property="resourceIdsMinus" />
    <result column="m_resource_ids_minus" jdbcType="VARCHAR" property="mResourceIdsMinus" />
    <result column="user_count" jdbcType="INTEGER" property="userCount" />
    <result column="available" jdbcType="TINYINT" property="available" />
    <result column="is_sys_hold" jdbcType="BIT" property="isSysHold" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, name, resource_ids, m_resource_ids, resource_ids_minus, m_resource_ids_minus, 
    user_count, available, is_sys_hold, sort_order, remark
  </sql>
  <select id="selectByExample" parameterType="domain.sys.SysRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_role
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_role
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.sys.SysRoleExample">
    delete from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.sys.SysRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role (code, name, resource_ids, 
      m_resource_ids, resource_ids_minus, m_resource_ids_minus, 
      user_count, available, is_sys_hold, 
      sort_order, remark)
    values (#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{resourceIds,jdbcType=VARCHAR}, 
      #{mResourceIds,jdbcType=VARCHAR}, #{resourceIdsMinus,jdbcType=VARCHAR}, #{mResourceIdsMinus,jdbcType=VARCHAR}, 
      #{userCount,jdbcType=INTEGER}, #{available,jdbcType=TINYINT}, #{isSysHold,jdbcType=BIT}, 
      #{sortOrder,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.sys.SysRole">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="resourceIds != null">
        resource_ids,
      </if>
      <if test="mResourceIds != null">
        m_resource_ids,
      </if>
      <if test="resourceIdsMinus != null">
        resource_ids_minus,
      </if>
      <if test="mResourceIdsMinus != null">
        m_resource_ids_minus,
      </if>
      <if test="userCount != null">
        user_count,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="isSysHold != null">
        is_sys_hold,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="resourceIds != null">
        #{resourceIds,jdbcType=VARCHAR},
      </if>
      <if test="mResourceIds != null">
        #{mResourceIds,jdbcType=VARCHAR},
      </if>
      <if test="resourceIdsMinus != null">
        #{resourceIdsMinus,jdbcType=VARCHAR},
      </if>
      <if test="mResourceIdsMinus != null">
        #{mResourceIdsMinus,jdbcType=VARCHAR},
      </if>
      <if test="userCount != null">
        #{userCount,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        #{available,jdbcType=TINYINT},
      </if>
      <if test="isSysHold != null">
        #{isSysHold,jdbcType=BIT},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.sys.SysRoleExample" resultType="java.lang.Long">
    select count(*) from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sys_role
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceIds != null">
        resource_ids = #{record.resourceIds,jdbcType=VARCHAR},
      </if>
      <if test="record.mResourceIds != null">
        m_resource_ids = #{record.mResourceIds,jdbcType=VARCHAR},
      </if>
      <if test="record.resourceIdsMinus != null">
        resource_ids_minus = #{record.resourceIdsMinus,jdbcType=VARCHAR},
      </if>
      <if test="record.mResourceIdsMinus != null">
        m_resource_ids_minus = #{record.mResourceIdsMinus,jdbcType=VARCHAR},
      </if>
      <if test="record.userCount != null">
        user_count = #{record.userCount,jdbcType=INTEGER},
      </if>
      <if test="record.available != null">
        available = #{record.available,jdbcType=TINYINT},
      </if>
      <if test="record.isSysHold != null">
        is_sys_hold = #{record.isSysHold,jdbcType=BIT},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sys_role
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      resource_ids = #{record.resourceIds,jdbcType=VARCHAR},
      m_resource_ids = #{record.mResourceIds,jdbcType=VARCHAR},
      resource_ids_minus = #{record.resourceIdsMinus,jdbcType=VARCHAR},
      m_resource_ids_minus = #{record.mResourceIdsMinus,jdbcType=VARCHAR},
      user_count = #{record.userCount,jdbcType=INTEGER},
      available = #{record.available,jdbcType=TINYINT},
      is_sys_hold = #{record.isSysHold,jdbcType=BIT},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.sys.SysRole">
    update sys_role
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="resourceIds != null">
        resource_ids = #{resourceIds,jdbcType=VARCHAR},
      </if>
      <if test="mResourceIds != null">
        m_resource_ids = #{mResourceIds,jdbcType=VARCHAR},
      </if>
      <if test="resourceIdsMinus != null">
        resource_ids_minus = #{resourceIdsMinus,jdbcType=VARCHAR},
      </if>
      <if test="mResourceIdsMinus != null">
        m_resource_ids_minus = #{mResourceIdsMinus,jdbcType=VARCHAR},
      </if>
      <if test="userCount != null">
        user_count = #{userCount,jdbcType=INTEGER},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=TINYINT},
      </if>
      <if test="isSysHold != null">
        is_sys_hold = #{isSysHold,jdbcType=BIT},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.sys.SysRole">
    update sys_role
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      resource_ids = #{resourceIds,jdbcType=VARCHAR},
      m_resource_ids = #{mResourceIds,jdbcType=VARCHAR},
      resource_ids_minus = #{resourceIdsMinus,jdbcType=VARCHAR},
      m_resource_ids_minus = #{mResourceIdsMinus,jdbcType=VARCHAR},
      user_count = #{userCount,jdbcType=INTEGER},
      available = #{available,jdbcType=TINYINT},
      is_sys_hold = #{isSysHold,jdbcType=BIT},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.sys.SysRoleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sys_role
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>