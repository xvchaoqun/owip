<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.cadre.CadreFamilyAbroadMapper">
  <resultMap id="BaseResultMap" type="domain.cadre.CadreFamilyAbroad">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cadre_id" jdbcType="INTEGER" property="cadreId" />
    <result column="family_id" jdbcType="INTEGER" property="familyId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="abroad_time" jdbcType="DATE" property="abroadTime" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cadre_id, family_id, type, abroad_time, country, city, status
  </sql>
  <select id="selectByExample" parameterType="domain.cadre.CadreFamilyAbroadExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cadre_family_abroad
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cadre_family_abroad
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cadre_family_abroad
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cadre.CadreFamilyAbroadExample">
    delete from cadre_family_abroad
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cadre.CadreFamilyAbroad">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cadre_family_abroad (cadre_id, family_id, type, 
      abroad_time, country, city, 
      status)
    values (#{cadreId,jdbcType=INTEGER}, #{familyId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, 
      #{abroadTime,jdbcType=DATE}, #{country,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="domain.cadre.CadreFamilyAbroad">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cadre_family_abroad
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cadreId != null">
        cadre_id,
      </if>
      <if test="familyId != null">
        family_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="abroadTime != null">
        abroad_time,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cadreId != null">
        #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="familyId != null">
        #{familyId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="abroadTime != null">
        #{abroadTime,jdbcType=DATE},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cadre.CadreFamilyAbroadExample" resultType="java.lang.Long">
    select count(*) from cadre_family_abroad
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cadre_family_abroad
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cadreId != null">
        cadre_id = #{record.cadreId,jdbcType=INTEGER},
      </if>
      <if test="record.familyId != null">
        family_id = #{record.familyId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.abroadTime != null">
        abroad_time = #{record.abroadTime,jdbcType=DATE},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cadre_family_abroad
    set id = #{record.id,jdbcType=INTEGER},
      cadre_id = #{record.cadreId,jdbcType=INTEGER},
      family_id = #{record.familyId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      abroad_time = #{record.abroadTime,jdbcType=DATE},
      country = #{record.country,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cadre.CadreFamilyAbroad">
    update cadre_family_abroad
    <set>
      <if test="cadreId != null">
        cadre_id = #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="familyId != null">
        family_id = #{familyId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="abroadTime != null">
        abroad_time = #{abroadTime,jdbcType=DATE},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cadre.CadreFamilyAbroad">
    update cadre_family_abroad
    set cadre_id = #{cadreId,jdbcType=INTEGER},
      family_id = #{familyId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      abroad_time = #{abroadTime,jdbcType=DATE},
      country = #{country,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.cadre.CadreFamilyAbroadExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cadre_family_abroad
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>