<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.cadre.CadreAdminLevelMapper" >
  <resultMap id="BaseResultMap" type="domain.cadre.CadreAdminLevel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cadre_id" property="cadreId" jdbcType="INTEGER" />
    <result column="admin_level_id" property="adminLevelId" jdbcType="INTEGER" />
    <result column="start_dispatch_cadre_id" property="startDispatchCadreId" jdbcType="INTEGER" />
    <result column="end_dispatch_cadre_id" property="endDispatchCadreId" jdbcType="INTEGER" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cadre_id, admin_level_id, start_dispatch_cadre_id, end_dispatch_cadre_id, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="domain.cadre.CadreAdminLevelExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cadre_admin_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from cadre_admin_level
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from cadre_admin_level
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cadre.CadreAdminLevelExample" >
    delete from cadre_admin_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cadre.CadreAdminLevel" >
    insert into cadre_admin_level (id, cadre_id, admin_level_id, 
      start_dispatch_cadre_id, end_dispatch_cadre_id, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{cadreId,jdbcType=INTEGER}, #{adminLevelId,jdbcType=INTEGER}, 
      #{startDispatchCadreId,jdbcType=INTEGER}, #{endDispatchCadreId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.cadre.CadreAdminLevel" >
    insert into cadre_admin_level
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cadreId != null" >
        cadre_id,
      </if>
      <if test="adminLevelId != null" >
        admin_level_id,
      </if>
      <if test="startDispatchCadreId != null" >
        start_dispatch_cadre_id,
      </if>
      <if test="endDispatchCadreId != null" >
        end_dispatch_cadre_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cadreId != null" >
        #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="adminLevelId != null" >
        #{adminLevelId,jdbcType=INTEGER},
      </if>
      <if test="startDispatchCadreId != null" >
        #{startDispatchCadreId,jdbcType=INTEGER},
      </if>
      <if test="endDispatchCadreId != null" >
        #{endDispatchCadreId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cadre.CadreAdminLevelExample" resultType="java.lang.Integer" >
    select count(*) from cadre_admin_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update cadre_admin_level
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cadreId != null" >
        cadre_id = #{record.cadreId,jdbcType=INTEGER},
      </if>
      <if test="record.adminLevelId != null" >
        admin_level_id = #{record.adminLevelId,jdbcType=INTEGER},
      </if>
      <if test="record.startDispatchCadreId != null" >
        start_dispatch_cadre_id = #{record.startDispatchCadreId,jdbcType=INTEGER},
      </if>
      <if test="record.endDispatchCadreId != null" >
        end_dispatch_cadre_id = #{record.endDispatchCadreId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update cadre_admin_level
    set id = #{record.id,jdbcType=INTEGER},
      cadre_id = #{record.cadreId,jdbcType=INTEGER},
      admin_level_id = #{record.adminLevelId,jdbcType=INTEGER},
      start_dispatch_cadre_id = #{record.startDispatchCadreId,jdbcType=INTEGER},
      end_dispatch_cadre_id = #{record.endDispatchCadreId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cadre.CadreAdminLevel" >
    update cadre_admin_level
    <set >
      <if test="cadreId != null" >
        cadre_id = #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="adminLevelId != null" >
        admin_level_id = #{adminLevelId,jdbcType=INTEGER},
      </if>
      <if test="startDispatchCadreId != null" >
        start_dispatch_cadre_id = #{startDispatchCadreId,jdbcType=INTEGER},
      </if>
      <if test="endDispatchCadreId != null" >
        end_dispatch_cadre_id = #{endDispatchCadreId,jdbcType=INTEGER},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cadre.CadreAdminLevel" >
    update cadre_admin_level
    set cadre_id = #{cadreId,jdbcType=INTEGER},
      admin_level_id = #{adminLevelId,jdbcType=INTEGER},
      start_dispatch_cadre_id = #{startDispatchCadreId,jdbcType=INTEGER},
      end_dispatch_cadre_id = #{endDispatchCadreId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="domain.cadre.CadreAdminLevelExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cadre_admin_level
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>