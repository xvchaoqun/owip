<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.cadre.CadreMapper">
  <resultMap id="BaseResultMap" type="domain.cadre.Cadre">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="has_crp" jdbcType="BIT" property="hasCrp" />
    <result column="is_double" jdbcType="BIT" property="isDouble" />
    <result column="double_unit_ids" jdbcType="VARCHAR" property="doubleUnitIds" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="is_outside" jdbcType="BIT" property="isOutside" />
    <result column="is_sync_post" jdbcType="BIT" property="isSyncPost" />
    <result column="dispatch_cadre_id" jdbcType="INTEGER" property="dispatchCadreId" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="profile" jdbcType="VARCHAR" property="profile" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="original_post" jdbcType="VARCHAR" property="originalPost" />
    <result column="appoint_date" jdbcType="DATE" property="appointDate" />
    <result column="depose_date" jdbcType="DATE" property="deposeDate" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, type, has_crp, is_double, double_unit_ids, state, title, is_outside, 
    is_sync_post, dispatch_cadre_id, label, profile, remark, original_post, appoint_date, 
    depose_date, sort_order, status
  </sql>
  <select id="selectByExample" parameterType="domain.cadre.CadreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cadre
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cadre
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cadre
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cadre.CadreExample">
    delete from cadre
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cadre.Cadre">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cadre (user_id, type, has_crp, 
      is_double, double_unit_ids, state, 
      title, is_outside, is_sync_post, 
      dispatch_cadre_id, label, profile, 
      remark, original_post, appoint_date, 
      depose_date, sort_order, status
      )
    values (#{userId,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{hasCrp,jdbcType=BIT}, 
      #{isDouble,jdbcType=BIT}, #{doubleUnitIds,jdbcType=VARCHAR}, #{state,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{isOutside,jdbcType=BIT}, #{isSyncPost,jdbcType=BIT}, 
      #{dispatchCadreId,jdbcType=INTEGER}, #{label,jdbcType=VARCHAR}, #{profile,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{originalPost,jdbcType=VARCHAR}, #{appointDate,jdbcType=DATE}, 
      #{deposeDate,jdbcType=DATE}, #{sortOrder,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.cadre.Cadre">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cadre
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="hasCrp != null">
        has_crp,
      </if>
      <if test="isDouble != null">
        is_double,
      </if>
      <if test="doubleUnitIds != null">
        double_unit_ids,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="isOutside != null">
        is_outside,
      </if>
      <if test="isSyncPost != null">
        is_sync_post,
      </if>
      <if test="dispatchCadreId != null">
        dispatch_cadre_id,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="profile != null">
        profile,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="originalPost != null">
        original_post,
      </if>
      <if test="appointDate != null">
        appoint_date,
      </if>
      <if test="deposeDate != null">
        depose_date,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="hasCrp != null">
        #{hasCrp,jdbcType=BIT},
      </if>
      <if test="isDouble != null">
        #{isDouble,jdbcType=BIT},
      </if>
      <if test="doubleUnitIds != null">
        #{doubleUnitIds,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="isOutside != null">
        #{isOutside,jdbcType=BIT},
      </if>
      <if test="isSyncPost != null">
        #{isSyncPost,jdbcType=BIT},
      </if>
      <if test="dispatchCadreId != null">
        #{dispatchCadreId,jdbcType=INTEGER},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        #{profile,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="originalPost != null">
        #{originalPost,jdbcType=VARCHAR},
      </if>
      <if test="appointDate != null">
        #{appointDate,jdbcType=DATE},
      </if>
      <if test="deposeDate != null">
        #{deposeDate,jdbcType=DATE},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cadre.CadreExample" resultType="java.lang.Long">
    select count(*) from cadre
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cadre
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.hasCrp != null">
        has_crp = #{record.hasCrp,jdbcType=BIT},
      </if>
      <if test="record.isDouble != null">
        is_double = #{record.isDouble,jdbcType=BIT},
      </if>
      <if test="record.doubleUnitIds != null">
        double_unit_ids = #{record.doubleUnitIds,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.isOutside != null">
        is_outside = #{record.isOutside,jdbcType=BIT},
      </if>
      <if test="record.isSyncPost != null">
        is_sync_post = #{record.isSyncPost,jdbcType=BIT},
      </if>
      <if test="record.dispatchCadreId != null">
        dispatch_cadre_id = #{record.dispatchCadreId,jdbcType=INTEGER},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.profile != null">
        profile = #{record.profile,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.originalPost != null">
        original_post = #{record.originalPost,jdbcType=VARCHAR},
      </if>
      <if test="record.appointDate != null">
        appoint_date = #{record.appointDate,jdbcType=DATE},
      </if>
      <if test="record.deposeDate != null">
        depose_date = #{record.deposeDate,jdbcType=DATE},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cadre
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      has_crp = #{record.hasCrp,jdbcType=BIT},
      is_double = #{record.isDouble,jdbcType=BIT},
      double_unit_ids = #{record.doubleUnitIds,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      is_outside = #{record.isOutside,jdbcType=BIT},
      is_sync_post = #{record.isSyncPost,jdbcType=BIT},
      dispatch_cadre_id = #{record.dispatchCadreId,jdbcType=INTEGER},
      label = #{record.label,jdbcType=VARCHAR},
      profile = #{record.profile,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      original_post = #{record.originalPost,jdbcType=VARCHAR},
      appoint_date = #{record.appointDate,jdbcType=DATE},
      depose_date = #{record.deposeDate,jdbcType=DATE},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cadre.Cadre">
    update cadre
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="hasCrp != null">
        has_crp = #{hasCrp,jdbcType=BIT},
      </if>
      <if test="isDouble != null">
        is_double = #{isDouble,jdbcType=BIT},
      </if>
      <if test="doubleUnitIds != null">
        double_unit_ids = #{doubleUnitIds,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="isOutside != null">
        is_outside = #{isOutside,jdbcType=BIT},
      </if>
      <if test="isSyncPost != null">
        is_sync_post = #{isSyncPost,jdbcType=BIT},
      </if>
      <if test="dispatchCadreId != null">
        dispatch_cadre_id = #{dispatchCadreId,jdbcType=INTEGER},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="profile != null">
        profile = #{profile,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="originalPost != null">
        original_post = #{originalPost,jdbcType=VARCHAR},
      </if>
      <if test="appointDate != null">
        appoint_date = #{appointDate,jdbcType=DATE},
      </if>
      <if test="deposeDate != null">
        depose_date = #{deposeDate,jdbcType=DATE},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cadre.Cadre">
    update cadre
    set user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      has_crp = #{hasCrp,jdbcType=BIT},
      is_double = #{isDouble,jdbcType=BIT},
      double_unit_ids = #{doubleUnitIds,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      is_outside = #{isOutside,jdbcType=BIT},
      is_sync_post = #{isSyncPost,jdbcType=BIT},
      dispatch_cadre_id = #{dispatchCadreId,jdbcType=INTEGER},
      label = #{label,jdbcType=VARCHAR},
      profile = #{profile,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      original_post = #{originalPost,jdbcType=VARCHAR},
      appoint_date = #{appointDate,jdbcType=DATE},
      depose_date = #{deposeDate,jdbcType=DATE},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.cadre.CadreExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cadre
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>