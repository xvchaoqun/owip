<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.qy.QyYearMapper">
  <resultMap id="BaseResultMap" type="domain.qy.QyYear">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="plan_pdf" jdbcType="VARCHAR" property="planPdf" />
    <result column="plan_pdf_name" jdbcType="VARCHAR" property="planPdfName" />
    <result column="plan_word" jdbcType="VARCHAR" property="planWord" />
    <result column="plan_word_name" jdbcType="VARCHAR" property="planWordName" />
    <result column="result_pdf" jdbcType="VARCHAR" property="resultPdf" />
    <result column="result_pdf_name" jdbcType="VARCHAR" property="resultPdfName" />
    <result column="result_word" jdbcType="VARCHAR" property="resultWord" />
    <result column="result_word_name" jdbcType="VARCHAR" property="resultWordName" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, plan_pdf, plan_pdf_name, plan_word, plan_word_name, result_pdf, result_pdf_name, 
    result_word, result_word_name, remark
  </sql>
  <select id="selectByExample" parameterType="domain.qy.QyYearExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from qy_year
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from qy_year
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from qy_year
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.qy.QyYearExample">
    delete from qy_year
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.qy.QyYear">
    insert into qy_year (id, year, plan_pdf, 
      plan_pdf_name, plan_word, plan_word_name, 
      result_pdf, result_pdf_name, result_word, 
      result_word_name, remark)
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, #{planPdf,jdbcType=VARCHAR}, 
      #{planPdfName,jdbcType=VARCHAR}, #{planWord,jdbcType=VARCHAR}, #{planWordName,jdbcType=VARCHAR}, 
      #{resultPdf,jdbcType=VARCHAR}, #{resultPdfName,jdbcType=VARCHAR}, #{resultWord,jdbcType=VARCHAR}, 
      #{resultWordName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.qy.QyYear">
    insert into qy_year
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="planPdf != null">
        plan_pdf,
      </if>
      <if test="planPdfName != null">
        plan_pdf_name,
      </if>
      <if test="planWord != null">
        plan_word,
      </if>
      <if test="planWordName != null">
        plan_word_name,
      </if>
      <if test="resultPdf != null">
        result_pdf,
      </if>
      <if test="resultPdfName != null">
        result_pdf_name,
      </if>
      <if test="resultWord != null">
        result_word,
      </if>
      <if test="resultWordName != null">
        result_word_name,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="planPdf != null">
        #{planPdf,jdbcType=VARCHAR},
      </if>
      <if test="planPdfName != null">
        #{planPdfName,jdbcType=VARCHAR},
      </if>
      <if test="planWord != null">
        #{planWord,jdbcType=VARCHAR},
      </if>
      <if test="planWordName != null">
        #{planWordName,jdbcType=VARCHAR},
      </if>
      <if test="resultPdf != null">
        #{resultPdf,jdbcType=VARCHAR},
      </if>
      <if test="resultPdfName != null">
        #{resultPdfName,jdbcType=VARCHAR},
      </if>
      <if test="resultWord != null">
        #{resultWord,jdbcType=VARCHAR},
      </if>
      <if test="resultWordName != null">
        #{resultWordName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.qy.QyYearExample" resultType="java.lang.Long">
    select count(*) from qy_year
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update qy_year
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.planPdf != null">
        plan_pdf = #{record.planPdf,jdbcType=VARCHAR},
      </if>
      <if test="record.planPdfName != null">
        plan_pdf_name = #{record.planPdfName,jdbcType=VARCHAR},
      </if>
      <if test="record.planWord != null">
        plan_word = #{record.planWord,jdbcType=VARCHAR},
      </if>
      <if test="record.planWordName != null">
        plan_word_name = #{record.planWordName,jdbcType=VARCHAR},
      </if>
      <if test="record.resultPdf != null">
        result_pdf = #{record.resultPdf,jdbcType=VARCHAR},
      </if>
      <if test="record.resultPdfName != null">
        result_pdf_name = #{record.resultPdfName,jdbcType=VARCHAR},
      </if>
      <if test="record.resultWord != null">
        result_word = #{record.resultWord,jdbcType=VARCHAR},
      </if>
      <if test="record.resultWordName != null">
        result_word_name = #{record.resultWordName,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update qy_year
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      plan_pdf = #{record.planPdf,jdbcType=VARCHAR},
      plan_pdf_name = #{record.planPdfName,jdbcType=VARCHAR},
      plan_word = #{record.planWord,jdbcType=VARCHAR},
      plan_word_name = #{record.planWordName,jdbcType=VARCHAR},
      result_pdf = #{record.resultPdf,jdbcType=VARCHAR},
      result_pdf_name = #{record.resultPdfName,jdbcType=VARCHAR},
      result_word = #{record.resultWord,jdbcType=VARCHAR},
      result_word_name = #{record.resultWordName,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.qy.QyYear">
    update qy_year
    <set>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="planPdf != null">
        plan_pdf = #{planPdf,jdbcType=VARCHAR},
      </if>
      <if test="planPdfName != null">
        plan_pdf_name = #{planPdfName,jdbcType=VARCHAR},
      </if>
      <if test="planWord != null">
        plan_word = #{planWord,jdbcType=VARCHAR},
      </if>
      <if test="planWordName != null">
        plan_word_name = #{planWordName,jdbcType=VARCHAR},
      </if>
      <if test="resultPdf != null">
        result_pdf = #{resultPdf,jdbcType=VARCHAR},
      </if>
      <if test="resultPdfName != null">
        result_pdf_name = #{resultPdfName,jdbcType=VARCHAR},
      </if>
      <if test="resultWord != null">
        result_word = #{resultWord,jdbcType=VARCHAR},
      </if>
      <if test="resultWordName != null">
        result_word_name = #{resultWordName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.qy.QyYear">
    update qy_year
    set year = #{year,jdbcType=INTEGER},
      plan_pdf = #{planPdf,jdbcType=VARCHAR},
      plan_pdf_name = #{planPdfName,jdbcType=VARCHAR},
      plan_word = #{planWord,jdbcType=VARCHAR},
      plan_word_name = #{planWordName,jdbcType=VARCHAR},
      result_pdf = #{resultPdf,jdbcType=VARCHAR},
      result_pdf_name = #{resultPdfName,jdbcType=VARCHAR},
      result_word = #{resultWord,jdbcType=VARCHAR},
      result_word_name = #{resultWordName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.qy.QyYearExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from qy_year
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>