<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.train.TrainInspectorCourseMapper" >
  <resultMap id="BaseResultMap" type="domain.train.TrainInspectorCourse" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="inspector_id" property="inspectorId" jdbcType="INTEGER" />
    <result column="course_id" property="courseId" jdbcType="INTEGER" />
    <result column="tempdata" property="tempdata" jdbcType="VARCHAR" />
    <result column="feedback" property="feedback" jdbcType="VARCHAR" />
    <result column="score" property="score" jdbcType="INTEGER" />
    <result column="submit_time" property="submitTime" jdbcType="TIMESTAMP" />
    <result column="submit_ip" property="submitIp" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, inspector_id, course_id, tempdata, feedback, score, submit_time, submit_ip, status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="domain.train.TrainInspectorCourseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from train_inspector_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from train_inspector_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from train_inspector_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.train.TrainInspectorCourseExample" >
    delete from train_inspector_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.train.TrainInspectorCourse" >
    insert into train_inspector_course (id, inspector_id, course_id, 
      tempdata, feedback, score, 
      submit_time, submit_ip, status
      )
    values (#{id,jdbcType=INTEGER}, #{inspectorId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, 
      #{tempdata,jdbcType=VARCHAR}, #{feedback,jdbcType=VARCHAR}, #{score,jdbcType=INTEGER}, 
      #{submitTime,jdbcType=TIMESTAMP}, #{submitIp,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.train.TrainInspectorCourse" >
    insert into train_inspector_course
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="inspectorId != null" >
        inspector_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="tempdata != null" >
        tempdata,
      </if>
      <if test="feedback != null" >
        feedback,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="submitTime != null" >
        submit_time,
      </if>
      <if test="submitIp != null" >
        submit_ip,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="inspectorId != null" >
        #{inspectorId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="tempdata != null" >
        #{tempdata,jdbcType=VARCHAR},
      </if>
      <if test="feedback != null" >
        #{feedback,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        #{score,jdbcType=INTEGER},
      </if>
      <if test="submitTime != null" >
        #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitIp != null" >
        #{submitIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.train.TrainInspectorCourseExample" resultType="java.lang.Integer" >
    select count(*) from train_inspector_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update train_inspector_course
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.inspectorId != null" >
        inspector_id = #{record.inspectorId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null" >
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.tempdata != null" >
        tempdata = #{record.tempdata,jdbcType=VARCHAR},
      </if>
      <if test="record.feedback != null" >
        feedback = #{record.feedback,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null" >
        score = #{record.score,jdbcType=INTEGER},
      </if>
      <if test="record.submitTime != null" >
        submit_time = #{record.submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.submitIp != null" >
        submit_ip = #{record.submitIp,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update train_inspector_course
    set id = #{record.id,jdbcType=INTEGER},
      inspector_id = #{record.inspectorId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      tempdata = #{record.tempdata,jdbcType=VARCHAR},
      feedback = #{record.feedback,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=INTEGER},
      submit_time = #{record.submitTime,jdbcType=TIMESTAMP},
      submit_ip = #{record.submitIp,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.train.TrainInspectorCourse" >
    update train_inspector_course
    <set >
      <if test="inspectorId != null" >
        inspector_id = #{inspectorId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="tempdata != null" >
        tempdata = #{tempdata,jdbcType=VARCHAR},
      </if>
      <if test="feedback != null" >
        feedback = #{feedback,jdbcType=VARCHAR},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=INTEGER},
      </if>
      <if test="submitTime != null" >
        submit_time = #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitIp != null" >
        submit_ip = #{submitIp,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.train.TrainInspectorCourse" >
    update train_inspector_course
    set inspector_id = #{inspectorId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      tempdata = #{tempdata,jdbcType=VARCHAR},
      feedback = #{feedback,jdbcType=VARCHAR},
      score = #{score,jdbcType=INTEGER},
      submit_time = #{submitTime,jdbcType=TIMESTAMP},
      submit_ip = #{submitIp,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="domain.train.TrainInspectorCourseExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from train_inspector_course
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>