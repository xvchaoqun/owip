<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pm.PmQuarterMapper">
  <resultMap id="BaseResultMap" type="domain.pm.PmQuarter">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="quarter" jdbcType="TINYINT" property="quarter" />
    <result column="is_finish" jdbcType="BIT" property="isFinish" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="due_num" jdbcType="INTEGER" property="dueNum" />
    <result column="finish_num" jdbcType="INTEGER" property="finishNum" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, quarter, is_finish, type, party_id, num, due_num, finish_num, remark
  </sql>
  <select id="selectByExample" parameterType="domain.pm.PmQuarterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pm_quarter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pm_quarter
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pm_quarter
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.pm.PmQuarterExample">
    delete from pm_quarter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pm.PmQuarter">
    insert into pm_quarter (id, year, quarter, 
      is_finish, type, party_id, 
      num, due_num, finish_num, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, #{quarter,jdbcType=TINYINT}, 
      #{isFinish,jdbcType=BIT}, #{type,jdbcType=TINYINT}, #{partyId,jdbcType=INTEGER}, 
      #{num,jdbcType=INTEGER}, #{dueNum,jdbcType=INTEGER}, #{finishNum,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.pm.PmQuarter">
    insert into pm_quarter
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="quarter != null">
        quarter,
      </if>
      <if test="isFinish != null">
        is_finish,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="dueNum != null">
        due_num,
      </if>
      <if test="finishNum != null">
        finish_num,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="quarter != null">
        #{quarter,jdbcType=TINYINT},
      </if>
      <if test="isFinish != null">
        #{isFinish,jdbcType=BIT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="dueNum != null">
        #{dueNum,jdbcType=INTEGER},
      </if>
      <if test="finishNum != null">
        #{finishNum,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pm.PmQuarterExample" resultType="java.lang.Long">
    select count(*) from pm_quarter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pm_quarter
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.quarter != null">
        quarter = #{record.quarter,jdbcType=TINYINT},
      </if>
      <if test="record.isFinish != null">
        is_finish = #{record.isFinish,jdbcType=BIT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.dueNum != null">
        due_num = #{record.dueNum,jdbcType=INTEGER},
      </if>
      <if test="record.finishNum != null">
        finish_num = #{record.finishNum,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pm_quarter
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      quarter = #{record.quarter,jdbcType=TINYINT},
      is_finish = #{record.isFinish,jdbcType=BIT},
      type = #{record.type,jdbcType=TINYINT},
      party_id = #{record.partyId,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      due_num = #{record.dueNum,jdbcType=INTEGER},
      finish_num = #{record.finishNum,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.pm.PmQuarter">
    update pm_quarter
    <set>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="quarter != null">
        quarter = #{quarter,jdbcType=TINYINT},
      </if>
      <if test="isFinish != null">
        is_finish = #{isFinish,jdbcType=BIT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="partyId != null">
        party_id = #{partyId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="dueNum != null">
        due_num = #{dueNum,jdbcType=INTEGER},
      </if>
      <if test="finishNum != null">
        finish_num = #{finishNum,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.pm.PmQuarter">
    update pm_quarter
    set year = #{year,jdbcType=INTEGER},
      quarter = #{quarter,jdbcType=TINYINT},
      is_finish = #{isFinish,jdbcType=BIT},
      type = #{type,jdbcType=TINYINT},
      party_id = #{partyId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      due_num = #{dueNum,jdbcType=INTEGER},
      finish_num = #{finishNum,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pm.PmQuarterExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pm_quarter
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>