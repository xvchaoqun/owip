<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.party.PartyViewMapper">
  <resultMap id="BaseResultMap" type="domain.party.PartyView">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="unit_type_id" jdbcType="INTEGER" property="unitTypeId" />
    <result column="direct_type" jdbcType="INTEGER" property="directType" />
    <result column="is_enterprise_big" jdbcType="BIT" property="isEnterpriseBig" />
    <result column="is_enterprise_nationalized" jdbcType="BIT" property="isEnterpriseNationalized" />
    <result column="is_separate" jdbcType="BIT" property="isSeparate" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="fax" jdbcType="VARCHAR" property="fax" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mailbox" jdbcType="VARCHAR" property="mailbox" />
    <result column="found_time" jdbcType="DATE" property="foundTime" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_pycj" jdbcType="BIT" property="isPycj" />
    <result column="pycj_date" jdbcType="DATE" property="pycjDate" />
    <result column="is_bg" jdbcType="BIT" property="isBg" />
    <result column="bg_date" jdbcType="DATE" property="bgDate" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="integrity" jdbcType="DECIMAL" property="integrity" />
    <result column="branch_count" jdbcType="INTEGER" property="branchCount" />
    <result column="member_count" jdbcType="INTEGER" property="memberCount" />
    <result column="student_member_count" jdbcType="INTEGER" property="studentMemberCount" />
    <result column="positive_count" jdbcType="INTEGER" property="positiveCount" />
    <result column="teacher_member_count" jdbcType="INTEGER" property="teacherMemberCount" />
    <result column="retire_member_count" jdbcType="INTEGER" property="retireMemberCount" />
    <result column="group_count" jdbcType="INTEGER" property="groupCount" />
    <result column="present_group_id" jdbcType="INTEGER" property="presentGroupId" />
    <result column="appoint_time" jdbcType="DATE" property="appointTime" />
    <result column="tran_time" jdbcType="DATE" property="tranTime" />
    <result column="actual_tran_time" jdbcType="DATE" property="actualTranTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, name, short_name, url, unit_id, class_id, type_id, unit_type_id, direct_type, 
    is_enterprise_big, is_enterprise_nationalized, is_separate, phone, fax, email, mailbox, 
    found_time, sort_order, create_time, is_pycj, pycj_date, is_bg, bg_date, update_time, 
    is_deleted, integrity, branch_count, member_count, student_member_count, positive_count, 
    teacher_member_count, retire_member_count, group_count, present_group_id, appoint_time, 
    tran_time, actual_tran_time
  </sql>
  <select id="selectByExample" parameterType="domain.party.PartyViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_party_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="countByExample" parameterType="domain.party.PartyViewExample" resultType="java.lang.Long">
    select count(*) from ow_party_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="domain.party.PartyViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_party_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>