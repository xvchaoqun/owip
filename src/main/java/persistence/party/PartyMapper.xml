<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.party.PartyMapper">
  <resultMap id="BaseResultMap" type="domain.party.Party">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="fid" jdbcType="INTEGER" property="fid" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="unit_type_id" jdbcType="INTEGER" property="unitTypeId" />
    <result column="branch_type" jdbcType="INTEGER" property="branchType" />
    <result column="is_enterprise_big" jdbcType="BIT" property="isEnterpriseBig" />
    <result column="is_enterprise_nationalized" jdbcType="BIT" property="isEnterpriseNationalized" />
    <result column="is_separate" jdbcType="BIT" property="isSeparate" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="fax" jdbcType="VARCHAR" property="fax" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mailbox" jdbcType="VARCHAR" property="mailbox" />
    <result column="found_time" jdbcType="DATE" property="foundTime" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_pycj" jdbcType="BIT" property="isPycj" />
    <result column="pycj_date" jdbcType="DATE" property="pycjDate" />
    <result column="is_bg" jdbcType="BIT" property="isBg" />
    <result column="bg_date" jdbcType="DATE" property="bgDate" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="integrity" jdbcType="DECIMAL" property="integrity" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, fid, code, name, short_name, url, unit_id, class_id, type_id, unit_type_id, branch_type, 
    is_enterprise_big, is_enterprise_nationalized, is_separate, phone, address, fax, 
    email, mailbox, found_time, sort_order, create_time, is_pycj, pycj_date, is_bg, bg_date, 
    is_deleted, integrity
  </sql>
  <select id="selectByExample" parameterType="domain.party.PartyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ow_party
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ow_party
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.party.PartyExample">
    delete from ow_party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.party.Party">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ow_party (fid, code, name, 
      short_name, url, unit_id, 
      class_id, type_id, unit_type_id, 
      branch_type, is_enterprise_big, is_enterprise_nationalized, 
      is_separate, phone, address, 
      fax, email, mailbox, 
      found_time, sort_order, create_time, 
      is_pycj, pycj_date, is_bg, bg_date, 
      is_deleted, integrity)
    values (#{fid,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{shortName,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{unitId,jdbcType=INTEGER}, 
      #{classId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{unitTypeId,jdbcType=INTEGER}, 
      #{branchType,jdbcType=INTEGER}, #{isEnterpriseBig,jdbcType=BIT}, #{isEnterpriseNationalized,jdbcType=BIT}, 
      #{isSeparate,jdbcType=BIT}, #{phone,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, 
      #{fax,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{mailbox,jdbcType=VARCHAR}, 
      #{foundTime,jdbcType=DATE}, #{sortOrder,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{isPycj,jdbcType=BIT}, #{pycjDate,jdbcType=DATE}, #{isBg,jdbcType=BIT}, #{bgDate,jdbcType=DATE}, 
      #{isDeleted,jdbcType=BIT}, #{integrity,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="domain.party.Party">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into ow_party
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        fid,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="shortName != null">
        short_name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="unitTypeId != null">
        unit_type_id,
      </if>
      <if test="branchType != null">
        branch_type,
      </if>
      <if test="isEnterpriseBig != null">
        is_enterprise_big,
      </if>
      <if test="isEnterpriseNationalized != null">
        is_enterprise_nationalized,
      </if>
      <if test="isSeparate != null">
        is_separate,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="fax != null">
        fax,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mailbox != null">
        mailbox,
      </if>
      <if test="foundTime != null">
        found_time,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="isPycj != null">
        is_pycj,
      </if>
      <if test="pycjDate != null">
        pycj_date,
      </if>
      <if test="isBg != null">
        is_bg,
      </if>
      <if test="bgDate != null">
        bg_date,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="integrity != null">
        integrity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="fid != null">
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="shortName != null">
        #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="unitTypeId != null">
        #{unitTypeId,jdbcType=INTEGER},
      </if>
      <if test="branchType != null">
        #{branchType,jdbcType=INTEGER},
      </if>
      <if test="isEnterpriseBig != null">
        #{isEnterpriseBig,jdbcType=BIT},
      </if>
      <if test="isEnterpriseNationalized != null">
        #{isEnterpriseNationalized,jdbcType=BIT},
      </if>
      <if test="isSeparate != null">
        #{isSeparate,jdbcType=BIT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="fax != null">
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null">
        #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="foundTime != null">
        #{foundTime,jdbcType=DATE},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPycj != null">
        #{isPycj,jdbcType=BIT},
      </if>
      <if test="pycjDate != null">
        #{pycjDate,jdbcType=DATE},
      </if>
      <if test="isBg != null">
        #{isBg,jdbcType=BIT},
      </if>
      <if test="bgDate != null">
        #{bgDate,jdbcType=DATE},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="integrity != null">
        #{integrity,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.party.PartyExample" resultType="java.lang.Long">
    select count(*) from ow_party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ow_party
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fid != null">
        fid = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.shortName != null">
        short_name = #{record.shortName,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.unitTypeId != null">
        unit_type_id = #{record.unitTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.branchType != null">
        branch_type = #{record.branchType,jdbcType=INTEGER},
      </if>
      <if test="record.isEnterpriseBig != null">
        is_enterprise_big = #{record.isEnterpriseBig,jdbcType=BIT},
      </if>
      <if test="record.isEnterpriseNationalized != null">
        is_enterprise_nationalized = #{record.isEnterpriseNationalized,jdbcType=BIT},
      </if>
      <if test="record.isSeparate != null">
        is_separate = #{record.isSeparate,jdbcType=BIT},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.fax != null">
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mailbox != null">
        mailbox = #{record.mailbox,jdbcType=VARCHAR},
      </if>
      <if test="record.foundTime != null">
        found_time = #{record.foundTime,jdbcType=DATE},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isPycj != null">
        is_pycj = #{record.isPycj,jdbcType=BIT},
      </if>
      <if test="record.pycjDate != null">
        pycj_date = #{record.pycjDate,jdbcType=DATE},
      </if>
      <if test="record.isBg != null">
        is_bg = #{record.isBg,jdbcType=BIT},
      </if>
      <if test="record.bgDate != null">
        bg_date = #{record.bgDate,jdbcType=DATE},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.integrity != null">
        integrity = #{record.integrity,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ow_party
    set id = #{record.id,jdbcType=INTEGER},
      fid = #{record.fid,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      short_name = #{record.shortName,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      unit_type_id = #{record.unitTypeId,jdbcType=INTEGER},
      branch_type = #{record.branchType,jdbcType=INTEGER},
      is_enterprise_big = #{record.isEnterpriseBig,jdbcType=BIT},
      is_enterprise_nationalized = #{record.isEnterpriseNationalized,jdbcType=BIT},
      is_separate = #{record.isSeparate,jdbcType=BIT},
      phone = #{record.phone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      fax = #{record.fax,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mailbox = #{record.mailbox,jdbcType=VARCHAR},
      found_time = #{record.foundTime,jdbcType=DATE},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      is_pycj = #{record.isPycj,jdbcType=BIT},
      pycj_date = #{record.pycjDate,jdbcType=DATE},
      is_bg = #{record.isBg,jdbcType=BIT},
      bg_date = #{record.bgDate,jdbcType=DATE},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      integrity = #{record.integrity,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.party.Party">
    update ow_party
    <set>
      <if test="fid != null">
        fid = #{fid,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="shortName != null">
        short_name = #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="unitTypeId != null">
        unit_type_id = #{unitTypeId,jdbcType=INTEGER},
      </if>
      <if test="branchType != null">
        branch_type = #{branchType,jdbcType=INTEGER},
      </if>
      <if test="isEnterpriseBig != null">
        is_enterprise_big = #{isEnterpriseBig,jdbcType=BIT},
      </if>
      <if test="isEnterpriseNationalized != null">
        is_enterprise_nationalized = #{isEnterpriseNationalized,jdbcType=BIT},
      </if>
      <if test="isSeparate != null">
        is_separate = #{isSeparate,jdbcType=BIT},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="fax != null">
        fax = #{fax,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null">
        mailbox = #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="foundTime != null">
        found_time = #{foundTime,jdbcType=DATE},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isPycj != null">
        is_pycj = #{isPycj,jdbcType=BIT},
      </if>
      <if test="pycjDate != null">
        pycj_date = #{pycjDate,jdbcType=DATE},
      </if>
      <if test="isBg != null">
        is_bg = #{isBg,jdbcType=BIT},
      </if>
      <if test="bgDate != null">
        bg_date = #{bgDate,jdbcType=DATE},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="integrity != null">
        integrity = #{integrity,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.party.Party">
    update ow_party
    set fid = #{fid,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      short_name = #{shortName,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      unit_id = #{unitId,jdbcType=INTEGER},
      class_id = #{classId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      unit_type_id = #{unitTypeId,jdbcType=INTEGER},
      branch_type = #{branchType,jdbcType=INTEGER},
      is_enterprise_big = #{isEnterpriseBig,jdbcType=BIT},
      is_enterprise_nationalized = #{isEnterpriseNationalized,jdbcType=BIT},
      is_separate = #{isSeparate,jdbcType=BIT},
      phone = #{phone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      fax = #{fax,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      mailbox = #{mailbox,jdbcType=VARCHAR},
      found_time = #{foundTime,jdbcType=DATE},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_pycj = #{isPycj,jdbcType=BIT},
      pycj_date = #{pycjDate,jdbcType=DATE},
      is_bg = #{isBg,jdbcType=BIT},
      bg_date = #{bgDate,jdbcType=DATE},
      is_deleted = #{isDeleted,jdbcType=BIT},
      integrity = #{integrity,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.party.PartyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>