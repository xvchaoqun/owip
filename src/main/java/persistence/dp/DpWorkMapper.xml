<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.dp.DpWorkMapper">
  <resultMap id="BaseResultMap" type="domain.dp.DpWork">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="fid" jdbcType="INTEGER" property="fid" />
    <result column="is_edu_work" jdbcType="BIT" property="isEduWork" />
    <result column="sub_work_count" jdbcType="INTEGER" property="subWorkCount" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="start_time" jdbcType="DATE" property="startTime" />
    <result column="end_time" jdbcType="DATE" property="endTime" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
    <result column="unit_ids" jdbcType="VARCHAR" property="unitIds" />
    <result column="work_types" jdbcType="VARCHAR" property="workTypes" />
    <result column="is_cadre" jdbcType="BIT" property="isCadre" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, fid, is_edu_work, sub_work_count, user_id, start_time, end_time, detail, unit_ids, 
    work_types, is_cadre, remark, status
  </sql>
  <select id="selectByExample" parameterType="domain.dp.DpWorkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dp_work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dp_work
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dp_work
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.dp.DpWorkExample">
    delete from dp_work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.dp.DpWork">
    insert into dp_work (id, fid, is_edu_work, 
      sub_work_count, user_id, start_time, 
      end_time, detail, unit_ids, 
      work_types, is_cadre, remark, 
      status)
    values (#{id,jdbcType=INTEGER}, #{fid,jdbcType=INTEGER}, #{isEduWork,jdbcType=BIT}, 
      #{subWorkCount,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{startTime,jdbcType=DATE}, 
      #{endTime,jdbcType=DATE}, #{detail,jdbcType=VARCHAR}, #{unitIds,jdbcType=VARCHAR}, 
      #{workTypes,jdbcType=VARCHAR}, #{isCadre,jdbcType=BIT}, #{remark,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="domain.dp.DpWork">
    insert into dp_work
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fid != null">
        fid,
      </if>
      <if test="isEduWork != null">
        is_edu_work,
      </if>
      <if test="subWorkCount != null">
        sub_work_count,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="detail != null">
        detail,
      </if>
      <if test="unitIds != null">
        unit_ids,
      </if>
      <if test="workTypes != null">
        work_types,
      </if>
      <if test="isCadre != null">
        is_cadre,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fid != null">
        #{fid,jdbcType=INTEGER},
      </if>
      <if test="isEduWork != null">
        #{isEduWork,jdbcType=BIT},
      </if>
      <if test="subWorkCount != null">
        #{subWorkCount,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=DATE},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
      <if test="unitIds != null">
        #{unitIds,jdbcType=VARCHAR},
      </if>
      <if test="workTypes != null">
        #{workTypes,jdbcType=VARCHAR},
      </if>
      <if test="isCadre != null">
        #{isCadre,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <insert id="insertSelectiveSync" parameterType="domain.dp.DpWork" useGeneratedKeys="true" keyProperty="id">
    insert into dp_work (id, fid, is_edu_work,
      sub_work_count, user_id, start_time,
      end_time, detail, unit_ids,
      work_types, is_cadre, remark,
      status)
    values (#{id,jdbcType=INTEGER}, #{fid,jdbcType=INTEGER}, #{isEduWork,jdbcType=BIT},
      #{subWorkCount,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{startTime,jdbcType=DATE},
      #{endTime,jdbcType=DATE}, #{detail,jdbcType=VARCHAR}, #{unitIds,jdbcType=VARCHAR},
      #{workTypes,jdbcType=VARCHAR}, #{isCadre,jdbcType=BIT}, #{remark,jdbcType=VARCHAR},
      #{status,jdbcType=TINYINT})
  </insert>
  <select id="countByExample" parameterType="domain.dp.DpWorkExample" resultType="java.lang.Long">
    select count(*) from dp_work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dp_work
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fid != null">
        fid = #{record.fid,jdbcType=INTEGER},
      </if>
      <if test="record.isEduWork != null">
        is_edu_work = #{record.isEduWork,jdbcType=BIT},
      </if>
      <if test="record.subWorkCount != null">
        sub_work_count = #{record.subWorkCount,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=DATE},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=DATE},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
      <if test="record.unitIds != null">
        unit_ids = #{record.unitIds,jdbcType=VARCHAR},
      </if>
      <if test="record.workTypes != null">
        work_types = #{record.workTypes,jdbcType=VARCHAR},
      </if>
      <if test="record.isCadre != null">
        is_cadre = #{record.isCadre,jdbcType=BIT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dp_work
    set id = #{record.id,jdbcType=INTEGER},
      fid = #{record.fid,jdbcType=INTEGER},
      is_edu_work = #{record.isEduWork,jdbcType=BIT},
      sub_work_count = #{record.subWorkCount,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=DATE},
      end_time = #{record.endTime,jdbcType=DATE},
      detail = #{record.detail,jdbcType=VARCHAR},
      unit_ids = #{record.unitIds,jdbcType=VARCHAR},
      work_types = #{record.workTypes,jdbcType=VARCHAR},
      is_cadre = #{record.isCadre,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.dp.DpWork">
    update dp_work
    <set>
      <if test="fid != null">
        fid = #{fid,jdbcType=INTEGER},
      </if>
      <if test="isEduWork != null">
        is_edu_work = #{isEduWork,jdbcType=BIT},
      </if>
      <if test="subWorkCount != null">
        sub_work_count = #{subWorkCount,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
      <if test="unitIds != null">
        unit_ids = #{unitIds,jdbcType=VARCHAR},
      </if>
      <if test="workTypes != null">
        work_types = #{workTypes,jdbcType=VARCHAR},
      </if>
      <if test="isCadre != null">
        is_cadre = #{isCadre,jdbcType=BIT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.dp.DpWork">
    update dp_work
    set fid = #{fid,jdbcType=INTEGER},
      is_edu_work = #{isEduWork,jdbcType=BIT},
      sub_work_count = #{subWorkCount,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=DATE},
      end_time = #{endTime,jdbcType=DATE},
      detail = #{detail,jdbcType=VARCHAR},
      unit_ids = #{unitIds,jdbcType=VARCHAR},
      work_types = #{workTypes,jdbcType=VARCHAR},
      is_cadre = #{isCadre,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.dp.DpWorkExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dp_work
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>