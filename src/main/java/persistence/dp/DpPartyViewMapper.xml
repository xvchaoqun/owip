<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.dp.DpPartyViewMapper">
  <resultMap id="BaseResultMap" type="domain.dp.DpPartyView">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="mailbox" jdbcType="VARCHAR" property="mailbox" />
    <result column="found_time" jdbcType="DATE" property="foundTime" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="delete_time" jdbcType="DATE" property="deleteTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="member_count" jdbcType="BIGINT" property="memberCount" />
    <result column="teacher_member_count" jdbcType="DECIMAL" property="teacherMemberCount" />
    <result column="retire_member_count" jdbcType="DECIMAL" property="retireMemberCount" />
    <result column="honor_retire_count" jdbcType="DECIMAL" property="honorRetireCount" />
    <result column="group_count" jdbcType="BIGINT" property="groupCount" />
    <result column="present_group_count" jdbcType="BIGINT" property="presentGroupCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, name, short_name, class_id, phone, email, mailbox, found_time, sort_order, 
    create_time, update_time, is_deleted, delete_time, remark, member_count, teacher_member_count, 
    retire_member_count, honor_retire_count, group_count, present_group_count
  </sql>
  <select id="selectByExample" parameterType="domain.dp.DpPartyViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dp_party_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="domain.dp.DpPartyViewExample">
    delete from dp_party_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.dp.DpPartyView">
    insert into dp_party_view (id, code, name, 
      short_name, class_id, phone, 
      email, mailbox, found_time, 
      sort_order, create_time, update_time, 
      is_deleted, delete_time, remark, 
      member_count, teacher_member_count, retire_member_count, 
      honor_retire_count, group_count, present_group_count
      )
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{shortName,jdbcType=VARCHAR}, #{classId,jdbcType=INTEGER}, #{phone,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{mailbox,jdbcType=VARCHAR}, #{foundTime,jdbcType=DATE}, 
      #{sortOrder,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{isDeleted,jdbcType=BIT}, #{deleteTime,jdbcType=DATE}, #{remark,jdbcType=VARCHAR}, 
      #{memberCount,jdbcType=BIGINT}, #{teacherMemberCount,jdbcType=DECIMAL}, #{retireMemberCount,jdbcType=DECIMAL}, 
      #{honorRetireCount,jdbcType=DECIMAL}, #{groupCount,jdbcType=BIGINT}, #{presentGroupCount,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.dp.DpPartyView">
    insert into dp_party_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="shortName != null">
        short_name,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="mailbox != null">
        mailbox,
      </if>
      <if test="foundTime != null">
        found_time,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="memberCount != null">
        member_count,
      </if>
      <if test="teacherMemberCount != null">
        teacher_member_count,
      </if>
      <if test="retireMemberCount != null">
        retire_member_count,
      </if>
      <if test="honorRetireCount != null">
        honor_retire_count,
      </if>
      <if test="groupCount != null">
        group_count,
      </if>
      <if test="presentGroupCount != null">
        present_group_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="shortName != null">
        #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="mailbox != null">
        #{mailbox,jdbcType=VARCHAR},
      </if>
      <if test="foundTime != null">
        #{foundTime,jdbcType=DATE},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=DATE},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="memberCount != null">
        #{memberCount,jdbcType=BIGINT},
      </if>
      <if test="teacherMemberCount != null">
        #{teacherMemberCount,jdbcType=DECIMAL},
      </if>
      <if test="retireMemberCount != null">
        #{retireMemberCount,jdbcType=DECIMAL},
      </if>
      <if test="honorRetireCount != null">
        #{honorRetireCount,jdbcType=DECIMAL},
      </if>
      <if test="groupCount != null">
        #{groupCount,jdbcType=BIGINT},
      </if>
      <if test="presentGroupCount != null">
        #{presentGroupCount,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.dp.DpPartyViewExample" resultType="java.lang.Long">
    select count(*) from dp_party_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dp_party_view
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.shortName != null">
        short_name = #{record.shortName,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.mailbox != null">
        mailbox = #{record.mailbox,jdbcType=VARCHAR},
      </if>
      <if test="record.foundTime != null">
        found_time = #{record.foundTime,jdbcType=DATE},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.deleteTime != null">
        delete_time = #{record.deleteTime,jdbcType=DATE},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.memberCount != null">
        member_count = #{record.memberCount,jdbcType=BIGINT},
      </if>
      <if test="record.teacherMemberCount != null">
        teacher_member_count = #{record.teacherMemberCount,jdbcType=DECIMAL},
      </if>
      <if test="record.retireMemberCount != null">
        retire_member_count = #{record.retireMemberCount,jdbcType=DECIMAL},
      </if>
      <if test="record.honorRetireCount != null">
        honor_retire_count = #{record.honorRetireCount,jdbcType=DECIMAL},
      </if>
      <if test="record.groupCount != null">
        group_count = #{record.groupCount,jdbcType=BIGINT},
      </if>
      <if test="record.presentGroupCount != null">
        present_group_count = #{record.presentGroupCount,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dp_party_view
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      short_name = #{record.shortName,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      mailbox = #{record.mailbox,jdbcType=VARCHAR},
      found_time = #{record.foundTime,jdbcType=DATE},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      delete_time = #{record.deleteTime,jdbcType=DATE},
      remark = #{record.remark,jdbcType=VARCHAR},
      member_count = #{record.memberCount,jdbcType=BIGINT},
      teacher_member_count = #{record.teacherMemberCount,jdbcType=DECIMAL},
      retire_member_count = #{record.retireMemberCount,jdbcType=DECIMAL},
      honor_retire_count = #{record.honorRetireCount,jdbcType=DECIMAL},
      group_count = #{record.groupCount,jdbcType=BIGINT},
      present_group_count = #{record.presentGroupCount,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.dp.DpPartyViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dp_party_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>