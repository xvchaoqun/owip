<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.dp.DpNprViewMapper">
  <resultMap id="BaseResultMap" type="domain.dp.DpNprView">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="work_time" jdbcType="DATE" property="workTime" />
    <result column="unit_post" jdbcType="VARCHAR" property="unitPost" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="level" jdbcType="INTEGER" property="level" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="transfer_time" jdbcType="DATE" property="transferTime" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="school" jdbcType="VARCHAR" property="school" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="dp_grow_time" jdbcType="DATE" property="dpGrowTime" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, work_time, unit_post, type, level, is_deleted, transfer_time, education, 
    degree, school, major, sort_order, remark, party_id, dp_grow_time, unit, gender, 
    birth, nation, native_place, mobile, phone
  </sql>
  <select id="selectByExample" parameterType="domain.dp.DpNprViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dp_npr_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="domain.dp.DpNprViewExample">
    delete from dp_npr_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.dp.DpNprView">
    insert into dp_npr_view (id, user_id, work_time, 
      unit_post, type, level, 
      is_deleted, transfer_time, education, 
      degree, school, major, 
      sort_order, remark, party_id, 
      dp_grow_time, unit, gender, 
      birth, nation, native_place, 
      mobile, phone)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{workTime,jdbcType=DATE}, 
      #{unitPost,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{level,jdbcType=INTEGER}, 
      #{isDeleted,jdbcType=BIT}, #{transferTime,jdbcType=DATE}, #{education,jdbcType=VARCHAR}, 
      #{degree,jdbcType=VARCHAR}, #{school,jdbcType=VARCHAR}, #{major,jdbcType=VARCHAR}, 
      #{sortOrder,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, #{partyId,jdbcType=INTEGER}, 
      #{dpGrowTime,jdbcType=DATE}, #{unit,jdbcType=VARCHAR}, #{gender,jdbcType=TINYINT}, 
      #{birth,jdbcType=DATE}, #{nation,jdbcType=VARCHAR}, #{nativePlace,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.dp.DpNprView">
    insert into dp_npr_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="workTime != null">
        work_time,
      </if>
      <if test="unitPost != null">
        unit_post,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="level != null">
        level,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="transferTime != null">
        transfer_time,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="school != null">
        school,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="dpGrowTime != null">
        dp_grow_time,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="nativePlace != null">
        native_place,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="workTime != null">
        #{workTime,jdbcType=DATE},
      </if>
      <if test="unitPost != null">
        #{unitPost,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="level != null">
        #{level,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="transferTime != null">
        #{transferTime,jdbcType=DATE},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="school != null">
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="dpGrowTime != null">
        #{dpGrowTime,jdbcType=DATE},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null">
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.dp.DpNprViewExample" resultType="java.lang.Long">
    select count(*) from dp_npr_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dp_npr_view
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.workTime != null">
        work_time = #{record.workTime,jdbcType=DATE},
      </if>
      <if test="record.unitPost != null">
        unit_post = #{record.unitPost,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.level != null">
        level = #{record.level,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.transferTime != null">
        transfer_time = #{record.transferTime,jdbcType=DATE},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.school != null">
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null">
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.dpGrowTime != null">
        dp_grow_time = #{record.dpGrowTime,jdbcType=DATE},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.nativePlace != null">
        native_place = #{record.nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dp_npr_view
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      work_time = #{record.workTime,jdbcType=DATE},
      unit_post = #{record.unitPost,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      level = #{record.level,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      transfer_time = #{record.transferTime,jdbcType=DATE},
      education = #{record.education,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      school = #{record.school,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      party_id = #{record.partyId,jdbcType=INTEGER},
      dp_grow_time = #{record.dpGrowTime,jdbcType=DATE},
      unit = #{record.unit,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      birth = #{record.birth,jdbcType=DATE},
      nation = #{record.nation,jdbcType=VARCHAR},
      native_place = #{record.nativePlace,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      phone = #{record.phone,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.dp.DpNprViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dp_npr_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>