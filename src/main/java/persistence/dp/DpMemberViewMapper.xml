<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.dp.DpMemberViewMapper">
  <resultMap id="BaseResultMap" type="domain.dp.DpMemberView">
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="dp_post" jdbcType="VARCHAR" property="dpPost" />
    <result column="source" jdbcType="TINYINT" property="source" />
    <result column="add_type" jdbcType="INTEGER" property="addType" />
    <result column="dp_grow_time" jdbcType="DATE" property="dpGrowTime" />
    <result column="is_party_member" jdbcType="BIT" property="isPartyMember" />
    <result column="grow_time" jdbcType="DATE" property="growTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="out_time" jdbcType="DATE" property="outTime" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="work_time" jdbcType="DATE" property="workTime" />
    <result column="authorized_type" jdbcType="VARCHAR" property="authorizedType" />
    <result column="high_edu" jdbcType="VARCHAR" property="highEdu" />
    <result column="high_degree" jdbcType="VARCHAR" property="highDegree" />
    <result column="is_retire" jdbcType="TINYINT" property="isRetire" />
    <result column="retire_time" jdbcType="DATE" property="retireTime" />
    <result column="is_honor_retire" jdbcType="BIT" property="isHonorRetire" />
    <result column="admin_level" jdbcType="INTEGER" property="adminLevel" />
    <result column="post" jdbcType="VARCHAR" property="post" />
    <result column="pro_post" jdbcType="VARCHAR" property="proPost" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, party_id, type, status, dp_post, source, add_type, dp_grow_time, is_party_member, 
    grow_time, create_time, out_time, address, mobile, email, remark, update_time, gender, 
    birth, nation, native_place, unit, work_time, authorized_type, high_edu, high_degree, 
    is_retire, retire_time, is_honor_retire, admin_level, post, pro_post
  </sql>
  <select id="selectByExample" parameterType="domain.dp.DpMemberViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dp_member_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="domain.dp.DpMemberViewExample">
    delete from dp_member_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.dp.DpMemberView">
    insert into dp_member_view (user_id, party_id, type, 
      status, dp_post, source, 
      add_type, dp_grow_time, is_party_member, 
      grow_time, create_time, out_time, 
      address, mobile, email, 
      remark, update_time, gender, 
      birth, nation, native_place, 
      unit, work_time, authorized_type, 
      high_edu, high_degree, is_retire, 
      retire_time, is_honor_retire, admin_level, 
      post, pro_post)
    values (#{userId,jdbcType=INTEGER}, #{partyId,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{dpPost,jdbcType=VARCHAR}, #{source,jdbcType=TINYINT}, 
      #{addType,jdbcType=INTEGER}, #{dpGrowTime,jdbcType=DATE}, #{isPartyMember,jdbcType=BIT}, 
      #{growTime,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, #{outTime,jdbcType=DATE}, 
      #{address,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{remark,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, #{gender,jdbcType=TINYINT}, 
      #{birth,jdbcType=DATE}, #{nation,jdbcType=VARCHAR}, #{nativePlace,jdbcType=VARCHAR}, 
      #{unit,jdbcType=VARCHAR}, #{workTime,jdbcType=DATE}, #{authorizedType,jdbcType=VARCHAR}, 
      #{highEdu,jdbcType=VARCHAR}, #{highDegree,jdbcType=VARCHAR}, #{isRetire,jdbcType=TINYINT}, 
      #{retireTime,jdbcType=DATE}, #{isHonorRetire,jdbcType=BIT}, #{adminLevel,jdbcType=INTEGER}, 
      #{post,jdbcType=VARCHAR}, #{proPost,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.dp.DpMemberView">
    insert into dp_member_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="dpPost != null">
        dp_post,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="addType != null">
        add_type,
      </if>
      <if test="dpGrowTime != null">
        dp_grow_time,
      </if>
      <if test="isPartyMember != null">
        is_party_member,
      </if>
      <if test="growTime != null">
        grow_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="nativePlace != null">
        native_place,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="workTime != null">
        work_time,
      </if>
      <if test="authorizedType != null">
        authorized_type,
      </if>
      <if test="highEdu != null">
        high_edu,
      </if>
      <if test="highDegree != null">
        high_degree,
      </if>
      <if test="isRetire != null">
        is_retire,
      </if>
      <if test="retireTime != null">
        retire_time,
      </if>
      <if test="isHonorRetire != null">
        is_honor_retire,
      </if>
      <if test="adminLevel != null">
        admin_level,
      </if>
      <if test="post != null">
        post,
      </if>
      <if test="proPost != null">
        pro_post,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="dpPost != null">
        #{dpPost,jdbcType=VARCHAR},
      </if>
      <if test="source != null">
        #{source,jdbcType=TINYINT},
      </if>
      <if test="addType != null">
        #{addType,jdbcType=INTEGER},
      </if>
      <if test="dpGrowTime != null">
        #{dpGrowTime,jdbcType=DATE},
      </if>
      <if test="isPartyMember != null">
        #{isPartyMember,jdbcType=BIT},
      </if>
      <if test="growTime != null">
        #{growTime,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=DATE},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null">
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="workTime != null">
        #{workTime,jdbcType=DATE},
      </if>
      <if test="authorizedType != null">
        #{authorizedType,jdbcType=VARCHAR},
      </if>
      <if test="highEdu != null">
        #{highEdu,jdbcType=VARCHAR},
      </if>
      <if test="highDegree != null">
        #{highDegree,jdbcType=VARCHAR},
      </if>
      <if test="isRetire != null">
        #{isRetire,jdbcType=TINYINT},
      </if>
      <if test="retireTime != null">
        #{retireTime,jdbcType=DATE},
      </if>
      <if test="isHonorRetire != null">
        #{isHonorRetire,jdbcType=BIT},
      </if>
      <if test="adminLevel != null">
        #{adminLevel,jdbcType=INTEGER},
      </if>
      <if test="post != null">
        #{post,jdbcType=VARCHAR},
      </if>
      <if test="proPost != null">
        #{proPost,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.dp.DpMemberViewExample" resultType="java.lang.Long">
    select count(*) from dp_member_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dp_member_view
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.dpPost != null">
        dp_post = #{record.dpPost,jdbcType=VARCHAR},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=TINYINT},
      </if>
      <if test="record.addType != null">
        add_type = #{record.addType,jdbcType=INTEGER},
      </if>
      <if test="record.dpGrowTime != null">
        dp_grow_time = #{record.dpGrowTime,jdbcType=DATE},
      </if>
      <if test="record.isPartyMember != null">
        is_party_member = #{record.isPartyMember,jdbcType=BIT},
      </if>
      <if test="record.growTime != null">
        grow_time = #{record.growTime,jdbcType=DATE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.outTime != null">
        out_time = #{record.outTime,jdbcType=DATE},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.nativePlace != null">
        native_place = #{record.nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.unit != null">
        unit = #{record.unit,jdbcType=VARCHAR},
      </if>
      <if test="record.workTime != null">
        work_time = #{record.workTime,jdbcType=DATE},
      </if>
      <if test="record.authorizedType != null">
        authorized_type = #{record.authorizedType,jdbcType=VARCHAR},
      </if>
      <if test="record.highEdu != null">
        high_edu = #{record.highEdu,jdbcType=VARCHAR},
      </if>
      <if test="record.highDegree != null">
        high_degree = #{record.highDegree,jdbcType=VARCHAR},
      </if>
      <if test="record.isRetire != null">
        is_retire = #{record.isRetire,jdbcType=TINYINT},
      </if>
      <if test="record.retireTime != null">
        retire_time = #{record.retireTime,jdbcType=DATE},
      </if>
      <if test="record.isHonorRetire != null">
        is_honor_retire = #{record.isHonorRetire,jdbcType=BIT},
      </if>
      <if test="record.adminLevel != null">
        admin_level = #{record.adminLevel,jdbcType=INTEGER},
      </if>
      <if test="record.post != null">
        post = #{record.post,jdbcType=VARCHAR},
      </if>
      <if test="record.proPost != null">
        pro_post = #{record.proPost,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dp_member_view
    set user_id = #{record.userId,jdbcType=INTEGER},
      party_id = #{record.partyId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      dp_post = #{record.dpPost,jdbcType=VARCHAR},
      source = #{record.source,jdbcType=TINYINT},
      add_type = #{record.addType,jdbcType=INTEGER},
      dp_grow_time = #{record.dpGrowTime,jdbcType=DATE},
      is_party_member = #{record.isPartyMember,jdbcType=BIT},
      grow_time = #{record.growTime,jdbcType=DATE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      out_time = #{record.outTime,jdbcType=DATE},
      address = #{record.address,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      gender = #{record.gender,jdbcType=TINYINT},
      birth = #{record.birth,jdbcType=DATE},
      nation = #{record.nation,jdbcType=VARCHAR},
      native_place = #{record.nativePlace,jdbcType=VARCHAR},
      unit = #{record.unit,jdbcType=VARCHAR},
      work_time = #{record.workTime,jdbcType=DATE},
      authorized_type = #{record.authorizedType,jdbcType=VARCHAR},
      high_edu = #{record.highEdu,jdbcType=VARCHAR},
      high_degree = #{record.highDegree,jdbcType=VARCHAR},
      is_retire = #{record.isRetire,jdbcType=TINYINT},
      retire_time = #{record.retireTime,jdbcType=DATE},
      is_honor_retire = #{record.isHonorRetire,jdbcType=BIT},
      admin_level = #{record.adminLevel,jdbcType=INTEGER},
      post = #{record.post,jdbcType=VARCHAR},
      pro_post = #{record.proPost,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.dp.DpMemberViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dp_member_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>