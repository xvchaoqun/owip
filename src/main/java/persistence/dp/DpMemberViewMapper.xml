<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.dp.DpMemberViewMapper">
  <resultMap id="BaseResultMap" type="domain.dp.DpMemberView">
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="political_status" jdbcType="TINYINT" property="politicalStatus" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="source" jdbcType="TINYINT" property="source" />
    <result column="add_type" jdbcType="INTEGER" property="addType" />
    <result column="transfer_time" jdbcType="TIMESTAMP" property="transferTime" />
    <result column="apply_time" jdbcType="DATE" property="applyTime" />
    <result column="active_time" jdbcType="DATE" property="activeTime" />
    <result column="candidate_time" jdbcType="DATE" property="candidateTime" />
    <result column="sponsor" jdbcType="VARCHAR" property="sponsor" />
    <result column="grow_time" jdbcType="DATE" property="growTime" />
    <result column="positive_time" jdbcType="DATE" property="positiveTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="party_post" jdbcType="VARCHAR" property="partyPost" />
    <result column="party_reward" jdbcType="VARCHAR" property="partyReward" />
    <result column="other_reward" jdbcType="VARCHAR" property="otherReward" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="out_status" jdbcType="TINYINT" property="outStatus" />
    <result column="out_handle_time" jdbcType="DATE" property="outHandleTime" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="authorized_type" jdbcType="VARCHAR" property="authorizedType" />
    <result column="pro_post" jdbcType="VARCHAR" property="proPost" />
    <result column="is_retire" jdbcType="BIT" property="isRetire" />
    <result column="retire_time" jdbcType="DATE" property="retireTime" />
    <result column="is_honor_retire" jdbcType="BIT" property="isHonorRetire" />
    <result column="staff_type" jdbcType="VARCHAR" property="staffType" />
    <result column="post_class" jdbcType="VARCHAR" property="postClass" />
    <result column="edu_level" jdbcType="VARCHAR" property="eduLevel" />
    <result column="edu_type" jdbcType="VARCHAR" property="eduType" />
    <result column="actual_enrol_time" jdbcType="DATE" property="actualEnrolTime" />
    <result column="is_full_time" jdbcType="BIT" property="isFullTime" />
    <result column="expect_graduate_time" jdbcType="DATE" property="expectGraduateTime" />
    <result column="delay_year" jdbcType="REAL" property="delayYear" />
    <result column="actual_graduate_time" jdbcType="DATE" property="actualGraduateTime" />
    <result column="sync_source" jdbcType="TINYINT" property="syncSource" />
    <result column="grade" jdbcType="VARCHAR" property="grade" />
    <result column="student_type" jdbcType="VARCHAR" property="studentType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, party_id, political_status, type, status, source, add_type, transfer_time, 
    apply_time, active_time, candidate_time, sponsor, grow_time, positive_time, create_time, 
    update_time, party_post, party_reward, other_reward, unit_id, gender, birth, nation, 
    native_place, mobile, out_status, out_handle_time, education, authorized_type, pro_post, 
    is_retire, retire_time, is_honor_retire, staff_type, post_class, edu_level, edu_type, 
    actual_enrol_time, is_full_time, expect_graduate_time, delay_year, actual_graduate_time, 
    sync_source, grade, student_type
  </sql>
  <select id="selectByExample" parameterType="domain.dp.DpMemberViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dp_member_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="domain.dp.DpMemberViewExample">
    delete from dp_member_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.dp.DpMemberView">
    insert into dp_member_view (user_id, party_id, political_status, 
      type, status, source, 
      add_type, transfer_time, apply_time, 
      active_time, candidate_time, sponsor, 
      grow_time, positive_time, create_time, 
      update_time, party_post, party_reward, 
      other_reward, unit_id, gender, 
      birth, nation, native_place, 
      mobile, out_status, out_handle_time, 
      education, authorized_type, pro_post, 
      is_retire, retire_time, is_honor_retire, 
      staff_type, post_class, edu_level, 
      edu_type, actual_enrol_time, is_full_time, 
      expect_graduate_time, delay_year, actual_graduate_time, 
      sync_source, grade, student_type
      )
    values (#{userId,jdbcType=INTEGER}, #{partyId,jdbcType=INTEGER}, #{politicalStatus,jdbcType=TINYINT}, 
      #{type,jdbcType=TINYINT}, #{status,jdbcType=TINYINT}, #{source,jdbcType=TINYINT}, 
      #{addType,jdbcType=INTEGER}, #{transferTime,jdbcType=TIMESTAMP}, #{applyTime,jdbcType=DATE}, 
      #{activeTime,jdbcType=DATE}, #{candidateTime,jdbcType=DATE}, #{sponsor,jdbcType=VARCHAR}, 
      #{growTime,jdbcType=DATE}, #{positiveTime,jdbcType=DATE}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{partyPost,jdbcType=VARCHAR}, #{partyReward,jdbcType=VARCHAR}, 
      #{otherReward,jdbcType=VARCHAR}, #{unitId,jdbcType=INTEGER}, #{gender,jdbcType=TINYINT}, 
      #{birth,jdbcType=DATE}, #{nation,jdbcType=VARCHAR}, #{nativePlace,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{outStatus,jdbcType=TINYINT}, #{outHandleTime,jdbcType=DATE}, 
      #{education,jdbcType=VARCHAR}, #{authorizedType,jdbcType=VARCHAR}, #{proPost,jdbcType=VARCHAR}, 
      #{isRetire,jdbcType=BIT}, #{retireTime,jdbcType=DATE}, #{isHonorRetire,jdbcType=BIT}, 
      #{staffType,jdbcType=VARCHAR}, #{postClass,jdbcType=VARCHAR}, #{eduLevel,jdbcType=VARCHAR}, 
      #{eduType,jdbcType=VARCHAR}, #{actualEnrolTime,jdbcType=DATE}, #{isFullTime,jdbcType=BIT}, 
      #{expectGraduateTime,jdbcType=DATE}, #{delayYear,jdbcType=REAL}, #{actualGraduateTime,jdbcType=DATE}, 
      #{syncSource,jdbcType=TINYINT}, #{grade,jdbcType=VARCHAR}, #{studentType,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.dp.DpMemberView">
    insert into dp_member_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="politicalStatus != null">
        political_status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="source != null">
        source,
      </if>
      <if test="addType != null">
        add_type,
      </if>
      <if test="transferTime != null">
        transfer_time,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="activeTime != null">
        active_time,
      </if>
      <if test="candidateTime != null">
        candidate_time,
      </if>
      <if test="sponsor != null">
        sponsor,
      </if>
      <if test="growTime != null">
        grow_time,
      </if>
      <if test="positiveTime != null">
        positive_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="partyPost != null">
        party_post,
      </if>
      <if test="partyReward != null">
        party_reward,
      </if>
      <if test="otherReward != null">
        other_reward,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="nativePlace != null">
        native_place,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="outStatus != null">
        out_status,
      </if>
      <if test="outHandleTime != null">
        out_handle_time,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="authorizedType != null">
        authorized_type,
      </if>
      <if test="proPost != null">
        pro_post,
      </if>
      <if test="isRetire != null">
        is_retire,
      </if>
      <if test="retireTime != null">
        retire_time,
      </if>
      <if test="isHonorRetire != null">
        is_honor_retire,
      </if>
      <if test="staffType != null">
        staff_type,
      </if>
      <if test="postClass != null">
        post_class,
      </if>
      <if test="eduLevel != null">
        edu_level,
      </if>
      <if test="eduType != null">
        edu_type,
      </if>
      <if test="actualEnrolTime != null">
        actual_enrol_time,
      </if>
      <if test="isFullTime != null">
        is_full_time,
      </if>
      <if test="expectGraduateTime != null">
        expect_graduate_time,
      </if>
      <if test="delayYear != null">
        delay_year,
      </if>
      <if test="actualGraduateTime != null">
        actual_graduate_time,
      </if>
      <if test="syncSource != null">
        sync_source,
      </if>
      <if test="grade != null">
        grade,
      </if>
      <if test="studentType != null">
        student_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="politicalStatus != null">
        #{politicalStatus,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="source != null">
        #{source,jdbcType=TINYINT},
      </if>
      <if test="addType != null">
        #{addType,jdbcType=INTEGER},
      </if>
      <if test="transferTime != null">
        #{transferTime,jdbcType=TIMESTAMP},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=DATE},
      </if>
      <if test="activeTime != null">
        #{activeTime,jdbcType=DATE},
      </if>
      <if test="candidateTime != null">
        #{candidateTime,jdbcType=DATE},
      </if>
      <if test="sponsor != null">
        #{sponsor,jdbcType=VARCHAR},
      </if>
      <if test="growTime != null">
        #{growTime,jdbcType=DATE},
      </if>
      <if test="positiveTime != null">
        #{positiveTime,jdbcType=DATE},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="partyPost != null">
        #{partyPost,jdbcType=VARCHAR},
      </if>
      <if test="partyReward != null">
        #{partyReward,jdbcType=VARCHAR},
      </if>
      <if test="otherReward != null">
        #{otherReward,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null">
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="outStatus != null">
        #{outStatus,jdbcType=TINYINT},
      </if>
      <if test="outHandleTime != null">
        #{outHandleTime,jdbcType=DATE},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="authorizedType != null">
        #{authorizedType,jdbcType=VARCHAR},
      </if>
      <if test="proPost != null">
        #{proPost,jdbcType=VARCHAR},
      </if>
      <if test="isRetire != null">
        #{isRetire,jdbcType=BIT},
      </if>
      <if test="retireTime != null">
        #{retireTime,jdbcType=DATE},
      </if>
      <if test="isHonorRetire != null">
        #{isHonorRetire,jdbcType=BIT},
      </if>
      <if test="staffType != null">
        #{staffType,jdbcType=VARCHAR},
      </if>
      <if test="postClass != null">
        #{postClass,jdbcType=VARCHAR},
      </if>
      <if test="eduLevel != null">
        #{eduLevel,jdbcType=VARCHAR},
      </if>
      <if test="eduType != null">
        #{eduType,jdbcType=VARCHAR},
      </if>
      <if test="actualEnrolTime != null">
        #{actualEnrolTime,jdbcType=DATE},
      </if>
      <if test="isFullTime != null">
        #{isFullTime,jdbcType=BIT},
      </if>
      <if test="expectGraduateTime != null">
        #{expectGraduateTime,jdbcType=DATE},
      </if>
      <if test="delayYear != null">
        #{delayYear,jdbcType=REAL},
      </if>
      <if test="actualGraduateTime != null">
        #{actualGraduateTime,jdbcType=DATE},
      </if>
      <if test="syncSource != null">
        #{syncSource,jdbcType=TINYINT},
      </if>
      <if test="grade != null">
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="studentType != null">
        #{studentType,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.dp.DpMemberViewExample" resultType="java.lang.Long">
    select count(*) from dp_member_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dp_member_view
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.politicalStatus != null">
        political_status = #{record.politicalStatus,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.source != null">
        source = #{record.source,jdbcType=TINYINT},
      </if>
      <if test="record.addType != null">
        add_type = #{record.addType,jdbcType=INTEGER},
      </if>
      <if test="record.transferTime != null">
        transfer_time = #{record.transferTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.applyTime != null">
        apply_time = #{record.applyTime,jdbcType=DATE},
      </if>
      <if test="record.activeTime != null">
        active_time = #{record.activeTime,jdbcType=DATE},
      </if>
      <if test="record.candidateTime != null">
        candidate_time = #{record.candidateTime,jdbcType=DATE},
      </if>
      <if test="record.sponsor != null">
        sponsor = #{record.sponsor,jdbcType=VARCHAR},
      </if>
      <if test="record.growTime != null">
        grow_time = #{record.growTime,jdbcType=DATE},
      </if>
      <if test="record.positiveTime != null">
        positive_time = #{record.positiveTime,jdbcType=DATE},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.partyPost != null">
        party_post = #{record.partyPost,jdbcType=VARCHAR},
      </if>
      <if test="record.partyReward != null">
        party_reward = #{record.partyReward,jdbcType=VARCHAR},
      </if>
      <if test="record.otherReward != null">
        other_reward = #{record.otherReward,jdbcType=VARCHAR},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.nativePlace != null">
        native_place = #{record.nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.outStatus != null">
        out_status = #{record.outStatus,jdbcType=TINYINT},
      </if>
      <if test="record.outHandleTime != null">
        out_handle_time = #{record.outHandleTime,jdbcType=DATE},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.authorizedType != null">
        authorized_type = #{record.authorizedType,jdbcType=VARCHAR},
      </if>
      <if test="record.proPost != null">
        pro_post = #{record.proPost,jdbcType=VARCHAR},
      </if>
      <if test="record.isRetire != null">
        is_retire = #{record.isRetire,jdbcType=BIT},
      </if>
      <if test="record.retireTime != null">
        retire_time = #{record.retireTime,jdbcType=DATE},
      </if>
      <if test="record.isHonorRetire != null">
        is_honor_retire = #{record.isHonorRetire,jdbcType=BIT},
      </if>
      <if test="record.staffType != null">
        staff_type = #{record.staffType,jdbcType=VARCHAR},
      </if>
      <if test="record.postClass != null">
        post_class = #{record.postClass,jdbcType=VARCHAR},
      </if>
      <if test="record.eduLevel != null">
        edu_level = #{record.eduLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.eduType != null">
        edu_type = #{record.eduType,jdbcType=VARCHAR},
      </if>
      <if test="record.actualEnrolTime != null">
        actual_enrol_time = #{record.actualEnrolTime,jdbcType=DATE},
      </if>
      <if test="record.isFullTime != null">
        is_full_time = #{record.isFullTime,jdbcType=BIT},
      </if>
      <if test="record.expectGraduateTime != null">
        expect_graduate_time = #{record.expectGraduateTime,jdbcType=DATE},
      </if>
      <if test="record.delayYear != null">
        delay_year = #{record.delayYear,jdbcType=REAL},
      </if>
      <if test="record.actualGraduateTime != null">
        actual_graduate_time = #{record.actualGraduateTime,jdbcType=DATE},
      </if>
      <if test="record.syncSource != null">
        sync_source = #{record.syncSource,jdbcType=TINYINT},
      </if>
      <if test="record.grade != null">
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.studentType != null">
        student_type = #{record.studentType,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dp_member_view
    set user_id = #{record.userId,jdbcType=INTEGER},
      party_id = #{record.partyId,jdbcType=INTEGER},
      political_status = #{record.politicalStatus,jdbcType=TINYINT},
      type = #{record.type,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      source = #{record.source,jdbcType=TINYINT},
      add_type = #{record.addType,jdbcType=INTEGER},
      transfer_time = #{record.transferTime,jdbcType=TIMESTAMP},
      apply_time = #{record.applyTime,jdbcType=DATE},
      active_time = #{record.activeTime,jdbcType=DATE},
      candidate_time = #{record.candidateTime,jdbcType=DATE},
      sponsor = #{record.sponsor,jdbcType=VARCHAR},
      grow_time = #{record.growTime,jdbcType=DATE},
      positive_time = #{record.positiveTime,jdbcType=DATE},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      party_post = #{record.partyPost,jdbcType=VARCHAR},
      party_reward = #{record.partyReward,jdbcType=VARCHAR},
      other_reward = #{record.otherReward,jdbcType=VARCHAR},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      gender = #{record.gender,jdbcType=TINYINT},
      birth = #{record.birth,jdbcType=DATE},
      nation = #{record.nation,jdbcType=VARCHAR},
      native_place = #{record.nativePlace,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      out_status = #{record.outStatus,jdbcType=TINYINT},
      out_handle_time = #{record.outHandleTime,jdbcType=DATE},
      education = #{record.education,jdbcType=VARCHAR},
      authorized_type = #{record.authorizedType,jdbcType=VARCHAR},
      pro_post = #{record.proPost,jdbcType=VARCHAR},
      is_retire = #{record.isRetire,jdbcType=BIT},
      retire_time = #{record.retireTime,jdbcType=DATE},
      is_honor_retire = #{record.isHonorRetire,jdbcType=BIT},
      staff_type = #{record.staffType,jdbcType=VARCHAR},
      post_class = #{record.postClass,jdbcType=VARCHAR},
      edu_level = #{record.eduLevel,jdbcType=VARCHAR},
      edu_type = #{record.eduType,jdbcType=VARCHAR},
      actual_enrol_time = #{record.actualEnrolTime,jdbcType=DATE},
      is_full_time = #{record.isFullTime,jdbcType=BIT},
      expect_graduate_time = #{record.expectGraduateTime,jdbcType=DATE},
      delay_year = #{record.delayYear,jdbcType=REAL},
      actual_graduate_time = #{record.actualGraduateTime,jdbcType=DATE},
      sync_source = #{record.syncSource,jdbcType=TINYINT},
      grade = #{record.grade,jdbcType=VARCHAR},
      student_type = #{record.studentType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.dp.DpMemberViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dp_member_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>