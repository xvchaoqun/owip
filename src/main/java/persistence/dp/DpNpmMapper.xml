<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.dp.DpNpmMapper">
  <resultMap id="BaseResultMap" type="domain.dp.DpNpm">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="add_time" jdbcType="DATE" property="addTime" />
    <result column="post" jdbcType="VARCHAR" property="post" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="authorized_type" jdbcType="VARCHAR" property="authorizedType" />
    <result column="pro_post" jdbcType="VARCHAR" property="proPost" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="out_time" jdbcType="DATE" property="outTime" />
    <result column="transfer_time" jdbcType="DATE" property="transferTime" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, add_time, post, education, degree, authorized_type, pro_post, unit_id, 
    status, out_time, transfer_time, sort_order, remark
  </sql>
  <select id="selectByExample" parameterType="domain.dp.DpNpmExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dp_npm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dp_npm
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dp_npm
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.dp.DpNpmExample">
    delete from dp_npm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.dp.DpNpm">
    insert into dp_npm (id, user_id, add_time, 
      post, education, degree, 
      authorized_type, pro_post, unit_id, 
      status, out_time, transfer_time, 
      sort_order, remark)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{addTime,jdbcType=DATE}, 
      #{post,jdbcType=VARCHAR}, #{education,jdbcType=VARCHAR}, #{degree,jdbcType=VARCHAR}, 
      #{authorizedType,jdbcType=VARCHAR}, #{proPost,jdbcType=VARCHAR}, #{unitId,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{outTime,jdbcType=DATE}, #{transferTime,jdbcType=DATE}, 
      #{sortOrder,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.dp.DpNpm">
    insert into dp_npm
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="post != null">
        post,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="authorizedType != null">
        authorized_type,
      </if>
      <if test="proPost != null">
        pro_post,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="outTime != null">
        out_time,
      </if>
      <if test="transferTime != null">
        transfer_time,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=DATE},
      </if>
      <if test="post != null">
        #{post,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="authorizedType != null">
        #{authorizedType,jdbcType=VARCHAR},
      </if>
      <if test="proPost != null">
        #{proPost,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="outTime != null">
        #{outTime,jdbcType=DATE},
      </if>
      <if test="transferTime != null">
        #{transferTime,jdbcType=DATE},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.dp.DpNpmExample" resultType="java.lang.Long">
    select count(*) from dp_npm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dp_npm
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=DATE},
      </if>
      <if test="record.post != null">
        post = #{record.post,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.authorizedType != null">
        authorized_type = #{record.authorizedType,jdbcType=VARCHAR},
      </if>
      <if test="record.proPost != null">
        pro_post = #{record.proPost,jdbcType=VARCHAR},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.outTime != null">
        out_time = #{record.outTime,jdbcType=DATE},
      </if>
      <if test="record.transferTime != null">
        transfer_time = #{record.transferTime,jdbcType=DATE},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dp_npm
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=DATE},
      post = #{record.post,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      authorized_type = #{record.authorizedType,jdbcType=VARCHAR},
      pro_post = #{record.proPost,jdbcType=VARCHAR},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      out_time = #{record.outTime,jdbcType=DATE},
      transfer_time = #{record.transferTime,jdbcType=DATE},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.dp.DpNpm">
    update dp_npm
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=DATE},
      </if>
      <if test="post != null">
        post = #{post,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="authorizedType != null">
        authorized_type = #{authorizedType,jdbcType=VARCHAR},
      </if>
      <if test="proPost != null">
        pro_post = #{proPost,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="outTime != null">
        out_time = #{outTime,jdbcType=DATE},
      </if>
      <if test="transferTime != null">
        transfer_time = #{transferTime,jdbcType=DATE},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.dp.DpNpm">
    update dp_npm
    set user_id = #{userId,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=DATE},
      post = #{post,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      authorized_type = #{authorizedType,jdbcType=VARCHAR},
      pro_post = #{proPost,jdbcType=VARCHAR},
      unit_id = #{unitId,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      out_time = #{outTime,jdbcType=DATE},
      transfer_time = #{transferTime,jdbcType=DATE},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.dp.DpNpmExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dp_npm
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>