<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.cis.CisInspectObjMapper">
  <resultMap id="BaseResultMap" type="domain.cis.CisInspectObj">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="record_id" jdbcType="INTEGER" property="recordId" />
    <result column="record_ids" jdbcType="VARCHAR" property="recordIds" />
    <result column="unit_post_id" jdbcType="INTEGER" property="unitPostId" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="seq" jdbcType="INTEGER" property="seq" />
    <result column="inspect_date" jdbcType="DATE" property="inspectDate" />
    <result column="cadre_id" jdbcType="INTEGER" property="cadreId" />
    <result column="inspector_type" jdbcType="TINYINT" property="inspectorType" />
    <result column="other_inspector_type" jdbcType="VARCHAR" property="otherInspectorType" />
    <result column="chief_inspector_id" jdbcType="INTEGER" property="chiefInspectorId" />
    <result column="talk_user_count" jdbcType="INTEGER" property="talkUserCount" />
    <result column="post" jdbcType="VARCHAR" property="post" />
    <result column="assign_post" jdbcType="VARCHAR" property="assignPost" />
    <result column="summary" jdbcType="VARCHAR" property="summary" />
    <result column="log_file" jdbcType="VARCHAR" property="logFile" />
    <result column="report" jdbcType="VARCHAR" property="report" />
    <result column="record_user_id" jdbcType="INTEGER" property="recordUserId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, record_id, record_ids, unit_post_id, year, type_id, seq, inspect_date, cadre_id, 
    inspector_type, other_inspector_type, chief_inspector_id, talk_user_count, post, 
    assign_post, summary, log_file, report, record_user_id, remark
  </sql>
  <select id="selectByExample" parameterType="domain.cis.CisInspectObjExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cis_inspect_obj
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cis_inspect_obj
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cis_inspect_obj
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cis.CisInspectObjExample">
    delete from cis_inspect_obj
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cis.CisInspectObj">
    insert into cis_inspect_obj (id, record_id, record_ids, 
      unit_post_id, year, type_id, 
      seq, inspect_date, cadre_id, 
      inspector_type, other_inspector_type, chief_inspector_id, 
      talk_user_count, post, assign_post, 
      summary, log_file, report, 
      record_user_id, remark)
    values (#{id,jdbcType=INTEGER}, #{recordId,jdbcType=INTEGER}, #{recordIds,jdbcType=VARCHAR}, 
      #{unitPostId,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{seq,jdbcType=INTEGER}, #{inspectDate,jdbcType=DATE}, #{cadreId,jdbcType=INTEGER}, 
      #{inspectorType,jdbcType=TINYINT}, #{otherInspectorType,jdbcType=VARCHAR}, #{chiefInspectorId,jdbcType=INTEGER}, 
      #{talkUserCount,jdbcType=INTEGER}, #{post,jdbcType=VARCHAR}, #{assignPost,jdbcType=VARCHAR}, 
      #{summary,jdbcType=VARCHAR}, #{logFile,jdbcType=VARCHAR}, #{report,jdbcType=VARCHAR}, 
      #{recordUserId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.cis.CisInspectObj">
    insert into cis_inspect_obj
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recordId != null">
        record_id,
      </if>
      <if test="recordIds != null">
        record_ids,
      </if>
      <if test="unitPostId != null">
        unit_post_id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="seq != null">
        seq,
      </if>
      <if test="inspectDate != null">
        inspect_date,
      </if>
      <if test="cadreId != null">
        cadre_id,
      </if>
      <if test="inspectorType != null">
        inspector_type,
      </if>
      <if test="otherInspectorType != null">
        other_inspector_type,
      </if>
      <if test="chiefInspectorId != null">
        chief_inspector_id,
      </if>
      <if test="talkUserCount != null">
        talk_user_count,
      </if>
      <if test="post != null">
        post,
      </if>
      <if test="assignPost != null">
        assign_post,
      </if>
      <if test="summary != null">
        summary,
      </if>
      <if test="logFile != null">
        log_file,
      </if>
      <if test="report != null">
        report,
      </if>
      <if test="recordUserId != null">
        record_user_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="recordId != null">
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="recordIds != null">
        #{recordIds,jdbcType=VARCHAR},
      </if>
      <if test="unitPostId != null">
        #{unitPostId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="seq != null">
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="inspectDate != null">
        #{inspectDate,jdbcType=DATE},
      </if>
      <if test="cadreId != null">
        #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="inspectorType != null">
        #{inspectorType,jdbcType=TINYINT},
      </if>
      <if test="otherInspectorType != null">
        #{otherInspectorType,jdbcType=VARCHAR},
      </if>
      <if test="chiefInspectorId != null">
        #{chiefInspectorId,jdbcType=INTEGER},
      </if>
      <if test="talkUserCount != null">
        #{talkUserCount,jdbcType=INTEGER},
      </if>
      <if test="post != null">
        #{post,jdbcType=VARCHAR},
      </if>
      <if test="assignPost != null">
        #{assignPost,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=VARCHAR},
      </if>
      <if test="logFile != null">
        #{logFile,jdbcType=VARCHAR},
      </if>
      <if test="report != null">
        #{report,jdbcType=VARCHAR},
      </if>
      <if test="recordUserId != null">
        #{recordUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cis.CisInspectObjExample" resultType="java.lang.Long">
    select count(*) from cis_inspect_obj
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cis_inspect_obj
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.recordId != null">
        record_id = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.recordIds != null">
        record_ids = #{record.recordIds,jdbcType=VARCHAR},
      </if>
      <if test="record.unitPostId != null">
        unit_post_id = #{record.unitPostId,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.seq != null">
        seq = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="record.inspectDate != null">
        inspect_date = #{record.inspectDate,jdbcType=DATE},
      </if>
      <if test="record.cadreId != null">
        cadre_id = #{record.cadreId,jdbcType=INTEGER},
      </if>
      <if test="record.inspectorType != null">
        inspector_type = #{record.inspectorType,jdbcType=TINYINT},
      </if>
      <if test="record.otherInspectorType != null">
        other_inspector_type = #{record.otherInspectorType,jdbcType=VARCHAR},
      </if>
      <if test="record.chiefInspectorId != null">
        chief_inspector_id = #{record.chiefInspectorId,jdbcType=INTEGER},
      </if>
      <if test="record.talkUserCount != null">
        talk_user_count = #{record.talkUserCount,jdbcType=INTEGER},
      </if>
      <if test="record.post != null">
        post = #{record.post,jdbcType=VARCHAR},
      </if>
      <if test="record.assignPost != null">
        assign_post = #{record.assignPost,jdbcType=VARCHAR},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=VARCHAR},
      </if>
      <if test="record.logFile != null">
        log_file = #{record.logFile,jdbcType=VARCHAR},
      </if>
      <if test="record.report != null">
        report = #{record.report,jdbcType=VARCHAR},
      </if>
      <if test="record.recordUserId != null">
        record_user_id = #{record.recordUserId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cis_inspect_obj
    set id = #{record.id,jdbcType=INTEGER},
      record_id = #{record.recordId,jdbcType=INTEGER},
      record_ids = #{record.recordIds,jdbcType=VARCHAR},
      unit_post_id = #{record.unitPostId,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      seq = #{record.seq,jdbcType=INTEGER},
      inspect_date = #{record.inspectDate,jdbcType=DATE},
      cadre_id = #{record.cadreId,jdbcType=INTEGER},
      inspector_type = #{record.inspectorType,jdbcType=TINYINT},
      other_inspector_type = #{record.otherInspectorType,jdbcType=VARCHAR},
      chief_inspector_id = #{record.chiefInspectorId,jdbcType=INTEGER},
      talk_user_count = #{record.talkUserCount,jdbcType=INTEGER},
      post = #{record.post,jdbcType=VARCHAR},
      assign_post = #{record.assignPost,jdbcType=VARCHAR},
      summary = #{record.summary,jdbcType=VARCHAR},
      log_file = #{record.logFile,jdbcType=VARCHAR},
      report = #{record.report,jdbcType=VARCHAR},
      record_user_id = #{record.recordUserId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cis.CisInspectObj">
    update cis_inspect_obj
    <set>
      <if test="recordId != null">
        record_id = #{recordId,jdbcType=INTEGER},
      </if>
      <if test="recordIds != null">
        record_ids = #{recordIds,jdbcType=VARCHAR},
      </if>
      <if test="unitPostId != null">
        unit_post_id = #{unitPostId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="seq != null">
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="inspectDate != null">
        inspect_date = #{inspectDate,jdbcType=DATE},
      </if>
      <if test="cadreId != null">
        cadre_id = #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="inspectorType != null">
        inspector_type = #{inspectorType,jdbcType=TINYINT},
      </if>
      <if test="otherInspectorType != null">
        other_inspector_type = #{otherInspectorType,jdbcType=VARCHAR},
      </if>
      <if test="chiefInspectorId != null">
        chief_inspector_id = #{chiefInspectorId,jdbcType=INTEGER},
      </if>
      <if test="talkUserCount != null">
        talk_user_count = #{talkUserCount,jdbcType=INTEGER},
      </if>
      <if test="post != null">
        post = #{post,jdbcType=VARCHAR},
      </if>
      <if test="assignPost != null">
        assign_post = #{assignPost,jdbcType=VARCHAR},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=VARCHAR},
      </if>
      <if test="logFile != null">
        log_file = #{logFile,jdbcType=VARCHAR},
      </if>
      <if test="report != null">
        report = #{report,jdbcType=VARCHAR},
      </if>
      <if test="recordUserId != null">
        record_user_id = #{recordUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cis.CisInspectObj">
    update cis_inspect_obj
    set record_id = #{recordId,jdbcType=INTEGER},
      record_ids = #{recordIds,jdbcType=VARCHAR},
      unit_post_id = #{unitPostId,jdbcType=INTEGER},
      year = #{year,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      seq = #{seq,jdbcType=INTEGER},
      inspect_date = #{inspectDate,jdbcType=DATE},
      cadre_id = #{cadreId,jdbcType=INTEGER},
      inspector_type = #{inspectorType,jdbcType=TINYINT},
      other_inspector_type = #{otherInspectorType,jdbcType=VARCHAR},
      chief_inspector_id = #{chiefInspectorId,jdbcType=INTEGER},
      talk_user_count = #{talkUserCount,jdbcType=INTEGER},
      post = #{post,jdbcType=VARCHAR},
      assign_post = #{assignPost,jdbcType=VARCHAR},
      summary = #{summary,jdbcType=VARCHAR},
      log_file = #{logFile,jdbcType=VARCHAR},
      report = #{report,jdbcType=VARCHAR},
      record_user_id = #{recordUserId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.cis.CisInspectObjExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cis_inspect_obj
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>