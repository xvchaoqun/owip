<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.UnitTransferMapper" >
  <resultMap id="BaseResultMap" type="domain.UnitTransfer" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="unit_id" property="unitId" jdbcType="INTEGER" />
    <result column="subject" property="subject" jdbcType="VARCHAR" />
    <result column="pub_time" property="pubTime" jdbcType="DATE" />
    <result column="sort_order" property="sortOrder" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="domain.UnitTransfer" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, unit_id, subject, pub_time, sort_order
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="domain.UnitTransferExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from base_unit_transfer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="domain.UnitTransferExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_unit_transfer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from base_unit_transfer
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_unit_transfer
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.UnitTransferExample" >
    delete from base_unit_transfer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert  keyProperty="id" id="insert" parameterType="domain.UnitTransfer" >
    insert into base_unit_transfer (id, unit_id, subject, 
      pub_time, sort_order, content
      )
    values (#{id,jdbcType=INTEGER}, #{unitId,jdbcType=INTEGER}, #{subject,jdbcType=VARCHAR}, 
      #{pubTime,jdbcType=DATE}, #{sortOrder,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert  keyProperty="id" id="insertSelective" parameterType="domain.UnitTransfer" >
    insert into base_unit_transfer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="unitId != null" >
        unit_id,
      </if>
      <if test="subject != null" >
        subject,
      </if>
      <if test="pubTime != null" >
        pub_time,
      </if>
      <if test="sortOrder != null" >
        sort_order,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="unitId != null" >
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        #{subject,jdbcType=VARCHAR},
      </if>
      <if test="pubTime != null" >
        #{pubTime,jdbcType=DATE},
      </if>
      <if test="sortOrder != null" >
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.UnitTransferExample" resultType="java.lang.Integer" >
    select count(*) from base_unit_transfer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update base_unit_transfer
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.unitId != null" >
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
      <if test="record.subject != null" >
        subject = #{record.subject,jdbcType=VARCHAR},
      </if>
      <if test="record.pubTime != null" >
        pub_time = #{record.pubTime,jdbcType=DATE},
      </if>
      <if test="record.sortOrder != null" >
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update base_unit_transfer
    set id = #{record.id,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      subject = #{record.subject,jdbcType=VARCHAR},
      pub_time = #{record.pubTime,jdbcType=DATE},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update base_unit_transfer
    set id = #{record.id,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      subject = #{record.subject,jdbcType=VARCHAR},
      pub_time = #{record.pubTime,jdbcType=DATE},
      sort_order = #{record.sortOrder,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.UnitTransfer" >
    update base_unit_transfer
    <set >
      <if test="unitId != null" >
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="subject != null" >
        subject = #{subject,jdbcType=VARCHAR},
      </if>
      <if test="pubTime != null" >
        pub_time = #{pubTime,jdbcType=DATE},
      </if>
      <if test="sortOrder != null" >
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="domain.UnitTransfer" >
    update base_unit_transfer
    set unit_id = #{unitId,jdbcType=INTEGER},
      subject = #{subject,jdbcType=VARCHAR},
      pub_time = #{pubTime,jdbcType=DATE},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.UnitTransfer" >
    update base_unit_transfer
    set unit_id = #{unitId,jdbcType=INTEGER},
      subject = #{subject,jdbcType=VARCHAR},
      pub_time = #{pubTime,jdbcType=DATE},
      sort_order = #{sortOrder,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="ResultMapWithBLOBs" parameterType="domain.UnitTransferExample" id="selectByExampleWithBLOBsWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from base_unit_transfer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select resultMap="BaseResultMap" parameterType="domain.UnitTransferExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_unit_transfer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>