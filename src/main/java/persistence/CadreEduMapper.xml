<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.CadreEduMapper" >
  <resultMap id="BaseResultMap" type="domain.CadreEdu" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="cadre_id" property="cadreId" jdbcType="INTEGER" />
    <result column="edu_id" property="eduId" jdbcType="INTEGER" />
    <result column="is_high_edu" property="isHighEdu" jdbcType="BIT" />
    <result column="school" property="school" jdbcType="VARCHAR" />
    <result column="dep" property="dep" jdbcType="VARCHAR" />
    <result column="major" property="major" jdbcType="VARCHAR" />
    <result column="school_type" property="schoolType" jdbcType="INTEGER" />
    <result column="enrol_time" property="enrolTime" jdbcType="DATE" />
    <result column="finish_time" property="finishTime" jdbcType="DATE" />
    <result column="school_len" property="schoolLen" jdbcType="TINYINT" />
    <result column="learn_style" property="learnStyle" jdbcType="INTEGER" />
    <result column="degree" property="degree" jdbcType="VARCHAR" />
    <result column="is_high_degree" property="isHighDegree" jdbcType="BIT" />
    <result column="degree_country" property="degreeCountry" jdbcType="VARCHAR" />
    <result column="degree_unit" property="degreeUnit" jdbcType="VARCHAR" />
    <result column="degree_time" property="degreeTime" jdbcType="DATE" />
    <result column="tutor_name" property="tutorName" jdbcType="VARCHAR" />
    <result column="tutor_unit" property="tutorUnit" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, cadre_id, edu_id, is_high_edu, school, dep, major, school_type, enrol_time, finish_time, 
    school_len, learn_style, degree, is_high_degree, degree_country, degree_unit, degree_time, 
    tutor_name, tutor_unit, remark
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="domain.CadreEduExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_cadre_edu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from base_cadre_edu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_cadre_edu
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.CadreEduExample" >
    delete from base_cadre_edu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.CadreEdu" >
    insert into base_cadre_edu (id, cadre_id, edu_id, 
      is_high_edu, school, dep, 
      major, school_type, enrol_time, 
      finish_time, school_len, learn_style, 
      degree, is_high_degree, degree_country, 
      degree_unit, degree_time, tutor_name, 
      tutor_unit, remark)
    values (#{id,jdbcType=INTEGER}, #{cadreId,jdbcType=INTEGER}, #{eduId,jdbcType=INTEGER}, 
      #{isHighEdu,jdbcType=BIT}, #{school,jdbcType=VARCHAR}, #{dep,jdbcType=VARCHAR}, 
      #{major,jdbcType=VARCHAR}, #{schoolType,jdbcType=INTEGER}, #{enrolTime,jdbcType=DATE}, 
      #{finishTime,jdbcType=DATE}, #{schoolLen,jdbcType=TINYINT}, #{learnStyle,jdbcType=INTEGER}, 
      #{degree,jdbcType=VARCHAR}, #{isHighDegree,jdbcType=BIT}, #{degreeCountry,jdbcType=VARCHAR}, 
      #{degreeUnit,jdbcType=VARCHAR}, #{degreeTime,jdbcType=DATE}, #{tutorName,jdbcType=VARCHAR}, 
      #{tutorUnit,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.CadreEdu" >
    insert into base_cadre_edu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="cadreId != null" >
        cadre_id,
      </if>
      <if test="eduId != null" >
        edu_id,
      </if>
      <if test="isHighEdu != null" >
        is_high_edu,
      </if>
      <if test="school != null" >
        school,
      </if>
      <if test="dep != null" >
        dep,
      </if>
      <if test="major != null" >
        major,
      </if>
      <if test="schoolType != null" >
        school_type,
      </if>
      <if test="enrolTime != null" >
        enrol_time,
      </if>
      <if test="finishTime != null" >
        finish_time,
      </if>
      <if test="schoolLen != null" >
        school_len,
      </if>
      <if test="learnStyle != null" >
        learn_style,
      </if>
      <if test="degree != null" >
        degree,
      </if>
      <if test="isHighDegree != null" >
        is_high_degree,
      </if>
      <if test="degreeCountry != null" >
        degree_country,
      </if>
      <if test="degreeUnit != null" >
        degree_unit,
      </if>
      <if test="degreeTime != null" >
        degree_time,
      </if>
      <if test="tutorName != null" >
        tutor_name,
      </if>
      <if test="tutorUnit != null" >
        tutor_unit,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cadreId != null" >
        #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="eduId != null" >
        #{eduId,jdbcType=INTEGER},
      </if>
      <if test="isHighEdu != null" >
        #{isHighEdu,jdbcType=BIT},
      </if>
      <if test="school != null" >
        #{school,jdbcType=VARCHAR},
      </if>
      <if test="dep != null" >
        #{dep,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="schoolType != null" >
        #{schoolType,jdbcType=INTEGER},
      </if>
      <if test="enrolTime != null" >
        #{enrolTime,jdbcType=DATE},
      </if>
      <if test="finishTime != null" >
        #{finishTime,jdbcType=DATE},
      </if>
      <if test="schoolLen != null" >
        #{schoolLen,jdbcType=TINYINT},
      </if>
      <if test="learnStyle != null" >
        #{learnStyle,jdbcType=INTEGER},
      </if>
      <if test="degree != null" >
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="isHighDegree != null" >
        #{isHighDegree,jdbcType=BIT},
      </if>
      <if test="degreeCountry != null" >
        #{degreeCountry,jdbcType=VARCHAR},
      </if>
      <if test="degreeUnit != null" >
        #{degreeUnit,jdbcType=VARCHAR},
      </if>
      <if test="degreeTime != null" >
        #{degreeTime,jdbcType=DATE},
      </if>
      <if test="tutorName != null" >
        #{tutorName,jdbcType=VARCHAR},
      </if>
      <if test="tutorUnit != null" >
        #{tutorUnit,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.CadreEduExample" resultType="java.lang.Integer" >
    select count(*) from base_cadre_edu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update base_cadre_edu
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cadreId != null" >
        cadre_id = #{record.cadreId,jdbcType=INTEGER},
      </if>
      <if test="record.eduId != null" >
        edu_id = #{record.eduId,jdbcType=INTEGER},
      </if>
      <if test="record.isHighEdu != null" >
        is_high_edu = #{record.isHighEdu,jdbcType=BIT},
      </if>
      <if test="record.school != null" >
        school = #{record.school,jdbcType=VARCHAR},
      </if>
      <if test="record.dep != null" >
        dep = #{record.dep,jdbcType=VARCHAR},
      </if>
      <if test="record.major != null" >
        major = #{record.major,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolType != null" >
        school_type = #{record.schoolType,jdbcType=INTEGER},
      </if>
      <if test="record.enrolTime != null" >
        enrol_time = #{record.enrolTime,jdbcType=DATE},
      </if>
      <if test="record.finishTime != null" >
        finish_time = #{record.finishTime,jdbcType=DATE},
      </if>
      <if test="record.schoolLen != null" >
        school_len = #{record.schoolLen,jdbcType=TINYINT},
      </if>
      <if test="record.learnStyle != null" >
        learn_style = #{record.learnStyle,jdbcType=INTEGER},
      </if>
      <if test="record.degree != null" >
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.isHighDegree != null" >
        is_high_degree = #{record.isHighDegree,jdbcType=BIT},
      </if>
      <if test="record.degreeCountry != null" >
        degree_country = #{record.degreeCountry,jdbcType=VARCHAR},
      </if>
      <if test="record.degreeUnit != null" >
        degree_unit = #{record.degreeUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.degreeTime != null" >
        degree_time = #{record.degreeTime,jdbcType=DATE},
      </if>
      <if test="record.tutorName != null" >
        tutor_name = #{record.tutorName,jdbcType=VARCHAR},
      </if>
      <if test="record.tutorUnit != null" >
        tutor_unit = #{record.tutorUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update base_cadre_edu
    set id = #{record.id,jdbcType=INTEGER},
      cadre_id = #{record.cadreId,jdbcType=INTEGER},
      edu_id = #{record.eduId,jdbcType=INTEGER},
      is_high_edu = #{record.isHighEdu,jdbcType=BIT},
      school = #{record.school,jdbcType=VARCHAR},
      dep = #{record.dep,jdbcType=VARCHAR},
      major = #{record.major,jdbcType=VARCHAR},
      school_type = #{record.schoolType,jdbcType=INTEGER},
      enrol_time = #{record.enrolTime,jdbcType=DATE},
      finish_time = #{record.finishTime,jdbcType=DATE},
      school_len = #{record.schoolLen,jdbcType=TINYINT},
      learn_style = #{record.learnStyle,jdbcType=INTEGER},
      degree = #{record.degree,jdbcType=VARCHAR},
      is_high_degree = #{record.isHighDegree,jdbcType=BIT},
      degree_country = #{record.degreeCountry,jdbcType=VARCHAR},
      degree_unit = #{record.degreeUnit,jdbcType=VARCHAR},
      degree_time = #{record.degreeTime,jdbcType=DATE},
      tutor_name = #{record.tutorName,jdbcType=VARCHAR},
      tutor_unit = #{record.tutorUnit,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.CadreEdu" >
    update base_cadre_edu
    <set >
      <if test="cadreId != null" >
        cadre_id = #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="eduId != null" >
        edu_id = #{eduId,jdbcType=INTEGER},
      </if>
      <if test="isHighEdu != null" >
        is_high_edu = #{isHighEdu,jdbcType=BIT},
      </if>
      <if test="school != null" >
        school = #{school,jdbcType=VARCHAR},
      </if>
      <if test="dep != null" >
        dep = #{dep,jdbcType=VARCHAR},
      </if>
      <if test="major != null" >
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="schoolType != null" >
        school_type = #{schoolType,jdbcType=INTEGER},
      </if>
      <if test="enrolTime != null" >
        enrol_time = #{enrolTime,jdbcType=DATE},
      </if>
      <if test="finishTime != null" >
        finish_time = #{finishTime,jdbcType=DATE},
      </if>
      <if test="schoolLen != null" >
        school_len = #{schoolLen,jdbcType=TINYINT},
      </if>
      <if test="learnStyle != null" >
        learn_style = #{learnStyle,jdbcType=INTEGER},
      </if>
      <if test="degree != null" >
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="isHighDegree != null" >
        is_high_degree = #{isHighDegree,jdbcType=BIT},
      </if>
      <if test="degreeCountry != null" >
        degree_country = #{degreeCountry,jdbcType=VARCHAR},
      </if>
      <if test="degreeUnit != null" >
        degree_unit = #{degreeUnit,jdbcType=VARCHAR},
      </if>
      <if test="degreeTime != null" >
        degree_time = #{degreeTime,jdbcType=DATE},
      </if>
      <if test="tutorName != null" >
        tutor_name = #{tutorName,jdbcType=VARCHAR},
      </if>
      <if test="tutorUnit != null" >
        tutor_unit = #{tutorUnit,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.CadreEdu" >
    update base_cadre_edu
    set cadre_id = #{cadreId,jdbcType=INTEGER},
      edu_id = #{eduId,jdbcType=INTEGER},
      is_high_edu = #{isHighEdu,jdbcType=BIT},
      school = #{school,jdbcType=VARCHAR},
      dep = #{dep,jdbcType=VARCHAR},
      major = #{major,jdbcType=VARCHAR},
      school_type = #{schoolType,jdbcType=INTEGER},
      enrol_time = #{enrolTime,jdbcType=DATE},
      finish_time = #{finishTime,jdbcType=DATE},
      school_len = #{schoolLen,jdbcType=TINYINT},
      learn_style = #{learnStyle,jdbcType=INTEGER},
      degree = #{degree,jdbcType=VARCHAR},
      is_high_degree = #{isHighDegree,jdbcType=BIT},
      degree_country = #{degreeCountry,jdbcType=VARCHAR},
      degree_unit = #{degreeUnit,jdbcType=VARCHAR},
      degree_time = #{degreeTime,jdbcType=DATE},
      tutor_name = #{tutorName,jdbcType=VARCHAR},
      tutor_unit = #{tutorUnit,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="domain.CadreEduExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_cadre_edu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>