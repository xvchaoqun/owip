<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pmd.PmdNotifyCampusCardLogMapper">
  <resultMap id="BaseResultMap" type="domain.pmd.PmdNotifyCampusCardLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="paycode" jdbcType="VARCHAR" property="paycode" />
    <result column="payitem" jdbcType="VARCHAR" property="payitem" />
    <result column="payer" jdbcType="VARCHAR" property="payer" />
    <result column="payertype" jdbcType="VARCHAR" property="payertype" />
    <result column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="amt" jdbcType="VARCHAR" property="amt" />
    <result column="paid" jdbcType="VARCHAR" property="paid" />
    <result column="paidtime" jdbcType="VARCHAR" property="paidtime" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
    <result column="verify_sign" jdbcType="BIT" property="verifySign" />
    <result column="ret_time" jdbcType="TIMESTAMP" property="retTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, paycode, payitem, payer, payertype, sn, amt, paid, paidtime, sign, verify_sign, 
    ret_time, ip
  </sql>
  <select id="selectByExample" parameterType="domain.pmd.PmdNotifyCampusCardLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pmd_notify_campuscard_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pmd_notify_campuscard_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pmd_notify_campuscard_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.pmd.PmdNotifyCampusCardLogExample">
    delete from pmd_notify_campuscard_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pmd.PmdNotifyCampusCardLog">
    insert into pmd_notify_campuscard_log (id, paycode, payitem, 
      payer, payertype, sn, 
      amt, paid, paidtime, 
      sign, verify_sign, ret_time, 
      ip)
    values (#{id,jdbcType=INTEGER}, #{paycode,jdbcType=VARCHAR}, #{payitem,jdbcType=VARCHAR}, 
      #{payer,jdbcType=VARCHAR}, #{payertype,jdbcType=VARCHAR}, #{sn,jdbcType=VARCHAR}, 
      #{amt,jdbcType=VARCHAR}, #{paid,jdbcType=VARCHAR}, #{paidtime,jdbcType=VARCHAR}, 
      #{sign,jdbcType=VARCHAR}, #{verifySign,jdbcType=BIT}, #{retTime,jdbcType=TIMESTAMP}, 
      #{ip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.pmd.PmdNotifyCampusCardLog">
    insert into pmd_notify_campuscard_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="paycode != null">
        paycode,
      </if>
      <if test="payitem != null">
        payitem,
      </if>
      <if test="payer != null">
        payer,
      </if>
      <if test="payertype != null">
        payertype,
      </if>
      <if test="sn != null">
        sn,
      </if>
      <if test="amt != null">
        amt,
      </if>
      <if test="paid != null">
        paid,
      </if>
      <if test="paidtime != null">
        paidtime,
      </if>
      <if test="sign != null">
        sign,
      </if>
      <if test="verifySign != null">
        verify_sign,
      </if>
      <if test="retTime != null">
        ret_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="paycode != null">
        #{paycode,jdbcType=VARCHAR},
      </if>
      <if test="payitem != null">
        #{payitem,jdbcType=VARCHAR},
      </if>
      <if test="payer != null">
        #{payer,jdbcType=VARCHAR},
      </if>
      <if test="payertype != null">
        #{payertype,jdbcType=VARCHAR},
      </if>
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="amt != null">
        #{amt,jdbcType=VARCHAR},
      </if>
      <if test="paid != null">
        #{paid,jdbcType=VARCHAR},
      </if>
      <if test="paidtime != null">
        #{paidtime,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="verifySign != null">
        #{verifySign,jdbcType=BIT},
      </if>
      <if test="retTime != null">
        #{retTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pmd.PmdNotifyCampusCardLogExample" resultType="java.lang.Long">
    select count(*) from pmd_notify_campuscard_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pmd_notify_campuscard_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.paycode != null">
        paycode = #{record.paycode,jdbcType=VARCHAR},
      </if>
      <if test="record.payitem != null">
        payitem = #{record.payitem,jdbcType=VARCHAR},
      </if>
      <if test="record.payer != null">
        payer = #{record.payer,jdbcType=VARCHAR},
      </if>
      <if test="record.payertype != null">
        payertype = #{record.payertype,jdbcType=VARCHAR},
      </if>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.amt != null">
        amt = #{record.amt,jdbcType=VARCHAR},
      </if>
      <if test="record.paid != null">
        paid = #{record.paid,jdbcType=VARCHAR},
      </if>
      <if test="record.paidtime != null">
        paidtime = #{record.paidtime,jdbcType=VARCHAR},
      </if>
      <if test="record.sign != null">
        sign = #{record.sign,jdbcType=VARCHAR},
      </if>
      <if test="record.verifySign != null">
        verify_sign = #{record.verifySign,jdbcType=BIT},
      </if>
      <if test="record.retTime != null">
        ret_time = #{record.retTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pmd_notify_campuscard_log
    set id = #{record.id,jdbcType=INTEGER},
      paycode = #{record.paycode,jdbcType=VARCHAR},
      payitem = #{record.payitem,jdbcType=VARCHAR},
      payer = #{record.payer,jdbcType=VARCHAR},
      payertype = #{record.payertype,jdbcType=VARCHAR},
      sn = #{record.sn,jdbcType=VARCHAR},
      amt = #{record.amt,jdbcType=VARCHAR},
      paid = #{record.paid,jdbcType=VARCHAR},
      paidtime = #{record.paidtime,jdbcType=VARCHAR},
      sign = #{record.sign,jdbcType=VARCHAR},
      verify_sign = #{record.verifySign,jdbcType=BIT},
      ret_time = #{record.retTime,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.pmd.PmdNotifyCampusCardLog">
    update pmd_notify_campuscard_log
    <set>
      <if test="paycode != null">
        paycode = #{paycode,jdbcType=VARCHAR},
      </if>
      <if test="payitem != null">
        payitem = #{payitem,jdbcType=VARCHAR},
      </if>
      <if test="payer != null">
        payer = #{payer,jdbcType=VARCHAR},
      </if>
      <if test="payertype != null">
        payertype = #{payertype,jdbcType=VARCHAR},
      </if>
      <if test="sn != null">
        sn = #{sn,jdbcType=VARCHAR},
      </if>
      <if test="amt != null">
        amt = #{amt,jdbcType=VARCHAR},
      </if>
      <if test="paid != null">
        paid = #{paid,jdbcType=VARCHAR},
      </if>
      <if test="paidtime != null">
        paidtime = #{paidtime,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="verifySign != null">
        verify_sign = #{verifySign,jdbcType=BIT},
      </if>
      <if test="retTime != null">
        ret_time = #{retTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.pmd.PmdNotifyCampusCardLog">
    update pmd_notify_campuscard_log
    set paycode = #{paycode,jdbcType=VARCHAR},
      payitem = #{payitem,jdbcType=VARCHAR},
      payer = #{payer,jdbcType=VARCHAR},
      payertype = #{payertype,jdbcType=VARCHAR},
      sn = #{sn,jdbcType=VARCHAR},
      amt = #{amt,jdbcType=VARCHAR},
      paid = #{paid,jdbcType=VARCHAR},
      paidtime = #{paidtime,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      verify_sign = #{verifySign,jdbcType=BIT},
      ret_time = #{retTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pmd.PmdNotifyCampusCardLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pmd_notify_campuscard_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>