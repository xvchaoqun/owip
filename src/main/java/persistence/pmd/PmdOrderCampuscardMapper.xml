<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pmd.PmdOrderCampuscardMapper">
  <resultMap id="BaseResultMap" type="domain.pmd.PmdOrderCampuscard">
    <id column="sn" jdbcType="VARCHAR" property="sn" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="paycode" jdbcType="VARCHAR" property="paycode" />
    <result column="payer" jdbcType="VARCHAR" property="payer" />
    <result column="payertype" jdbcType="VARCHAR" property="payertype" />
    <result column="payername" jdbcType="VARCHAR" property="payername" />
    <result column="amt" jdbcType="VARCHAR" property="amt" />
    <result column="macc" jdbcType="VARCHAR" property="macc" />
    <result column="commnet" jdbcType="VARCHAR" property="commnet" />
    <result column="sno_id_name" jdbcType="VARCHAR" property="snoIdName" />
    <result column="sign" jdbcType="VARCHAR" property="sign" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="is_success" jdbcType="BIT" property="isSuccess" />
    <result column="is_closed" jdbcType="BIT" property="isClosed" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    sn, member_id, paycode, payer, payertype, payername, amt, macc, commnet, sno_id_name, 
    sign, user_id, is_success, is_closed, create_time, ip
  </sql>
  <select id="selectByExample" parameterType="domain.pmd.PmdOrderCampuscardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pmd_order_campuscard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pmd_order_campuscard
    where sn = #{sn,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from pmd_order_campuscard
    where sn = #{sn,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="domain.pmd.PmdOrderCampuscardExample">
    delete from pmd_order_campuscard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pmd.PmdOrderCampuscard">
    insert into pmd_order_campuscard (sn, member_id, paycode, 
      payer, payertype, payername, 
      amt, macc, commnet, 
      sno_id_name, sign, user_id, 
      is_success, is_closed, create_time, 
      ip)
    values (#{sn,jdbcType=VARCHAR}, #{memberId,jdbcType=INTEGER}, #{paycode,jdbcType=VARCHAR}, 
      #{payer,jdbcType=VARCHAR}, #{payertype,jdbcType=VARCHAR}, #{payername,jdbcType=VARCHAR}, 
      #{amt,jdbcType=VARCHAR}, #{macc,jdbcType=VARCHAR}, #{commnet,jdbcType=VARCHAR}, 
      #{snoIdName,jdbcType=VARCHAR}, #{sign,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{isSuccess,jdbcType=BIT}, #{isClosed,jdbcType=BIT}, #{createTime,jdbcType=TIMESTAMP}, 
      #{ip,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.pmd.PmdOrderCampuscard">
    insert into pmd_order_campuscard
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="sn != null">
        sn,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="paycode != null">
        paycode,
      </if>
      <if test="payer != null">
        payer,
      </if>
      <if test="payertype != null">
        payertype,
      </if>
      <if test="payername != null">
        payername,
      </if>
      <if test="amt != null">
        amt,
      </if>
      <if test="macc != null">
        macc,
      </if>
      <if test="commnet != null">
        commnet,
      </if>
      <if test="snoIdName != null">
        sno_id_name,
      </if>
      <if test="sign != null">
        sign,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="isSuccess != null">
        is_success,
      </if>
      <if test="isClosed != null">
        is_closed,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="sn != null">
        #{sn,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="paycode != null">
        #{paycode,jdbcType=VARCHAR},
      </if>
      <if test="payer != null">
        #{payer,jdbcType=VARCHAR},
      </if>
      <if test="payertype != null">
        #{payertype,jdbcType=VARCHAR},
      </if>
      <if test="payername != null">
        #{payername,jdbcType=VARCHAR},
      </if>
      <if test="amt != null">
        #{amt,jdbcType=VARCHAR},
      </if>
      <if test="macc != null">
        #{macc,jdbcType=VARCHAR},
      </if>
      <if test="commnet != null">
        #{commnet,jdbcType=VARCHAR},
      </if>
      <if test="snoIdName != null">
        #{snoIdName,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        #{sign,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="isSuccess != null">
        #{isSuccess,jdbcType=BIT},
      </if>
      <if test="isClosed != null">
        #{isClosed,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pmd.PmdOrderCampuscardExample" resultType="java.lang.Long">
    select count(*) from pmd_order_campuscard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pmd_order_campuscard
    <set>
      <if test="record.sn != null">
        sn = #{record.sn,jdbcType=VARCHAR},
      </if>
      <if test="record.memberId != null">
        member_id = #{record.memberId,jdbcType=INTEGER},
      </if>
      <if test="record.paycode != null">
        paycode = #{record.paycode,jdbcType=VARCHAR},
      </if>
      <if test="record.payer != null">
        payer = #{record.payer,jdbcType=VARCHAR},
      </if>
      <if test="record.payertype != null">
        payertype = #{record.payertype,jdbcType=VARCHAR},
      </if>
      <if test="record.payername != null">
        payername = #{record.payername,jdbcType=VARCHAR},
      </if>
      <if test="record.amt != null">
        amt = #{record.amt,jdbcType=VARCHAR},
      </if>
      <if test="record.macc != null">
        macc = #{record.macc,jdbcType=VARCHAR},
      </if>
      <if test="record.commnet != null">
        commnet = #{record.commnet,jdbcType=VARCHAR},
      </if>
      <if test="record.snoIdName != null">
        sno_id_name = #{record.snoIdName,jdbcType=VARCHAR},
      </if>
      <if test="record.sign != null">
        sign = #{record.sign,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.isSuccess != null">
        is_success = #{record.isSuccess,jdbcType=BIT},
      </if>
      <if test="record.isClosed != null">
        is_closed = #{record.isClosed,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pmd_order_campuscard
    set sn = #{record.sn,jdbcType=VARCHAR},
      member_id = #{record.memberId,jdbcType=INTEGER},
      paycode = #{record.paycode,jdbcType=VARCHAR},
      payer = #{record.payer,jdbcType=VARCHAR},
      payertype = #{record.payertype,jdbcType=VARCHAR},
      payername = #{record.payername,jdbcType=VARCHAR},
      amt = #{record.amt,jdbcType=VARCHAR},
      macc = #{record.macc,jdbcType=VARCHAR},
      commnet = #{record.commnet,jdbcType=VARCHAR},
      sno_id_name = #{record.snoIdName,jdbcType=VARCHAR},
      sign = #{record.sign,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      is_success = #{record.isSuccess,jdbcType=BIT},
      is_closed = #{record.isClosed,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.pmd.PmdOrderCampuscard">
    update pmd_order_campuscard
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="paycode != null">
        paycode = #{paycode,jdbcType=VARCHAR},
      </if>
      <if test="payer != null">
        payer = #{payer,jdbcType=VARCHAR},
      </if>
      <if test="payertype != null">
        payertype = #{payertype,jdbcType=VARCHAR},
      </if>
      <if test="payername != null">
        payername = #{payername,jdbcType=VARCHAR},
      </if>
      <if test="amt != null">
        amt = #{amt,jdbcType=VARCHAR},
      </if>
      <if test="macc != null">
        macc = #{macc,jdbcType=VARCHAR},
      </if>
      <if test="commnet != null">
        commnet = #{commnet,jdbcType=VARCHAR},
      </if>
      <if test="snoIdName != null">
        sno_id_name = #{snoIdName,jdbcType=VARCHAR},
      </if>
      <if test="sign != null">
        sign = #{sign,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="isSuccess != null">
        is_success = #{isSuccess,jdbcType=BIT},
      </if>
      <if test="isClosed != null">
        is_closed = #{isClosed,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
    </set>
    where sn = #{sn,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.pmd.PmdOrderCampuscard">
    update pmd_order_campuscard
    set member_id = #{memberId,jdbcType=INTEGER},
      paycode = #{paycode,jdbcType=VARCHAR},
      payer = #{payer,jdbcType=VARCHAR},
      payertype = #{payertype,jdbcType=VARCHAR},
      payername = #{payername,jdbcType=VARCHAR},
      amt = #{amt,jdbcType=VARCHAR},
      macc = #{macc,jdbcType=VARCHAR},
      commnet = #{commnet,jdbcType=VARCHAR},
      sno_id_name = #{snoIdName,jdbcType=VARCHAR},
      sign = #{sign,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      is_success = #{isSuccess,jdbcType=BIT},
      is_closed = #{isClosed,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR}
    where sn = #{sn,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pmd.PmdOrderCampuscardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pmd_order_campuscard
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>