<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pmd.PmdPayViewMapper">
  <resultMap id="BaseResultMap" type="domain.pmd.PmdPayView">
    <result column="real_order_no" jdbcType="VARCHAR" property="realOrderNo" />
    <result column="payer" jdbcType="VARCHAR" property="payer" />
    <result column="payername" jdbcType="VARCHAR" property="payername" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="pay_month_id" jdbcType="INTEGER" property="payMonthId" />
    <result column="pay_month" jdbcType="DATE" property="payMonth" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="order_user_id" jdbcType="INTEGER" property="orderUserId" />
    <result column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="real_pay" jdbcType="DECIMAL" property="realPay" />
    <result column="is_delay" jdbcType="BIGINT" property="isDelay" />
    <result column="charge_party_id" jdbcType="INTEGER" property="chargePartyId" />
    <result column="charge_branch_id" jdbcType="INTEGER" property="chargeBranchId" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="order_code" jdbcType="VARCHAR" property="orderCode" />
    <result column="order_realname" jdbcType="VARCHAR" property="orderRealname" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    real_order_no, payer, payername, order_no, pay_month_id, pay_month, user_id, order_user_id, 
    member_id, real_pay, is_delay, charge_party_id, charge_branch_id, pay_time, code, 
    realname, order_code, order_realname, create_time
  </sql>
  <select id="selectByExample" parameterType="domain.pmd.PmdPayViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pmd_pay_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="countByExample" parameterType="domain.pmd.PmdPayViewExample" resultType="java.lang.Long">
    select count(*) from pmd_pay_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pmd.PmdPayViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pmd_pay_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>