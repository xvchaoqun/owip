<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pmd.PmdConfigMemberViewMapper">
  <resultMap id="BaseResultMap" type="domain.pmd.PmdConfigMemberView">
    <result column="config_member_type" jdbcType="DECIMAL" property="configMemberType" />
    <result column="config_member_type_id" jdbcType="INTEGER" property="configMemberTypeId" />
    <result column="due_pay" jdbcType="DECIMAL" property="duePay" />
    <result column="salary" jdbcType="VARCHAR" property="salary" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="branch_id" jdbcType="INTEGER" property="branchId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    config_member_type, config_member_type_id, due_pay, salary, user_id, party_id, branch_id
  </sql>
  <select id="selectByExample" parameterType="domain.pmd.PmdConfigMemberViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pmd_config_member_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="domain.pmd.PmdConfigMemberViewExample">
    delete from pmd_config_member_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pmd.PmdConfigMemberView">
    insert into pmd_config_member_view (config_member_type, config_member_type_id, 
      due_pay, salary, user_id, 
      party_id, branch_id)
    values (#{configMemberType,jdbcType=DECIMAL}, #{configMemberTypeId,jdbcType=INTEGER}, 
      #{duePay,jdbcType=DECIMAL}, #{salary,jdbcType=VARCHAR}, #{userId,jdbcType=INTEGER}, 
      #{partyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="domain.pmd.PmdConfigMemberView">
    insert into pmd_config_member_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="configMemberType != null">
        config_member_type,
      </if>
      <if test="configMemberTypeId != null">
        config_member_type_id,
      </if>
      <if test="duePay != null">
        due_pay,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="configMemberType != null">
        #{configMemberType,jdbcType=DECIMAL},
      </if>
      <if test="configMemberTypeId != null">
        #{configMemberTypeId,jdbcType=INTEGER},
      </if>
      <if test="duePay != null">
        #{duePay,jdbcType=DECIMAL},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pmd.PmdConfigMemberViewExample" resultType="java.lang.Long">
    select count(*) from pmd_config_member_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pmd_config_member_view
    <set>
      <if test="record.configMemberType != null">
        config_member_type = #{record.configMemberType,jdbcType=DECIMAL},
      </if>
      <if test="record.configMemberTypeId != null">
        config_member_type_id = #{record.configMemberTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.duePay != null">
        due_pay = #{record.duePay,jdbcType=DECIMAL},
      </if>
      <if test="record.salary != null">
        salary = #{record.salary,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pmd_config_member_view
    set config_member_type = #{record.configMemberType,jdbcType=DECIMAL},
      config_member_type_id = #{record.configMemberTypeId,jdbcType=INTEGER},
      due_pay = #{record.duePay,jdbcType=DECIMAL},
      salary = #{record.salary,jdbcType=VARCHAR},
      user_id = #{record.userId,jdbcType=INTEGER},
      party_id = #{record.partyId,jdbcType=INTEGER},
      branch_id = #{record.branchId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pmd.PmdConfigMemberViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pmd_config_member_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>