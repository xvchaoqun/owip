<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pmd.PmdMonthMapper">
  <resultMap id="BaseResultMap" type="domain.pmd.PmdMonth">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="pay_month" jdbcType="DATE" property="payMonth" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="start_user_id" jdbcType="INTEGER" property="startUserId" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="end_user_id" jdbcType="INTEGER" property="endUserId" />
    <result column="party_count" jdbcType="INTEGER" property="partyCount" />
    <result column="history_delay_member_count" jdbcType="INTEGER" property="historyDelayMemberCount" />
    <result column="history_delay_pay" jdbcType="DECIMAL" property="historyDelayPay" />
    <result column="has_report_count" jdbcType="INTEGER" property="hasReportCount" />
    <result column="member_count" jdbcType="INTEGER" property="memberCount" />
    <result column="due_pay" jdbcType="DECIMAL" property="duePay" />
    <result column="finish_member_count" jdbcType="INTEGER" property="finishMemberCount" />
    <result column="online_finish_member_count" jdbcType="INTEGER" property="onlineFinishMemberCount" />
    <result column="real_pay" jdbcType="DECIMAL" property="realPay" />
    <result column="online_real_pay" jdbcType="DECIMAL" property="onlineRealPay" />
    <result column="cash_real_pay" jdbcType="DECIMAL" property="cashRealPay" />
    <result column="delay_pay" jdbcType="DECIMAL" property="delayPay" />
    <result column="delay_member_count" jdbcType="INTEGER" property="delayMemberCount" />
    <result column="real_delay_member_count" jdbcType="INTEGER" property="realDelayMemberCount" />
    <result column="real_delay_pay" jdbcType="DECIMAL" property="realDelayPay" />
    <result column="online_real_delay_pay" jdbcType="DECIMAL" property="onlineRealDelayPay" />
    <result column="cash_real_delay_pay" jdbcType="DECIMAL" property="cashRealDelayPay" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="create_user_id" jdbcType="INTEGER" property="createUserId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, pay_month, start_time, start_user_id, end_time, end_user_id, party_count, history_delay_member_count, 
    history_delay_pay, has_report_count, member_count, due_pay, finish_member_count, 
    online_finish_member_count, real_pay, online_real_pay, cash_real_pay, delay_pay, 
    delay_member_count, real_delay_member_count, real_delay_pay, online_real_delay_pay, 
    cash_real_delay_pay, status, create_user_id, create_time
  </sql>
  <select id="selectByExample" parameterType="domain.pmd.PmdMonthExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pmd_month
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pmd_month
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pmd_month
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.pmd.PmdMonthExample">
    delete from pmd_month
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pmd.PmdMonth">
    insert into pmd_month (id, pay_month, start_time, 
      start_user_id, end_time, end_user_id, 
      party_count, history_delay_member_count, history_delay_pay, 
      has_report_count, member_count, due_pay, 
      finish_member_count, online_finish_member_count, 
      real_pay, online_real_pay, cash_real_pay, 
      delay_pay, delay_member_count, real_delay_member_count, 
      real_delay_pay, online_real_delay_pay, cash_real_delay_pay, 
      status, create_user_id, create_time
      )
    values (#{id,jdbcType=INTEGER}, #{payMonth,jdbcType=DATE}, #{startTime,jdbcType=TIMESTAMP}, 
      #{startUserId,jdbcType=INTEGER}, #{endTime,jdbcType=TIMESTAMP}, #{endUserId,jdbcType=INTEGER}, 
      #{partyCount,jdbcType=INTEGER}, #{historyDelayMemberCount,jdbcType=INTEGER}, #{historyDelayPay,jdbcType=DECIMAL}, 
      #{hasReportCount,jdbcType=INTEGER}, #{memberCount,jdbcType=INTEGER}, #{duePay,jdbcType=DECIMAL}, 
      #{finishMemberCount,jdbcType=INTEGER}, #{onlineFinishMemberCount,jdbcType=INTEGER}, 
      #{realPay,jdbcType=DECIMAL}, #{onlineRealPay,jdbcType=DECIMAL}, #{cashRealPay,jdbcType=DECIMAL}, 
      #{delayPay,jdbcType=DECIMAL}, #{delayMemberCount,jdbcType=INTEGER}, #{realDelayMemberCount,jdbcType=INTEGER}, 
      #{realDelayPay,jdbcType=DECIMAL}, #{onlineRealDelayPay,jdbcType=DECIMAL}, #{cashRealDelayPay,jdbcType=DECIMAL}, 
      #{status,jdbcType=TINYINT}, #{createUserId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.pmd.PmdMonth">
    insert into pmd_month
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="payMonth != null">
        pay_month,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="startUserId != null">
        start_user_id,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="endUserId != null">
        end_user_id,
      </if>
      <if test="partyCount != null">
        party_count,
      </if>
      <if test="historyDelayMemberCount != null">
        history_delay_member_count,
      </if>
      <if test="historyDelayPay != null">
        history_delay_pay,
      </if>
      <if test="hasReportCount != null">
        has_report_count,
      </if>
      <if test="memberCount != null">
        member_count,
      </if>
      <if test="duePay != null">
        due_pay,
      </if>
      <if test="finishMemberCount != null">
        finish_member_count,
      </if>
      <if test="onlineFinishMemberCount != null">
        online_finish_member_count,
      </if>
      <if test="realPay != null">
        real_pay,
      </if>
      <if test="onlineRealPay != null">
        online_real_pay,
      </if>
      <if test="cashRealPay != null">
        cash_real_pay,
      </if>
      <if test="delayPay != null">
        delay_pay,
      </if>
      <if test="delayMemberCount != null">
        delay_member_count,
      </if>
      <if test="realDelayMemberCount != null">
        real_delay_member_count,
      </if>
      <if test="realDelayPay != null">
        real_delay_pay,
      </if>
      <if test="onlineRealDelayPay != null">
        online_real_delay_pay,
      </if>
      <if test="cashRealDelayPay != null">
        cash_real_delay_pay,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="payMonth != null">
        #{payMonth,jdbcType=DATE},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startUserId != null">
        #{startUserId,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endUserId != null">
        #{endUserId,jdbcType=INTEGER},
      </if>
      <if test="partyCount != null">
        #{partyCount,jdbcType=INTEGER},
      </if>
      <if test="historyDelayMemberCount != null">
        #{historyDelayMemberCount,jdbcType=INTEGER},
      </if>
      <if test="historyDelayPay != null">
        #{historyDelayPay,jdbcType=DECIMAL},
      </if>
      <if test="hasReportCount != null">
        #{hasReportCount,jdbcType=INTEGER},
      </if>
      <if test="memberCount != null">
        #{memberCount,jdbcType=INTEGER},
      </if>
      <if test="duePay != null">
        #{duePay,jdbcType=DECIMAL},
      </if>
      <if test="finishMemberCount != null">
        #{finishMemberCount,jdbcType=INTEGER},
      </if>
      <if test="onlineFinishMemberCount != null">
        #{onlineFinishMemberCount,jdbcType=INTEGER},
      </if>
      <if test="realPay != null">
        #{realPay,jdbcType=DECIMAL},
      </if>
      <if test="onlineRealPay != null">
        #{onlineRealPay,jdbcType=DECIMAL},
      </if>
      <if test="cashRealPay != null">
        #{cashRealPay,jdbcType=DECIMAL},
      </if>
      <if test="delayPay != null">
        #{delayPay,jdbcType=DECIMAL},
      </if>
      <if test="delayMemberCount != null">
        #{delayMemberCount,jdbcType=INTEGER},
      </if>
      <if test="realDelayMemberCount != null">
        #{realDelayMemberCount,jdbcType=INTEGER},
      </if>
      <if test="realDelayPay != null">
        #{realDelayPay,jdbcType=DECIMAL},
      </if>
      <if test="onlineRealDelayPay != null">
        #{onlineRealDelayPay,jdbcType=DECIMAL},
      </if>
      <if test="cashRealDelayPay != null">
        #{cashRealDelayPay,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null">
        #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pmd.PmdMonthExample" resultType="java.lang.Long">
    select count(*) from pmd_month
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pmd_month
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.payMonth != null">
        pay_month = #{record.payMonth,jdbcType=DATE},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.startUserId != null">
        start_user_id = #{record.startUserId,jdbcType=INTEGER},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endUserId != null">
        end_user_id = #{record.endUserId,jdbcType=INTEGER},
      </if>
      <if test="record.partyCount != null">
        party_count = #{record.partyCount,jdbcType=INTEGER},
      </if>
      <if test="record.historyDelayMemberCount != null">
        history_delay_member_count = #{record.historyDelayMemberCount,jdbcType=INTEGER},
      </if>
      <if test="record.historyDelayPay != null">
        history_delay_pay = #{record.historyDelayPay,jdbcType=DECIMAL},
      </if>
      <if test="record.hasReportCount != null">
        has_report_count = #{record.hasReportCount,jdbcType=INTEGER},
      </if>
      <if test="record.memberCount != null">
        member_count = #{record.memberCount,jdbcType=INTEGER},
      </if>
      <if test="record.duePay != null">
        due_pay = #{record.duePay,jdbcType=DECIMAL},
      </if>
      <if test="record.finishMemberCount != null">
        finish_member_count = #{record.finishMemberCount,jdbcType=INTEGER},
      </if>
      <if test="record.onlineFinishMemberCount != null">
        online_finish_member_count = #{record.onlineFinishMemberCount,jdbcType=INTEGER},
      </if>
      <if test="record.realPay != null">
        real_pay = #{record.realPay,jdbcType=DECIMAL},
      </if>
      <if test="record.onlineRealPay != null">
        online_real_pay = #{record.onlineRealPay,jdbcType=DECIMAL},
      </if>
      <if test="record.cashRealPay != null">
        cash_real_pay = #{record.cashRealPay,jdbcType=DECIMAL},
      </if>
      <if test="record.delayPay != null">
        delay_pay = #{record.delayPay,jdbcType=DECIMAL},
      </if>
      <if test="record.delayMemberCount != null">
        delay_member_count = #{record.delayMemberCount,jdbcType=INTEGER},
      </if>
      <if test="record.realDelayMemberCount != null">
        real_delay_member_count = #{record.realDelayMemberCount,jdbcType=INTEGER},
      </if>
      <if test="record.realDelayPay != null">
        real_delay_pay = #{record.realDelayPay,jdbcType=DECIMAL},
      </if>
      <if test="record.onlineRealDelayPay != null">
        online_real_delay_pay = #{record.onlineRealDelayPay,jdbcType=DECIMAL},
      </if>
      <if test="record.cashRealDelayPay != null">
        cash_real_delay_pay = #{record.cashRealDelayPay,jdbcType=DECIMAL},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.createUserId != null">
        create_user_id = #{record.createUserId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pmd_month
    set id = #{record.id,jdbcType=INTEGER},
      pay_month = #{record.payMonth,jdbcType=DATE},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      start_user_id = #{record.startUserId,jdbcType=INTEGER},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      end_user_id = #{record.endUserId,jdbcType=INTEGER},
      party_count = #{record.partyCount,jdbcType=INTEGER},
      history_delay_member_count = #{record.historyDelayMemberCount,jdbcType=INTEGER},
      history_delay_pay = #{record.historyDelayPay,jdbcType=DECIMAL},
      has_report_count = #{record.hasReportCount,jdbcType=INTEGER},
      member_count = #{record.memberCount,jdbcType=INTEGER},
      due_pay = #{record.duePay,jdbcType=DECIMAL},
      finish_member_count = #{record.finishMemberCount,jdbcType=INTEGER},
      online_finish_member_count = #{record.onlineFinishMemberCount,jdbcType=INTEGER},
      real_pay = #{record.realPay,jdbcType=DECIMAL},
      online_real_pay = #{record.onlineRealPay,jdbcType=DECIMAL},
      cash_real_pay = #{record.cashRealPay,jdbcType=DECIMAL},
      delay_pay = #{record.delayPay,jdbcType=DECIMAL},
      delay_member_count = #{record.delayMemberCount,jdbcType=INTEGER},
      real_delay_member_count = #{record.realDelayMemberCount,jdbcType=INTEGER},
      real_delay_pay = #{record.realDelayPay,jdbcType=DECIMAL},
      online_real_delay_pay = #{record.onlineRealDelayPay,jdbcType=DECIMAL},
      cash_real_delay_pay = #{record.cashRealDelayPay,jdbcType=DECIMAL},
      status = #{record.status,jdbcType=TINYINT},
      create_user_id = #{record.createUserId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.pmd.PmdMonth">
    update pmd_month
    <set>
      <if test="payMonth != null">
        pay_month = #{payMonth,jdbcType=DATE},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="startUserId != null">
        start_user_id = #{startUserId,jdbcType=INTEGER},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endUserId != null">
        end_user_id = #{endUserId,jdbcType=INTEGER},
      </if>
      <if test="partyCount != null">
        party_count = #{partyCount,jdbcType=INTEGER},
      </if>
      <if test="historyDelayMemberCount != null">
        history_delay_member_count = #{historyDelayMemberCount,jdbcType=INTEGER},
      </if>
      <if test="historyDelayPay != null">
        history_delay_pay = #{historyDelayPay,jdbcType=DECIMAL},
      </if>
      <if test="hasReportCount != null">
        has_report_count = #{hasReportCount,jdbcType=INTEGER},
      </if>
      <if test="memberCount != null">
        member_count = #{memberCount,jdbcType=INTEGER},
      </if>
      <if test="duePay != null">
        due_pay = #{duePay,jdbcType=DECIMAL},
      </if>
      <if test="finishMemberCount != null">
        finish_member_count = #{finishMemberCount,jdbcType=INTEGER},
      </if>
      <if test="onlineFinishMemberCount != null">
        online_finish_member_count = #{onlineFinishMemberCount,jdbcType=INTEGER},
      </if>
      <if test="realPay != null">
        real_pay = #{realPay,jdbcType=DECIMAL},
      </if>
      <if test="onlineRealPay != null">
        online_real_pay = #{onlineRealPay,jdbcType=DECIMAL},
      </if>
      <if test="cashRealPay != null">
        cash_real_pay = #{cashRealPay,jdbcType=DECIMAL},
      </if>
      <if test="delayPay != null">
        delay_pay = #{delayPay,jdbcType=DECIMAL},
      </if>
      <if test="delayMemberCount != null">
        delay_member_count = #{delayMemberCount,jdbcType=INTEGER},
      </if>
      <if test="realDelayMemberCount != null">
        real_delay_member_count = #{realDelayMemberCount,jdbcType=INTEGER},
      </if>
      <if test="realDelayPay != null">
        real_delay_pay = #{realDelayPay,jdbcType=DECIMAL},
      </if>
      <if test="onlineRealDelayPay != null">
        online_real_delay_pay = #{onlineRealDelayPay,jdbcType=DECIMAL},
      </if>
      <if test="cashRealDelayPay != null">
        cash_real_delay_pay = #{cashRealDelayPay,jdbcType=DECIMAL},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createUserId != null">
        create_user_id = #{createUserId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.pmd.PmdMonth">
    update pmd_month
    set pay_month = #{payMonth,jdbcType=DATE},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      start_user_id = #{startUserId,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      end_user_id = #{endUserId,jdbcType=INTEGER},
      party_count = #{partyCount,jdbcType=INTEGER},
      history_delay_member_count = #{historyDelayMemberCount,jdbcType=INTEGER},
      history_delay_pay = #{historyDelayPay,jdbcType=DECIMAL},
      has_report_count = #{hasReportCount,jdbcType=INTEGER},
      member_count = #{memberCount,jdbcType=INTEGER},
      due_pay = #{duePay,jdbcType=DECIMAL},
      finish_member_count = #{finishMemberCount,jdbcType=INTEGER},
      online_finish_member_count = #{onlineFinishMemberCount,jdbcType=INTEGER},
      real_pay = #{realPay,jdbcType=DECIMAL},
      online_real_pay = #{onlineRealPay,jdbcType=DECIMAL},
      cash_real_pay = #{cashRealPay,jdbcType=DECIMAL},
      delay_pay = #{delayPay,jdbcType=DECIMAL},
      delay_member_count = #{delayMemberCount,jdbcType=INTEGER},
      real_delay_member_count = #{realDelayMemberCount,jdbcType=INTEGER},
      real_delay_pay = #{realDelayPay,jdbcType=DECIMAL},
      online_real_delay_pay = #{onlineRealDelayPay,jdbcType=DECIMAL},
      cash_real_delay_pay = #{cashRealDelayPay,jdbcType=DECIMAL},
      status = #{status,jdbcType=TINYINT},
      create_user_id = #{createUserId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pmd.PmdMonthExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pmd_month
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>