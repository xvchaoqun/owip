<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pmd.PmdFeeMapper">
  <resultMap id="BaseResultMap" type="domain.pmd.PmdFee">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="pay_month" jdbcType="DATE" property="payMonth" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="amt" jdbcType="DECIMAL" property="amt" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="is_online_pay" jdbcType="BIT" property="isOnlinePay" />
    <result column="is_self_pay" jdbcType="BIT" property="isSelfPay" />
    <result column="has_pay" jdbcType="BIT" property="hasPay" />
    <result column="pay_user_id" jdbcType="INTEGER" property="payUserId" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="order_user_id" jdbcType="INTEGER" property="orderUserId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, pay_month, user_id, party_id, branch_id, amt, reason, is_online_pay, is_self_pay, 
    has_pay, pay_user_id, pay_time, order_no, order_user_id, remark, status
  </sql>
  <select id="selectByExample" parameterType="domain.pmd.PmdFeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pmd_fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pmd_fee
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pmd_fee
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.pmd.PmdFeeExample">
    delete from pmd_fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pmd.PmdFee">
    insert into pmd_fee (id, type, pay_month, 
      user_id, party_id, branch_id, 
      amt, reason, is_online_pay, 
      is_self_pay, has_pay, pay_user_id, 
      pay_time, order_no, order_user_id, 
      remark, status)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{payMonth,jdbcType=DATE}, 
      #{userId,jdbcType=INTEGER}, #{partyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, 
      #{amt,jdbcType=DECIMAL}, #{reason,jdbcType=VARCHAR}, #{isOnlinePay,jdbcType=BIT}, 
      #{isSelfPay,jdbcType=BIT}, #{hasPay,jdbcType=BIT}, #{payUserId,jdbcType=INTEGER}, 
      #{payTime,jdbcType=TIMESTAMP}, #{orderNo,jdbcType=VARCHAR}, #{orderUserId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="domain.pmd.PmdFee">
    insert into pmd_fee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="payMonth != null">
        pay_month,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="amt != null">
        amt,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="isOnlinePay != null">
        is_online_pay,
      </if>
      <if test="isSelfPay != null">
        is_self_pay,
      </if>
      <if test="hasPay != null">
        has_pay,
      </if>
      <if test="payUserId != null">
        pay_user_id,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="orderUserId != null">
        order_user_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="payMonth != null">
        #{payMonth,jdbcType=DATE},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="amt != null">
        #{amt,jdbcType=DECIMAL},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="isOnlinePay != null">
        #{isOnlinePay,jdbcType=BIT},
      </if>
      <if test="isSelfPay != null">
        #{isSelfPay,jdbcType=BIT},
      </if>
      <if test="hasPay != null">
        #{hasPay,jdbcType=BIT},
      </if>
      <if test="payUserId != null">
        #{payUserId,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderUserId != null">
        #{orderUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pmd.PmdFeeExample" resultType="java.lang.Long">
    select count(*) from pmd_fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pmd_fee
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.payMonth != null">
        pay_month = #{record.payMonth,jdbcType=DATE},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.amt != null">
        amt = #{record.amt,jdbcType=DECIMAL},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.isOnlinePay != null">
        is_online_pay = #{record.isOnlinePay,jdbcType=BIT},
      </if>
      <if test="record.isSelfPay != null">
        is_self_pay = #{record.isSelfPay,jdbcType=BIT},
      </if>
      <if test="record.hasPay != null">
        has_pay = #{record.hasPay,jdbcType=BIT},
      </if>
      <if test="record.payUserId != null">
        pay_user_id = #{record.payUserId,jdbcType=INTEGER},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderNo != null">
        order_no = #{record.orderNo,jdbcType=VARCHAR},
      </if>
      <if test="record.orderUserId != null">
        order_user_id = #{record.orderUserId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pmd_fee
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      pay_month = #{record.payMonth,jdbcType=DATE},
      user_id = #{record.userId,jdbcType=INTEGER},
      party_id = #{record.partyId,jdbcType=INTEGER},
      branch_id = #{record.branchId,jdbcType=INTEGER},
      amt = #{record.amt,jdbcType=DECIMAL},
      reason = #{record.reason,jdbcType=VARCHAR},
      is_online_pay = #{record.isOnlinePay,jdbcType=BIT},
      is_self_pay = #{record.isSelfPay,jdbcType=BIT},
      has_pay = #{record.hasPay,jdbcType=BIT},
      pay_user_id = #{record.payUserId,jdbcType=INTEGER},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      order_no = #{record.orderNo,jdbcType=VARCHAR},
      order_user_id = #{record.orderUserId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.pmd.PmdFee">
    update pmd_fee
    <set>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="payMonth != null">
        pay_month = #{payMonth,jdbcType=DATE},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        party_id = #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        branch_id = #{branchId,jdbcType=INTEGER},
      </if>
      <if test="amt != null">
        amt = #{amt,jdbcType=DECIMAL},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="isOnlinePay != null">
        is_online_pay = #{isOnlinePay,jdbcType=BIT},
      </if>
      <if test="isSelfPay != null">
        is_self_pay = #{isSelfPay,jdbcType=BIT},
      </if>
      <if test="hasPay != null">
        has_pay = #{hasPay,jdbcType=BIT},
      </if>
      <if test="payUserId != null">
        pay_user_id = #{payUserId,jdbcType=INTEGER},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderUserId != null">
        order_user_id = #{orderUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.pmd.PmdFee">
    update pmd_fee
    set type = #{type,jdbcType=INTEGER},
      pay_month = #{payMonth,jdbcType=DATE},
      user_id = #{userId,jdbcType=INTEGER},
      party_id = #{partyId,jdbcType=INTEGER},
      branch_id = #{branchId,jdbcType=INTEGER},
      amt = #{amt,jdbcType=DECIMAL},
      reason = #{reason,jdbcType=VARCHAR},
      is_online_pay = #{isOnlinePay,jdbcType=BIT},
      is_self_pay = #{isSelfPay,jdbcType=BIT},
      has_pay = #{hasPay,jdbcType=BIT},
      pay_user_id = #{payUserId,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      order_no = #{orderNo,jdbcType=VARCHAR},
      order_user_id = #{orderUserId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pmd.PmdFeeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pmd_fee
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>