<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.cadreReserve.CadreReserveOriginMapper">
  <resultMap id="BaseResultMap" type="domain.cadreReserve.CadreReserveOrigin">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="way" jdbcType="TINYINT" property="way" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="reserve_type" jdbcType="TINYINT" property="reserveType" />
    <result column="recommend_unit" jdbcType="VARCHAR" property="recommendUnit" />
    <result column="recommend_date" jdbcType="DATE" property="recommendDate" />
    <result column="word_file_path" jdbcType="VARCHAR" property="wordFilePath" />
    <result column="pdf_file_path" jdbcType="VARCHAR" property="pdfFilePath" />
    <result column="obj_id" jdbcType="INTEGER" property="objId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, way, user_id, reserve_type, recommend_unit, recommend_date, word_file_path, pdf_file_path, 
    obj_id, remark, add_time
  </sql>
  <select id="selectByExample" parameterType="domain.cadreReserve.CadreReserveOriginExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cadre_reserve_origin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cadre_reserve_origin
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cadre_reserve_origin
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cadreReserve.CadreReserveOriginExample">
    delete from cadre_reserve_origin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cadreReserve.CadreReserveOrigin">
    insert into cadre_reserve_origin (id, way, user_id, 
      reserve_type, recommend_unit, recommend_date, 
      word_file_path, pdf_file_path, obj_id, 
      remark, add_time)
    values (#{id,jdbcType=INTEGER}, #{way,jdbcType=TINYINT}, #{userId,jdbcType=INTEGER}, 
      #{reserveType,jdbcType=TINYINT}, #{recommendUnit,jdbcType=VARCHAR}, #{recommendDate,jdbcType=DATE}, 
      #{wordFilePath,jdbcType=VARCHAR}, #{pdfFilePath,jdbcType=VARCHAR}, #{objId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{addTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="domain.cadreReserve.CadreReserveOrigin">
    insert into cadre_reserve_origin
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="way != null">
        way,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="reserveType != null">
        reserve_type,
      </if>
      <if test="recommendUnit != null">
        recommend_unit,
      </if>
      <if test="recommendDate != null">
        recommend_date,
      </if>
      <if test="wordFilePath != null">
        word_file_path,
      </if>
      <if test="pdfFilePath != null">
        pdf_file_path,
      </if>
      <if test="objId != null">
        obj_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="way != null">
        #{way,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="reserveType != null">
        #{reserveType,jdbcType=TINYINT},
      </if>
      <if test="recommendUnit != null">
        #{recommendUnit,jdbcType=VARCHAR},
      </if>
      <if test="recommendDate != null">
        #{recommendDate,jdbcType=DATE},
      </if>
      <if test="wordFilePath != null">
        #{wordFilePath,jdbcType=VARCHAR},
      </if>
      <if test="pdfFilePath != null">
        #{pdfFilePath,jdbcType=VARCHAR},
      </if>
      <if test="objId != null">
        #{objId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cadreReserve.CadreReserveOriginExample" resultType="java.lang.Long">
    select count(*) from cadre_reserve_origin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cadre_reserve_origin
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.way != null">
        way = #{record.way,jdbcType=TINYINT},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.reserveType != null">
        reserve_type = #{record.reserveType,jdbcType=TINYINT},
      </if>
      <if test="record.recommendUnit != null">
        recommend_unit = #{record.recommendUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.recommendDate != null">
        recommend_date = #{record.recommendDate,jdbcType=DATE},
      </if>
      <if test="record.wordFilePath != null">
        word_file_path = #{record.wordFilePath,jdbcType=VARCHAR},
      </if>
      <if test="record.pdfFilePath != null">
        pdf_file_path = #{record.pdfFilePath,jdbcType=VARCHAR},
      </if>
      <if test="record.objId != null">
        obj_id = #{record.objId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cadre_reserve_origin
    set id = #{record.id,jdbcType=INTEGER},
      way = #{record.way,jdbcType=TINYINT},
      user_id = #{record.userId,jdbcType=INTEGER},
      reserve_type = #{record.reserveType,jdbcType=TINYINT},
      recommend_unit = #{record.recommendUnit,jdbcType=VARCHAR},
      recommend_date = #{record.recommendDate,jdbcType=DATE},
      word_file_path = #{record.wordFilePath,jdbcType=VARCHAR},
      pdf_file_path = #{record.pdfFilePath,jdbcType=VARCHAR},
      obj_id = #{record.objId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      add_time = #{record.addTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cadreReserve.CadreReserveOrigin">
    update cadre_reserve_origin
    <set>
      <if test="way != null">
        way = #{way,jdbcType=TINYINT},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="reserveType != null">
        reserve_type = #{reserveType,jdbcType=TINYINT},
      </if>
      <if test="recommendUnit != null">
        recommend_unit = #{recommendUnit,jdbcType=VARCHAR},
      </if>
      <if test="recommendDate != null">
        recommend_date = #{recommendDate,jdbcType=DATE},
      </if>
      <if test="wordFilePath != null">
        word_file_path = #{wordFilePath,jdbcType=VARCHAR},
      </if>
      <if test="pdfFilePath != null">
        pdf_file_path = #{pdfFilePath,jdbcType=VARCHAR},
      </if>
      <if test="objId != null">
        obj_id = #{objId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cadreReserve.CadreReserveOrigin">
    update cadre_reserve_origin
    set way = #{way,jdbcType=TINYINT},
      user_id = #{userId,jdbcType=INTEGER},
      reserve_type = #{reserveType,jdbcType=TINYINT},
      recommend_unit = #{recommendUnit,jdbcType=VARCHAR},
      recommend_date = #{recommendDate,jdbcType=DATE},
      word_file_path = #{wordFilePath,jdbcType=VARCHAR},
      pdf_file_path = #{pdfFilePath,jdbcType=VARCHAR},
      obj_id = #{objId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.cadreReserve.CadreReserveOriginExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cadre_reserve_origin
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>