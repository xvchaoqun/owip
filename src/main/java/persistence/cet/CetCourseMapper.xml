<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.cet.CetCourseMapper">
  <resultMap id="BaseResultMap" type="domain.cet.CetCourse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="found_date" jdbcType="DATE" property="foundDate" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="has_summary" jdbcType="BIT" property="hasSummary" />
    <result column="expert_id" jdbcType="INTEGER" property="expertId" />
    <result column="teach_method" jdbcType="INTEGER" property="teachMethod" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="period" jdbcType="DECIMAL" property="period" />
    <result column="duration" jdbcType="DECIMAL" property="duration" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="domain.cet.CetCourse">
    <result column="summary" jdbcType="LONGVARCHAR" property="summary" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, type, num, found_date, name, address, has_summary, expert_id, teach_method, 
    url, period, duration, sort_order, remark, is_deleted
  </sql>
  <sql id="Blob_Column_List">
    summary
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="domain.cet.CetCourseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cet_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="domain.cet.CetCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cet_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cet_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cet_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cet.CetCourseExample">
    delete from cet_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cet.CetCourse">
    insert into cet_course (id, year, type, 
      num, found_date, name, 
      address, has_summary, expert_id, 
      teach_method, url, period, 
      duration, sort_order, remark, 
      is_deleted, summary)
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, 
      #{num,jdbcType=INTEGER}, #{foundDate,jdbcType=DATE}, #{name,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{hasSummary,jdbcType=BIT}, #{expertId,jdbcType=INTEGER}, 
      #{teachMethod,jdbcType=INTEGER}, #{url,jdbcType=VARCHAR}, #{period,jdbcType=DECIMAL}, 
      #{duration,jdbcType=DECIMAL}, #{sortOrder,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{isDeleted,jdbcType=BIT}, #{summary,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.cet.CetCourse">
    insert into cet_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="foundDate != null">
        found_date,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="hasSummary != null">
        has_summary,
      </if>
      <if test="expertId != null">
        expert_id,
      </if>
      <if test="teachMethod != null">
        teach_method,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="duration != null">
        duration,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="summary != null">
        summary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="foundDate != null">
        #{foundDate,jdbcType=DATE},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="hasSummary != null">
        #{hasSummary,jdbcType=BIT},
      </if>
      <if test="expertId != null">
        #{expertId,jdbcType=INTEGER},
      </if>
      <if test="teachMethod != null">
        #{teachMethod,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        #{period,jdbcType=DECIMAL},
      </if>
      <if test="duration != null">
        #{duration,jdbcType=DECIMAL},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="summary != null">
        #{summary,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cet.CetCourseExample" resultType="java.lang.Long">
    select count(*) from cet_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cet_course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.foundDate != null">
        found_date = #{record.foundDate,jdbcType=DATE},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.hasSummary != null">
        has_summary = #{record.hasSummary,jdbcType=BIT},
      </if>
      <if test="record.expertId != null">
        expert_id = #{record.expertId,jdbcType=INTEGER},
      </if>
      <if test="record.teachMethod != null">
        teach_method = #{record.teachMethod,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=DECIMAL},
      </if>
      <if test="record.duration != null">
        duration = #{record.duration,jdbcType=DECIMAL},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.summary != null">
        summary = #{record.summary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update cet_course
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      num = #{record.num,jdbcType=INTEGER},
      found_date = #{record.foundDate,jdbcType=DATE},
      name = #{record.name,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      has_summary = #{record.hasSummary,jdbcType=BIT},
      expert_id = #{record.expertId,jdbcType=INTEGER},
      teach_method = #{record.teachMethod,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      period = #{record.period,jdbcType=DECIMAL},
      duration = #{record.duration,jdbcType=DECIMAL},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      summary = #{record.summary,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cet_course
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      num = #{record.num,jdbcType=INTEGER},
      found_date = #{record.foundDate,jdbcType=DATE},
      name = #{record.name,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      has_summary = #{record.hasSummary,jdbcType=BIT},
      expert_id = #{record.expertId,jdbcType=INTEGER},
      teach_method = #{record.teachMethod,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      period = #{record.period,jdbcType=DECIMAL},
      duration = #{record.duration,jdbcType=DECIMAL},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      is_deleted = #{record.isDeleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cet.CetCourse">
    update cet_course
    <set>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="foundDate != null">
        found_date = #{foundDate,jdbcType=DATE},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="hasSummary != null">
        has_summary = #{hasSummary,jdbcType=BIT},
      </if>
      <if test="expertId != null">
        expert_id = #{expertId,jdbcType=INTEGER},
      </if>
      <if test="teachMethod != null">
        teach_method = #{teachMethod,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=DECIMAL},
      </if>
      <if test="duration != null">
        duration = #{duration,jdbcType=DECIMAL},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="summary != null">
        summary = #{summary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="domain.cet.CetCourse">
    update cet_course
    set year = #{year,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      num = #{num,jdbcType=INTEGER},
      found_date = #{foundDate,jdbcType=DATE},
      name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      has_summary = #{hasSummary,jdbcType=BIT},
      expert_id = #{expertId,jdbcType=INTEGER},
      teach_method = #{teachMethod,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      period = #{period,jdbcType=DECIMAL},
      duration = #{duration,jdbcType=DECIMAL},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT},
      summary = #{summary,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cet.CetCourse">
    update cet_course
    set year = #{year,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      num = #{num,jdbcType=INTEGER},
      found_date = #{foundDate,jdbcType=DATE},
      name = #{name,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      has_summary = #{hasSummary,jdbcType=BIT},
      expert_id = #{expertId,jdbcType=INTEGER},
      teach_method = #{teachMethod,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      period = #{period,jdbcType=DECIMAL},
      duration = #{duration,jdbcType=DECIMAL},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="domain.cet.CetCourseExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from cet_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="domain.cet.CetCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cet_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>