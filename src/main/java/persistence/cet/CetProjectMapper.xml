<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.cet.CetProjectMapper">
  <resultMap id="BaseResultMap" type="domain.cet.CetProject">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="cet_party_id" jdbcType="INTEGER" property="cetPartyId" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="trainee_type_ids" jdbcType="VARCHAR" property="traineeTypeIds" />
    <result column="other_trainee_type" jdbcType="VARCHAR" property="otherTraineeType" />
    <result column="obj_count" jdbcType="INTEGER" property="objCount" />
    <result column="quit_count" jdbcType="INTEGER" property="quitCount" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="file_count" jdbcType="INTEGER" property="fileCount" />
    <result column="start_date" jdbcType="DATE" property="startDate" />
    <result column="end_date" jdbcType="DATE" property="endDate" />
    <result column="open_time" jdbcType="TIMESTAMP" property="openTime" />
    <result column="open_address" jdbcType="VARCHAR" property="openAddress" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="is_valid" jdbcType="BIT" property="isValid" />
    <result column="project_type_id" jdbcType="INTEGER" property="projectTypeId" />
    <result column="category" jdbcType="CHAR" property="category" />
    <result column="file_name" jdbcType="VARCHAR" property="fileName" />
    <result column="pdf_file_path" jdbcType="VARCHAR" property="pdfFilePath" />
    <result column="word_file_path" jdbcType="VARCHAR" property="wordFilePath" />
    <result column="period" jdbcType="DECIMAL" property="period" />
    <result column="require_period" jdbcType="DECIMAL" property="requirePeriod" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="has_archive" jdbcType="BIT" property="hasArchive" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="back_reason" jdbcType="VARCHAR" property="backReason" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, type, cet_party_id, unit_id, year, trainee_type_ids, other_trainee_type, obj_count, 
    quit_count, start_time, end_time, file_count, start_date, end_date, open_time, open_address, 
    name, is_valid, project_type_id, category, file_name, pdf_file_path, word_file_path, 
    period, require_period, remark, create_time, has_archive, is_deleted, status, back_reason
  </sql>
  <select id="selectByExample" parameterType="domain.cet.CetProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cet_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cet_project
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cet_project
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cet.CetProjectExample">
    delete from cet_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cet.CetProject">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cet_project (type, cet_party_id, unit_id, 
      year, trainee_type_ids, other_trainee_type, 
      obj_count, quit_count, start_time, 
      end_time, file_count, start_date, 
      end_date, open_time, open_address, 
      name, is_valid, project_type_id, 
      category, file_name, pdf_file_path, 
      word_file_path, period, require_period, 
      remark, create_time, has_archive, 
      is_deleted, status, back_reason
      )
    values (#{type,jdbcType=TINYINT}, #{cetPartyId,jdbcType=INTEGER}, #{unitId,jdbcType=INTEGER}, 
      #{year,jdbcType=INTEGER}, #{traineeTypeIds,jdbcType=VARCHAR}, #{otherTraineeType,jdbcType=VARCHAR}, 
      #{objCount,jdbcType=INTEGER}, #{quitCount,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{fileCount,jdbcType=INTEGER}, #{startDate,jdbcType=DATE}, 
      #{endDate,jdbcType=DATE}, #{openTime,jdbcType=TIMESTAMP}, #{openAddress,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{isValid,jdbcType=BIT}, #{projectTypeId,jdbcType=INTEGER}, 
      #{category,jdbcType=CHAR}, #{fileName,jdbcType=VARCHAR}, #{pdfFilePath,jdbcType=VARCHAR}, 
      #{wordFilePath,jdbcType=VARCHAR}, #{period,jdbcType=DECIMAL}, #{requirePeriod,jdbcType=DECIMAL}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{hasArchive,jdbcType=BIT}, 
      #{isDeleted,jdbcType=BIT}, #{status,jdbcType=TINYINT}, #{backReason,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.cet.CetProject">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cet_project
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="type != null">
        type,
      </if>
      <if test="cetPartyId != null">
        cet_party_id,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="traineeTypeIds != null">
        trainee_type_ids,
      </if>
      <if test="otherTraineeType != null">
        other_trainee_type,
      </if>
      <if test="objCount != null">
        obj_count,
      </if>
      <if test="quitCount != null">
        quit_count,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="fileCount != null">
        file_count,
      </if>
      <if test="startDate != null">
        start_date,
      </if>
      <if test="endDate != null">
        end_date,
      </if>
      <if test="openTime != null">
        open_time,
      </if>
      <if test="openAddress != null">
        open_address,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="projectTypeId != null">
        project_type_id,
      </if>
      <if test="category != null">
        category,
      </if>
      <if test="fileName != null">
        file_name,
      </if>
      <if test="pdfFilePath != null">
        pdf_file_path,
      </if>
      <if test="wordFilePath != null">
        word_file_path,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="requirePeriod != null">
        require_period,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="hasArchive != null">
        has_archive,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="backReason != null">
        back_reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="cetPartyId != null">
        #{cetPartyId,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="traineeTypeIds != null">
        #{traineeTypeIds,jdbcType=VARCHAR},
      </if>
      <if test="otherTraineeType != null">
        #{otherTraineeType,jdbcType=VARCHAR},
      </if>
      <if test="objCount != null">
        #{objCount,jdbcType=INTEGER},
      </if>
      <if test="quitCount != null">
        #{quitCount,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileCount != null">
        #{fileCount,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        #{endDate,jdbcType=DATE},
      </if>
      <if test="openTime != null">
        #{openTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openAddress != null">
        #{openAddress,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=BIT},
      </if>
      <if test="projectTypeId != null">
        #{projectTypeId,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        #{category,jdbcType=CHAR},
      </if>
      <if test="fileName != null">
        #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="pdfFilePath != null">
        #{pdfFilePath,jdbcType=VARCHAR},
      </if>
      <if test="wordFilePath != null">
        #{wordFilePath,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        #{period,jdbcType=DECIMAL},
      </if>
      <if test="requirePeriod != null">
        #{requirePeriod,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hasArchive != null">
        #{hasArchive,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="backReason != null">
        #{backReason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cet.CetProjectExample" resultType="java.lang.Long">
    select count(*) from cet_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cet_project
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.cetPartyId != null">
        cet_party_id = #{record.cetPartyId,jdbcType=INTEGER},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.traineeTypeIds != null">
        trainee_type_ids = #{record.traineeTypeIds,jdbcType=VARCHAR},
      </if>
      <if test="record.otherTraineeType != null">
        other_trainee_type = #{record.otherTraineeType,jdbcType=VARCHAR},
      </if>
      <if test="record.objCount != null">
        obj_count = #{record.objCount,jdbcType=INTEGER},
      </if>
      <if test="record.quitCount != null">
        quit_count = #{record.quitCount,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fileCount != null">
        file_count = #{record.fileCount,jdbcType=INTEGER},
      </if>
      <if test="record.startDate != null">
        start_date = #{record.startDate,jdbcType=DATE},
      </if>
      <if test="record.endDate != null">
        end_date = #{record.endDate,jdbcType=DATE},
      </if>
      <if test="record.openTime != null">
        open_time = #{record.openTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.openAddress != null">
        open_address = #{record.openAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.isValid != null">
        is_valid = #{record.isValid,jdbcType=BIT},
      </if>
      <if test="record.projectTypeId != null">
        project_type_id = #{record.projectTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.category != null">
        category = #{record.category,jdbcType=CHAR},
      </if>
      <if test="record.fileName != null">
        file_name = #{record.fileName,jdbcType=VARCHAR},
      </if>
      <if test="record.pdfFilePath != null">
        pdf_file_path = #{record.pdfFilePath,jdbcType=VARCHAR},
      </if>
      <if test="record.wordFilePath != null">
        word_file_path = #{record.wordFilePath,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=DECIMAL},
      </if>
      <if test="record.requirePeriod != null">
        require_period = #{record.requirePeriod,jdbcType=DECIMAL},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.hasArchive != null">
        has_archive = #{record.hasArchive,jdbcType=BIT},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.backReason != null">
        back_reason = #{record.backReason,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cet_project
    set id = #{record.id,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      cet_party_id = #{record.cetPartyId,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      trainee_type_ids = #{record.traineeTypeIds,jdbcType=VARCHAR},
      other_trainee_type = #{record.otherTraineeType,jdbcType=VARCHAR},
      obj_count = #{record.objCount,jdbcType=INTEGER},
      quit_count = #{record.quitCount,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      file_count = #{record.fileCount,jdbcType=INTEGER},
      start_date = #{record.startDate,jdbcType=DATE},
      end_date = #{record.endDate,jdbcType=DATE},
      open_time = #{record.openTime,jdbcType=TIMESTAMP},
      open_address = #{record.openAddress,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      is_valid = #{record.isValid,jdbcType=BIT},
      project_type_id = #{record.projectTypeId,jdbcType=INTEGER},
      category = #{record.category,jdbcType=CHAR},
      file_name = #{record.fileName,jdbcType=VARCHAR},
      pdf_file_path = #{record.pdfFilePath,jdbcType=VARCHAR},
      word_file_path = #{record.wordFilePath,jdbcType=VARCHAR},
      period = #{record.period,jdbcType=DECIMAL},
      require_period = #{record.requirePeriod,jdbcType=DECIMAL},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      has_archive = #{record.hasArchive,jdbcType=BIT},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      status = #{record.status,jdbcType=TINYINT},
      back_reason = #{record.backReason,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cet.CetProject">
    update cet_project
    <set>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="cetPartyId != null">
        cet_party_id = #{cetPartyId,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="traineeTypeIds != null">
        trainee_type_ids = #{traineeTypeIds,jdbcType=VARCHAR},
      </if>
      <if test="otherTraineeType != null">
        other_trainee_type = #{otherTraineeType,jdbcType=VARCHAR},
      </if>
      <if test="objCount != null">
        obj_count = #{objCount,jdbcType=INTEGER},
      </if>
      <if test="quitCount != null">
        quit_count = #{quitCount,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="fileCount != null">
        file_count = #{fileCount,jdbcType=INTEGER},
      </if>
      <if test="startDate != null">
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null">
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="openTime != null">
        open_time = #{openTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openAddress != null">
        open_address = #{openAddress,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=BIT},
      </if>
      <if test="projectTypeId != null">
        project_type_id = #{projectTypeId,jdbcType=INTEGER},
      </if>
      <if test="category != null">
        category = #{category,jdbcType=CHAR},
      </if>
      <if test="fileName != null">
        file_name = #{fileName,jdbcType=VARCHAR},
      </if>
      <if test="pdfFilePath != null">
        pdf_file_path = #{pdfFilePath,jdbcType=VARCHAR},
      </if>
      <if test="wordFilePath != null">
        word_file_path = #{wordFilePath,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=DECIMAL},
      </if>
      <if test="requirePeriod != null">
        require_period = #{requirePeriod,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="hasArchive != null">
        has_archive = #{hasArchive,jdbcType=BIT},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="backReason != null">
        back_reason = #{backReason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cet.CetProject">
    update cet_project
    set type = #{type,jdbcType=TINYINT},
      cet_party_id = #{cetPartyId,jdbcType=INTEGER},
      unit_id = #{unitId,jdbcType=INTEGER},
      year = #{year,jdbcType=INTEGER},
      trainee_type_ids = #{traineeTypeIds,jdbcType=VARCHAR},
      other_trainee_type = #{otherTraineeType,jdbcType=VARCHAR},
      obj_count = #{objCount,jdbcType=INTEGER},
      quit_count = #{quitCount,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      file_count = #{fileCount,jdbcType=INTEGER},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      open_time = #{openTime,jdbcType=TIMESTAMP},
      open_address = #{openAddress,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=BIT},
      project_type_id = #{projectTypeId,jdbcType=INTEGER},
      category = #{category,jdbcType=CHAR},
      file_name = #{fileName,jdbcType=VARCHAR},
      pdf_file_path = #{pdfFilePath,jdbcType=VARCHAR},
      word_file_path = #{wordFilePath,jdbcType=VARCHAR},
      period = #{period,jdbcType=DECIMAL},
      require_period = #{requirePeriod,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      has_archive = #{hasArchive,jdbcType=BIT},
      is_deleted = #{isDeleted,jdbcType=BIT},
      status = #{status,jdbcType=TINYINT},
      back_reason = #{backReason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.cet.CetProjectExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cet_project
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>