<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.cet.CetTrainCourseMapper">
  <resultMap id="BaseResultMap" type="domain.cet.CetTrainCourse">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="train_id" jdbcType="INTEGER" property="trainId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="teacher" jdbcType="VARCHAR" property="teacher" />
    <result column="apply_limit" jdbcType="INTEGER" property="applyLimit" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="is_global" jdbcType="BIT" property="isGlobal" />
    <result column="eva_table_id" jdbcType="INTEGER" property="evaTableId" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, train_id, course_id, name, teacher, apply_limit, start_time, end_time, is_global, 
    eva_table_id, address, sort_order
  </sql>
  <select id="selectByExample" parameterType="domain.cet.CetTrainCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cet_train_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cet_train_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cet_train_course
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cet.CetTrainCourseExample">
    delete from cet_train_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cet.CetTrainCourse">
    insert into cet_train_course (id, train_id, course_id, 
      name, teacher, apply_limit, 
      start_time, end_time, is_global, 
      eva_table_id, address, sort_order
      )
    values (#{id,jdbcType=INTEGER}, #{trainId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{teacher,jdbcType=VARCHAR}, #{applyLimit,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{isGlobal,jdbcType=BIT}, 
      #{evaTableId,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR}, #{sortOrder,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.cet.CetTrainCourse">
    insert into cet_train_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="trainId != null">
        train_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="teacher != null">
        teacher,
      </if>
      <if test="applyLimit != null">
        apply_limit,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="isGlobal != null">
        is_global,
      </if>
      <if test="evaTableId != null">
        eva_table_id,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="trainId != null">
        #{trainId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="applyLimit != null">
        #{applyLimit,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isGlobal != null">
        #{isGlobal,jdbcType=BIT},
      </if>
      <if test="evaTableId != null">
        #{evaTableId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cet.CetTrainCourseExample" resultType="java.lang.Long">
    select count(*) from cet_train_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cet_train_course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.trainId != null">
        train_id = #{record.trainId,jdbcType=INTEGER},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.teacher != null">
        teacher = #{record.teacher,jdbcType=VARCHAR},
      </if>
      <if test="record.applyLimit != null">
        apply_limit = #{record.applyLimit,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isGlobal != null">
        is_global = #{record.isGlobal,jdbcType=BIT},
      </if>
      <if test="record.evaTableId != null">
        eva_table_id = #{record.evaTableId,jdbcType=INTEGER},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cet_train_course
    set id = #{record.id,jdbcType=INTEGER},
      train_id = #{record.trainId,jdbcType=INTEGER},
      course_id = #{record.courseId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      teacher = #{record.teacher,jdbcType=VARCHAR},
      apply_limit = #{record.applyLimit,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      is_global = #{record.isGlobal,jdbcType=BIT},
      eva_table_id = #{record.evaTableId,jdbcType=INTEGER},
      address = #{record.address,jdbcType=VARCHAR},
      sort_order = #{record.sortOrder,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cet.CetTrainCourse">
    update cet_train_course
    <set>
      <if test="trainId != null">
        train_id = #{trainId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="teacher != null">
        teacher = #{teacher,jdbcType=VARCHAR},
      </if>
      <if test="applyLimit != null">
        apply_limit = #{applyLimit,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isGlobal != null">
        is_global = #{isGlobal,jdbcType=BIT},
      </if>
      <if test="evaTableId != null">
        eva_table_id = #{evaTableId,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cet.CetTrainCourse">
    update cet_train_course
    set train_id = #{trainId,jdbcType=INTEGER},
      course_id = #{courseId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      teacher = #{teacher,jdbcType=VARCHAR},
      apply_limit = #{applyLimit,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      is_global = #{isGlobal,jdbcType=BIT},
      eva_table_id = #{evaTableId,jdbcType=INTEGER},
      address = #{address,jdbcType=VARCHAR},
      sort_order = #{sortOrder,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.cet.CetTrainCourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cet_train_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>