<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.cet.CetUnitTrainMapper">
  <resultMap id="BaseResultMap" type="domain.cet.CetUnitTrain">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="trainee_type_id" jdbcType="INTEGER" property="traineeTypeId" />
    <result column="other_trainee_type" jdbcType="VARCHAR" property="otherTraineeType" />
    <result column="identity" jdbcType="VARCHAR" property="identity" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="post_type" jdbcType="INTEGER" property="postType" />
    <result column="period" jdbcType="DECIMAL" property="period" />
    <result column="word_note" jdbcType="VARCHAR" property="wordNote" />
    <result column="pdf_note" jdbcType="VARCHAR" property="pdfNote" />
    <result column="score" jdbcType="VARCHAR" property="score" />
    <result column="is_graduate" jdbcType="BIT" property="isGraduate" />
    <result column="add_user_id" jdbcType="INTEGER" property="addUserId" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, project_id, user_id, trainee_type_id, other_trainee_type, identity, title, post_type, 
    period, word_note, pdf_note, score, is_graduate, add_user_id, add_time, status, reason, 
    remark
  </sql>
  <select id="selectByExample" parameterType="domain.cet.CetUnitTrainExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cet_unit_train
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cet_unit_train
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cet_unit_train
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cet.CetUnitTrainExample">
    delete from cet_unit_train
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cet.CetUnitTrain">
    insert into cet_unit_train (id, project_id, user_id, 
      trainee_type_id, other_trainee_type, identity, 
      title, post_type, period, 
      word_note, pdf_note, score, 
      is_graduate, add_user_id, add_time, 
      status, reason, remark
      )
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{traineeTypeId,jdbcType=INTEGER}, #{otherTraineeType,jdbcType=VARCHAR}, #{identity,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{postType,jdbcType=INTEGER}, #{period,jdbcType=DECIMAL}, 
      #{wordNote,jdbcType=VARCHAR}, #{pdfNote,jdbcType=VARCHAR}, #{score,jdbcType=VARCHAR}, 
      #{isGraduate,jdbcType=BIT}, #{addUserId,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=TINYINT}, #{reason,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.cet.CetUnitTrain">
    insert into cet_unit_train
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="traineeTypeId != null">
        trainee_type_id,
      </if>
      <if test="otherTraineeType != null">
        other_trainee_type,
      </if>
      <if test="identity != null">
        identity,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="postType != null">
        post_type,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="wordNote != null">
        word_note,
      </if>
      <if test="pdfNote != null">
        pdf_note,
      </if>
      <if test="score != null">
        score,
      </if>
      <if test="isGraduate != null">
        is_graduate,
      </if>
      <if test="addUserId != null">
        add_user_id,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="traineeTypeId != null">
        #{traineeTypeId,jdbcType=INTEGER},
      </if>
      <if test="otherTraineeType != null">
        #{otherTraineeType,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        #{identity,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="postType != null">
        #{postType,jdbcType=INTEGER},
      </if>
      <if test="period != null">
        #{period,jdbcType=DECIMAL},
      </if>
      <if test="wordNote != null">
        #{wordNote,jdbcType=VARCHAR},
      </if>
      <if test="pdfNote != null">
        #{pdfNote,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        #{score,jdbcType=VARCHAR},
      </if>
      <if test="isGraduate != null">
        #{isGraduate,jdbcType=BIT},
      </if>
      <if test="addUserId != null">
        #{addUserId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cet.CetUnitTrainExample" resultType="java.lang.Long">
    select count(*) from cet_unit_train
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cet_unit_train
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.projectId != null">
        project_id = #{record.projectId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.traineeTypeId != null">
        trainee_type_id = #{record.traineeTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.otherTraineeType != null">
        other_trainee_type = #{record.otherTraineeType,jdbcType=VARCHAR},
      </if>
      <if test="record.identity != null">
        identity = #{record.identity,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.postType != null">
        post_type = #{record.postType,jdbcType=INTEGER},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=DECIMAL},
      </if>
      <if test="record.wordNote != null">
        word_note = #{record.wordNote,jdbcType=VARCHAR},
      </if>
      <if test="record.pdfNote != null">
        pdf_note = #{record.pdfNote,jdbcType=VARCHAR},
      </if>
      <if test="record.score != null">
        score = #{record.score,jdbcType=VARCHAR},
      </if>
      <if test="record.isGraduate != null">
        is_graduate = #{record.isGraduate,jdbcType=BIT},
      </if>
      <if test="record.addUserId != null">
        add_user_id = #{record.addUserId,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cet_unit_train
    set id = #{record.id,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      trainee_type_id = #{record.traineeTypeId,jdbcType=INTEGER},
      other_trainee_type = #{record.otherTraineeType,jdbcType=VARCHAR},
      identity = #{record.identity,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      post_type = #{record.postType,jdbcType=INTEGER},
      period = #{record.period,jdbcType=DECIMAL},
      word_note = #{record.wordNote,jdbcType=VARCHAR},
      pdf_note = #{record.pdfNote,jdbcType=VARCHAR},
      score = #{record.score,jdbcType=VARCHAR},
      is_graduate = #{record.isGraduate,jdbcType=BIT},
      add_user_id = #{record.addUserId,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      reason = #{record.reason,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cet.CetUnitTrain">
    update cet_unit_train
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="traineeTypeId != null">
        trainee_type_id = #{traineeTypeId,jdbcType=INTEGER},
      </if>
      <if test="otherTraineeType != null">
        other_trainee_type = #{otherTraineeType,jdbcType=VARCHAR},
      </if>
      <if test="identity != null">
        identity = #{identity,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="postType != null">
        post_type = #{postType,jdbcType=INTEGER},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=DECIMAL},
      </if>
      <if test="wordNote != null">
        word_note = #{wordNote,jdbcType=VARCHAR},
      </if>
      <if test="pdfNote != null">
        pdf_note = #{pdfNote,jdbcType=VARCHAR},
      </if>
      <if test="score != null">
        score = #{score,jdbcType=VARCHAR},
      </if>
      <if test="isGraduate != null">
        is_graduate = #{isGraduate,jdbcType=BIT},
      </if>
      <if test="addUserId != null">
        add_user_id = #{addUserId,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cet.CetUnitTrain">
    update cet_unit_train
    set project_id = #{projectId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      trainee_type_id = #{traineeTypeId,jdbcType=INTEGER},
      other_trainee_type = #{otherTraineeType,jdbcType=VARCHAR},
      identity = #{identity,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      post_type = #{postType,jdbcType=INTEGER},
      period = #{period,jdbcType=DECIMAL},
      word_note = #{wordNote,jdbcType=VARCHAR},
      pdf_note = #{pdfNote,jdbcType=VARCHAR},
      score = #{score,jdbcType=VARCHAR},
      is_graduate = #{isGraduate,jdbcType=BIT},
      add_user_id = #{addUserId,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      reason = #{reason,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.cet.CetUnitTrainExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cet_unit_train
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>