<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.cet.CetAnnualObjMapper">
  <resultMap id="BaseResultMap" type="domain.cet.CetAnnualObj">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="annual_id" jdbcType="INTEGER" property="annualId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="admin_level" jdbcType="INTEGER" property="adminLevel" />
    <result column="need_update_require" jdbcType="BIT" property="needUpdateRequire" />
    <result column="post_type" jdbcType="INTEGER" property="postType" />
    <result column="lp_work_time" jdbcType="DATE" property="lpWorkTime" />
    <result column="period_offline" jdbcType="DECIMAL" property="periodOffline" />
    <result column="period_online" jdbcType="DECIMAL" property="periodOnline" />
    <result column="finish_period_offline" jdbcType="DECIMAL" property="finishPeriodOffline" />
    <result column="finish_period_online" jdbcType="DECIMAL" property="finishPeriodOnline" />
    <result column="special_period" jdbcType="DECIMAL" property="specialPeriod" />
    <result column="daily_period" jdbcType="DECIMAL" property="dailyPeriod" />
    <result column="unit_period" jdbcType="DECIMAL" property="unitPeriod" />
    <result column="upper_period" jdbcType="DECIMAL" property="upperPeriod" />
    <result column="has_archived" jdbcType="BIT" property="hasArchived" />
    <result column="is_quit" jdbcType="BIT" property="isQuit" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, annual_id, user_id, title, admin_level, need_update_require, post_type, 
    lp_work_time, period_offline, period_online, finish_period_offline, finish_period_online, 
    special_period, daily_period, unit_period, upper_period, has_archived, is_quit, sort_order, 
    remark
  </sql>
  <select id="selectByExample" parameterType="domain.cet.CetAnnualObjExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cet_annual_obj
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cet_annual_obj
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cet_annual_obj
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cet.CetAnnualObjExample">
    delete from cet_annual_obj
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cet.CetAnnualObj">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cet_annual_obj (year, annual_id, user_id, 
      title, admin_level, need_update_require, 
      post_type, lp_work_time, period_offline, 
      period_online, finish_period_offline, finish_period_online, 
      special_period, daily_period, unit_period, 
      upper_period, has_archived, is_quit, 
      sort_order, remark)
    values (#{year,jdbcType=INTEGER}, #{annualId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{adminLevel,jdbcType=INTEGER}, #{needUpdateRequire,jdbcType=BIT}, 
      #{postType,jdbcType=INTEGER}, #{lpWorkTime,jdbcType=DATE}, #{periodOffline,jdbcType=DECIMAL}, 
      #{periodOnline,jdbcType=DECIMAL}, #{finishPeriodOffline,jdbcType=DECIMAL}, #{finishPeriodOnline,jdbcType=DECIMAL}, 
      #{specialPeriod,jdbcType=DECIMAL}, #{dailyPeriod,jdbcType=DECIMAL}, #{unitPeriod,jdbcType=DECIMAL}, 
      #{upperPeriod,jdbcType=DECIMAL}, #{hasArchived,jdbcType=BIT}, #{isQuit,jdbcType=BIT}, 
      #{sortOrder,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.cet.CetAnnualObj">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cet_annual_obj
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="year != null">
        year,
      </if>
      <if test="annualId != null">
        annual_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="adminLevel != null">
        admin_level,
      </if>
      <if test="needUpdateRequire != null">
        need_update_require,
      </if>
      <if test="postType != null">
        post_type,
      </if>
      <if test="lpWorkTime != null">
        lp_work_time,
      </if>
      <if test="periodOffline != null">
        period_offline,
      </if>
      <if test="periodOnline != null">
        period_online,
      </if>
      <if test="finishPeriodOffline != null">
        finish_period_offline,
      </if>
      <if test="finishPeriodOnline != null">
        finish_period_online,
      </if>
      <if test="specialPeriod != null">
        special_period,
      </if>
      <if test="dailyPeriod != null">
        daily_period,
      </if>
      <if test="unitPeriod != null">
        unit_period,
      </if>
      <if test="upperPeriod != null">
        upper_period,
      </if>
      <if test="hasArchived != null">
        has_archived,
      </if>
      <if test="isQuit != null">
        is_quit,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="annualId != null">
        #{annualId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="adminLevel != null">
        #{adminLevel,jdbcType=INTEGER},
      </if>
      <if test="needUpdateRequire != null">
        #{needUpdateRequire,jdbcType=BIT},
      </if>
      <if test="postType != null">
        #{postType,jdbcType=INTEGER},
      </if>
      <if test="lpWorkTime != null">
        #{lpWorkTime,jdbcType=DATE},
      </if>
      <if test="periodOffline != null">
        #{periodOffline,jdbcType=DECIMAL},
      </if>
      <if test="periodOnline != null">
        #{periodOnline,jdbcType=DECIMAL},
      </if>
      <if test="finishPeriodOffline != null">
        #{finishPeriodOffline,jdbcType=DECIMAL},
      </if>
      <if test="finishPeriodOnline != null">
        #{finishPeriodOnline,jdbcType=DECIMAL},
      </if>
      <if test="specialPeriod != null">
        #{specialPeriod,jdbcType=DECIMAL},
      </if>
      <if test="dailyPeriod != null">
        #{dailyPeriod,jdbcType=DECIMAL},
      </if>
      <if test="unitPeriod != null">
        #{unitPeriod,jdbcType=DECIMAL},
      </if>
      <if test="upperPeriod != null">
        #{upperPeriod,jdbcType=DECIMAL},
      </if>
      <if test="hasArchived != null">
        #{hasArchived,jdbcType=BIT},
      </if>
      <if test="isQuit != null">
        #{isQuit,jdbcType=BIT},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cet.CetAnnualObjExample" resultType="java.lang.Long">
    select count(*) from cet_annual_obj
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cet_annual_obj
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.annualId != null">
        annual_id = #{record.annualId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.adminLevel != null">
        admin_level = #{record.adminLevel,jdbcType=INTEGER},
      </if>
      <if test="record.needUpdateRequire != null">
        need_update_require = #{record.needUpdateRequire,jdbcType=BIT},
      </if>
      <if test="record.postType != null">
        post_type = #{record.postType,jdbcType=INTEGER},
      </if>
      <if test="record.lpWorkTime != null">
        lp_work_time = #{record.lpWorkTime,jdbcType=DATE},
      </if>
      <if test="record.periodOffline != null">
        period_offline = #{record.periodOffline,jdbcType=DECIMAL},
      </if>
      <if test="record.periodOnline != null">
        period_online = #{record.periodOnline,jdbcType=DECIMAL},
      </if>
      <if test="record.finishPeriodOffline != null">
        finish_period_offline = #{record.finishPeriodOffline,jdbcType=DECIMAL},
      </if>
      <if test="record.finishPeriodOnline != null">
        finish_period_online = #{record.finishPeriodOnline,jdbcType=DECIMAL},
      </if>
      <if test="record.specialPeriod != null">
        special_period = #{record.specialPeriod,jdbcType=DECIMAL},
      </if>
      <if test="record.dailyPeriod != null">
        daily_period = #{record.dailyPeriod,jdbcType=DECIMAL},
      </if>
      <if test="record.unitPeriod != null">
        unit_period = #{record.unitPeriod,jdbcType=DECIMAL},
      </if>
      <if test="record.upperPeriod != null">
        upper_period = #{record.upperPeriod,jdbcType=DECIMAL},
      </if>
      <if test="record.hasArchived != null">
        has_archived = #{record.hasArchived,jdbcType=BIT},
      </if>
      <if test="record.isQuit != null">
        is_quit = #{record.isQuit,jdbcType=BIT},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cet_annual_obj
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      annual_id = #{record.annualId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      admin_level = #{record.adminLevel,jdbcType=INTEGER},
      need_update_require = #{record.needUpdateRequire,jdbcType=BIT},
      post_type = #{record.postType,jdbcType=INTEGER},
      lp_work_time = #{record.lpWorkTime,jdbcType=DATE},
      period_offline = #{record.periodOffline,jdbcType=DECIMAL},
      period_online = #{record.periodOnline,jdbcType=DECIMAL},
      finish_period_offline = #{record.finishPeriodOffline,jdbcType=DECIMAL},
      finish_period_online = #{record.finishPeriodOnline,jdbcType=DECIMAL},
      special_period = #{record.specialPeriod,jdbcType=DECIMAL},
      daily_period = #{record.dailyPeriod,jdbcType=DECIMAL},
      unit_period = #{record.unitPeriod,jdbcType=DECIMAL},
      upper_period = #{record.upperPeriod,jdbcType=DECIMAL},
      has_archived = #{record.hasArchived,jdbcType=BIT},
      is_quit = #{record.isQuit,jdbcType=BIT},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cet.CetAnnualObj">
    update cet_annual_obj
    <set>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="annualId != null">
        annual_id = #{annualId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="adminLevel != null">
        admin_level = #{adminLevel,jdbcType=INTEGER},
      </if>
      <if test="needUpdateRequire != null">
        need_update_require = #{needUpdateRequire,jdbcType=BIT},
      </if>
      <if test="postType != null">
        post_type = #{postType,jdbcType=INTEGER},
      </if>
      <if test="lpWorkTime != null">
        lp_work_time = #{lpWorkTime,jdbcType=DATE},
      </if>
      <if test="periodOffline != null">
        period_offline = #{periodOffline,jdbcType=DECIMAL},
      </if>
      <if test="periodOnline != null">
        period_online = #{periodOnline,jdbcType=DECIMAL},
      </if>
      <if test="finishPeriodOffline != null">
        finish_period_offline = #{finishPeriodOffline,jdbcType=DECIMAL},
      </if>
      <if test="finishPeriodOnline != null">
        finish_period_online = #{finishPeriodOnline,jdbcType=DECIMAL},
      </if>
      <if test="specialPeriod != null">
        special_period = #{specialPeriod,jdbcType=DECIMAL},
      </if>
      <if test="dailyPeriod != null">
        daily_period = #{dailyPeriod,jdbcType=DECIMAL},
      </if>
      <if test="unitPeriod != null">
        unit_period = #{unitPeriod,jdbcType=DECIMAL},
      </if>
      <if test="upperPeriod != null">
        upper_period = #{upperPeriod,jdbcType=DECIMAL},
      </if>
      <if test="hasArchived != null">
        has_archived = #{hasArchived,jdbcType=BIT},
      </if>
      <if test="isQuit != null">
        is_quit = #{isQuit,jdbcType=BIT},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cet.CetAnnualObj">
    update cet_annual_obj
    set year = #{year,jdbcType=INTEGER},
      annual_id = #{annualId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      admin_level = #{adminLevel,jdbcType=INTEGER},
      need_update_require = #{needUpdateRequire,jdbcType=BIT},
      post_type = #{postType,jdbcType=INTEGER},
      lp_work_time = #{lpWorkTime,jdbcType=DATE},
      period_offline = #{periodOffline,jdbcType=DECIMAL},
      period_online = #{periodOnline,jdbcType=DECIMAL},
      finish_period_offline = #{finishPeriodOffline,jdbcType=DECIMAL},
      finish_period_online = #{finishPeriodOnline,jdbcType=DECIMAL},
      special_period = #{specialPeriod,jdbcType=DECIMAL},
      daily_period = #{dailyPeriod,jdbcType=DECIMAL},
      unit_period = #{unitPeriod,jdbcType=DECIMAL},
      upper_period = #{upperPeriod,jdbcType=DECIMAL},
      has_archived = #{hasArchived,jdbcType=BIT},
      is_quit = #{isQuit,jdbcType=BIT},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.cet.CetAnnualObjExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cet_annual_obj
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>