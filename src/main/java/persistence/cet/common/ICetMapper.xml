<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.cet.common.ICetMapper">

    <!--批量删除已删除的培训记录（包含未通过审批的培训项目）-->
    <delete id="removeDeletedCetRecords" parameterType="Integer">
        update cet_record set is_deleted=1 where source_id not in(select id from cet_upper_train where is_deleted=0) and source_type = 1;
        update cet_record set is_deleted=1 where source_id not in(select id from cet_unit_train where status=0) and source_type = 3;
        update cet_record set is_deleted=1 where source_id
        not in(select po.id from cet_project_obj po
          left join cet_project p on po.project_id=p.id where p.is_deleted=0 and p.status=2 and po.is_quit=0) and source_type = 2;
    </delete>

    <select id="getUnArchiveProjectObjIds" parameterType="map" resultType="java.lang.Integer">
        select po.id from cet_project_obj po
            left join cet_project p on p.id=po.project_id
            left join cet_record r on po.id=r.source_id and r.source_type =2
        <where>
            <if test="projectId!=null">
                and po.project_id=#{projectId}
            </if>
            and po.is_quit=0 and (po.update_time > r.archive_time or r.id is null)
        </where>
    </select>

    <sql id="sql_updateProjectPeriod">
        update cet_project cp
            left join
            (select project_id, sum(period) as period from cet_project_plan
            where project_id=(select project_id from cet_project_plan where id=#{planId})) tmp on cp.id=tmp.project_id
            set cp.period = tmp.period where cp.id=tmp.project_id;
    </sql>
    <update id="updatePlanCourseTotalPeriod" parameterType="Integer">
        update cet_project_plan set period=(select sum(period) from cet_plan_course where plan_id=#{planId}) where id=#{planId};
        <include refid="sql_updateProjectPeriod"/>
    </update>
    <update id="updateTrainCourseTotalPeriod" parameterType="Integer">
        update cet_project_plan set period=(select sum(ctc.period) from cet_train_course ctc, cet_train ct where ctc.train_id=ct.id and ct.plan_id=#{planId}) where id=#{planId};
        <include refid="sql_updateProjectPeriod"/>
    </update>
    <update id="updateDiscussTotalPeriod" parameterType="Integer">
        update cet_project_plan set period=(select sum(period) from cet_discuss where plan_id=#{planId}) where id=#{planId};
        <include refid="sql_updateProjectPeriod"/>
    </update>

    <update id="updateProjectTotalPeriodByPlan" parameterType="Integer">
        update cet_project cp
            left join
            (select project_id, sum(period) as period from cet_project_plan where project_id=#{projectId}) tmp on cp.id=tmp.project_id
            set cp.period = tmp.period where cp.id=#{projectId}
    </update>

    <update id="updateProjectTotalPeriodByCourse" parameterType="Integer">
        update cet_project cp
            left join
            (select project_id, sum(period) as period from cet_train_course where project_id=#{projectId}) tmp on cp.id=tmp.project_id
            set cp.period = tmp.period where cp.id=#{projectId}
    </update>

    <resultMap id="ICetTrainCourseBaseResultMap" type="persistence.cet.common.ICetTrainCourse"
               extends="persistence.cet.CetTrainCourseMapper.BaseResultMap">
        <result column="can_quit" jdbcType="BIT" property="canQuit" />
        <result column="is_finished" jdbcType="BIT" property="isFinished" />
    </resultMap>

    <resultMap id="ICetDiscussGroupBaseResultMap" type="persistence.cet.common.ICetDiscussGroup"
               extends="persistence.cet.CetDiscussGroupMapper.BaseResultMap">
        <result column="plan_id" jdbcType="INTEGER" property="planId" />
        <result column="period" jdbcType="DECIMAL" property="period" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="is_finished" jdbcType="BIT" property="isFinished" />
    </resultMap>

    <sql id="selectUserList_where">
        <where>
            u.id=o.user_id and o.project_id=#{projectId}
            <if test="search != null">
                and (u.username like #{search} or u.realname like #{search} or u.code like #{search})
            </if>
        </where>
    </sql>
    <select id="selectObjList" resultMap="persistence.cet.CetProjectObjMapper.BaseResultMap" parameterType="map">
        select o.* from cet_project_obj o, sys_user_view u
        <include refid="selectUserList_where"/>
    </select>
    <select id="countObjList" parameterType="map" resultType="java.lang.Integer">
        select count(o.id) from cet_project_obj o, sys_user_view u
        <include refid="selectUserList_where"/>
    </select>

    <select id="totalFinishPeriod" parameterType="map" resultType="DECIMAL">
        select sum(period) from cet_record
            where year=${year} and user_id=#{userId}
              <if test="type!=null">
              and type=#{type}
              </if>
              <if test="traineeTypeId!=null">
              and trainee_type_id=#{traineeTypeId}
              </if>
              and is_valid=1
    </select>

    <select id="totalOnlinePeriod" parameterType="map" resultType="DECIMAL">
        select sum(online_period) from cet_record
            where year=${year} and user_id=#{userId}
              <if test="type!=null">
              and type=#{type}
              </if>
              <if test="traineeTypeId!=null">
              and trainee_type_id=#{traineeTypeId}
              </if>
              and is_valid=1
    </select>

    <select id="getTrainObjFinishPeriod" parameterType="map" resultType="DECIMAL">
        select sum(if(ctov.is_finished, ctov.period, 0)) from cet_train_obj_view ctov
            LEFT JOIN cet_project cp ON ctov.project_id=cp.id
            where cp.is_valid=1
              <if test="planId!=null">
              and ctov.plan_id=#{planId}
              </if>
              and ctov.obj_id=#{objId}
    </select>

    <!-- // 获取培训对象在每年或某个培训项目中的培训方案中的已完成学时（针对线下培训、线上培训和实践教学）-->
    <select id="getPlanFinishPeriod" parameterType="map" resultType="DECIMAL">
        select sum(if(ctov.is_finished, ctov.period, 0)) from cet_train_obj_view ctov
            LEFT JOIN cet_project cp ON ctov.project_id=cp.id
            LEFT JOIN cet_project_plan cpp ON ctov.plan_id=cpp.id
            <where>
                <if test="year!=null">
                    and cp.year=#{year}
                </if>
                <if test="projectId!=null">
                    and cp.id=#{projectId}
                </if>
                and cp.is_valid=1 and cpp.type=${type} and ctov.user_id=#{userId}
            </where>
    </select>

    <select id="getOnlineFinishPeriod" parameterType="map" resultType="DECIMAL">
        select sum(ctc.period) from cet_train_obj cto
            left join cet_train_course ctc on cto.train_course_id=ctc.id
            where cto.is_finished=1 and ctc.is_online=1
            and  ctc.project_id=#{projectId} and cto.user_id=#{userId}
    </select>

    <!-- 获取培训对象在每年或某培训项目中的培训方案中的已完成学时（针对上级网上专题）-->
    <select id="getSpecialFinishPeriod" parameterType="map" resultType="DECIMAL">
        select sum(cci.period) from cet_plan_course_obj_result cpcor
            left join cet_course_item cci on cci.id=cpcor.course_item_id
            left join cet_plan_course_obj cpco on cpco.id = cpcor.plan_course_obj_id
            left join cet_project_obj cpo on cpo.id = cpco.obj_id
            left join cet_plan_course cpc on cpc.id=cpco.plan_course_id
            LEFT JOIN cet_project_plan cpp ON cpc.plan_id=cpp.id
            LEFT JOIN cet_project cp ON cpp.project_id=cp.id
            <where>
                <if test="year!=null">
                    and cp.year=#{year}
                </if>
                <if test="projectId!=null">
                    and cp.id=#{projectId}
                </if>
                and cp.is_valid=1 and cpp.type=#{type} and cpo.user_id=#{userId} and cpco.is_finished=1
            </where>
    </select>

    <sql id="searchUserSelectTrains">
        left join cet_project_plan cpp on cpp.id=ct.plan_id
        left join cet_project_obj o on o.project_id=cpp.project_id
        left join cet_project cp on cp.id=cpp.project_id
        where cp.is_deleted=0 and o.user_id=#{userId} and o.is_quit=0 and ct.is_deleted=0
        and ct.is_finished = 0 and now() between ct.start_time and ct.end_time
        order by ct.start_date desc
    </sql>
    <resultMap id="TrainBaseResultMap" type="persistence.cet.common.ICetTrain"
               extends="persistence.cet.CetTrainMapper.BaseResultMap">
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="project_id" jdbcType="INTEGER" property="projectId"/>
        <result column="project_name" jdbcType="INTEGER" property="projectName"/>
    </resultMap>
    <!-- 查询参训人的可选课的党校培训班列表 -->
    <select id="selectUserCetTrainList" resultMap="TrainBaseResultMap" parameterType="map">
        select ct.*, o.user_id, cpp.project_id, cp.name as project_name
        from cet_train ct
        <include refid="searchUserSelectTrains"/>
    </select>
    <select id="countUserCetTrainList" parameterType="map" resultType="java.lang.Integer">
        select count(ct.id) from cet_train ct
        <include refid="searchUserSelectTrains"/>
    </select>

    <sql id="searchUserSelectProjects">
        left join cet_project_obj o on o.project_id=cp.id
        where cp.is_deleted=0 and cp.type in(3, 4) and o.user_id=#{userId} and o.is_quit=0
        order by cp.start_date desc
    </sql>
    <resultMap id="ProjectBaseResultMap" type="persistence.cet.common.ICetProject"
               extends="persistence.cet.CetProjectMapper.BaseResultMap">
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
    </resultMap>
    <!-- 查询参训人的可选课的二级党委培训班列表 -->
    <select id="selectUserCetProjectList" resultMap="ProjectBaseResultMap" parameterType="map">
        select cp.*, o.user_id from cet_project cp
        <include refid="searchUserSelectProjects"/>
    </select>
    <select id="countUserCetProjectList" parameterType="map" resultType="java.lang.Integer">
        select count(cp.id) from cet_project cp
        <include refid="searchUserSelectProjects"/>
    </select>

    <select id="selectedCetTrainCourses" resultMap="ICetTrainCourseBaseResultMap" parameterType="map">
        select ctc.*, cto.can_quit, cto.is_finished from cet_train_obj cto, cet_train_course ctc
        <where>
            <if test="projectId!=null">
                and ctc.project_id=#{projectId}
            </if>
            <if test="trainId!=null">
                and ctc.train_id=#{trainId}
            </if>
            and cto.user_id=#{userId} and cto.train_course_id=ctc.id
        </where>
          order by ctc.sort_order asc
    </select>

    <select id="unSelectedCetTrainCourses" resultMap="persistence.cet.CetTrainCourseMapper.BaseResultMap" parameterType="map">
        select * from cet_train_course ctc
        <where>
            <if test="projectId!=null">
                and ctc.project_id=#{projectId}
            </if>
            <if test="trainId!=null">
                and ctc.train_id=#{trainId}
            </if>
             and not exists (select 1 from cet_train_obj cto where cto.train_course_id=ctc.id
             <if test="projectId!=null">
                and ctc.project_id=#{projectId}
            </if>
            <if test="trainId!=null">
                and ctc.train_id=#{trainId}
            </if>
             and cto.user_id=#{userId})
        </where>
        order by ctc.sort_order asc
    </select>

    <!--学员的培训项目列表 -->
    <sql id="searchUserCetProject">
        <where>
            cpo.is_quit=0 and cpo.user_id=#{userId} and cp.id=cpo.project_id and cp.type=#{projectType}
            <if test="year!=null">
                and cp.year = #{year}
            </if>
            <if test="name!=null">
                and cp.name like '%${name}%'
            </if>
        </where>
    </sql>
    <select id="selectCetProjectList" resultMap="persistence.cet.CetProjectMapper.BaseResultMap" parameterType="map">
        select cp.* from cet_project cp, cet_project_obj cpo
        <include refid="searchUserCetProject"/>
        order by cp.year desc, cp.id desc
    </select>
    <select id="countCetProjectList" parameterType="map" resultType="java.lang.Integer">
        select count(cp.id) from cet_project cp, cet_project_obj cpo
        <include refid="searchUserCetProject"/>
    </select>

    <!--未选课学员-->
    <select id="notApplyUserIds" parameterType="map" resultType="java.lang.Integer">
        select user_id from cet_project_obj cpo
        where cpo.project_id = #{projectId} and not exists(select 1 from cet_train_obj_view where train_course_id in
        <foreach collection="trainCourseIds" item="trainCourseId" separator="," open="(" close=")">
            #{trainCourseId}
        </foreach>
        and project_id=cpo.project_id and user_id=cpo.user_id)
    </select>

    <!--未上传心得体会学员-->
    <select id="notUploadWriteUserIds" parameterType="map" resultType="java.lang.Integer">
        select user_id from cet_project_obj
        <where>
            project_id = #{projectId}
            <if test="objIds != null and objIds.length>0">
                and id IN
                <foreach collection="objIds" item="objId" separator="," open="(" close=")">
                    #{objId}
                </foreach>
            </if>
            and write_file_path is null
        </where>
    </select>


    <sql id="searchTrainCourses">
        <where>
            <!-- 线下培训从线上或线下课程中选择， 实践教学从实践教学课程中选择-->
            <if test="courseTypes != null and courseTypes.length>0">
                cc.type in
                <foreach collection="courseTypes" item="courseType" separator="," open="(" close=")">
                    #{courseType}
                </foreach>
            </if>
            and cc.is_deleted=0
        <if test="name!=null">
            and cc.name like '%${name}%'
        </if>
        <if test="expertId!=null">
          and cc.expert_id=#{expertId}
        </if>
          and not exists(select 1 from cet_train_course where course_id=cc.id and train_id=#{trainId} and course_id is not null)
        </where>
    </sql>
    <!--培训班 选择 课程-->
    <select id="selectCetTrainCourseList" resultMap="persistence.cet.CetCourseMapper.BaseResultMap" parameterType="map">
        select cc.* from cet_course cc
        <include refid="searchTrainCourses"/>
        order by sort_order desc
    </select>
    <select id="countCetTrainCourseList" parameterType="map" resultType="java.lang.Integer">
        select count(cc.id) from cet_course cc
        <include refid="searchTrainCourses"/>
    </select>

    <sql id="searchPlanCourses">
        <where>
            <!-- 自主学习从自主学习课程中选择， 网上专题从网上专题课程中选择-->
            <if test="courseTypes != null and courseTypes.length>0">
                cc.type in
                <foreach collection="courseTypes" item="courseType" separator="," open="(" close=")">
                    #{courseType}
                </foreach>
            </if>
            and cc.is_deleted=0
        <if test="name!=null">
            and cc.name like '%${name}%'
        </if>

          and not exists(select 1 from cet_plan_course where course_id=cc.id and plan_id=#{planId} and course_id is not null)
        </where>
    </sql>
    <!--培训方案 选择 课程-->
    <select id="selectCetPlanCourseList" resultMap="persistence.cet.CetCourseMapper.BaseResultMap" parameterType="map">
        select cc.* from cet_course cc
        <include refid="searchPlanCourses"/>
        order by sort_order desc
    </select>
    <select id="countCetPlanCourseList" parameterType="map" resultType="java.lang.Integer">
        select count(cc.id) from cet_course cc
        <include refid="searchPlanCourses"/>
    </select>

    <!-- 查询分组讨论学员 -->
    <select id="groupUserIds" parameterType="map" resultType="java.lang.Integer">
        select cpo.user_id from cet_discuss_group_obj cdgo, cet_project_obj cpo
            where cdgo.discuss_group_id=#{discussGroupId} and cdgo.obj_id=cpo.id
            <if test="isFinished!=null">
                and cdgo.is_finished = #{isFinished}
            </if>
            order by cpo.id asc
    </select>
    <!-- 查询学员（自主学习、上级网上专题班）-->
    <select id="finishUserIds" parameterType="map" resultType="java.lang.Integer">
        select cpo.user_id from cet_plan_course_obj cpco, cet_project_obj cpo
        where cpco.plan_course_id=#{planCourseId}
        <if test="isFinished!=null">
            and cpco.is_finished = #{isFinished}
        </if>
        and cpco.obj_id=cpo.id order by cpo.id asc
    </select>

    <select id="projectGroupByStatus" parameterType="map" resultType="map">
        SELECT status, COUNT(*) num FROM cet_project
        <where>
        type=#{type} and is_party_project=1 and is_deleted=0
        <if test="addPermits">
            <if test="adminPartyIdList!=null and adminPartyIdList.size>0">
                and cet_party_id in
                <foreach collection="adminPartyIdList" item="st"
                         index="index" open="(" close=")" separator=",">
                    #{st}
                </foreach>
            </if>
          <if test="adminPartyIdList==null or adminPartyIdList.size==0">
                and cet_party_id is null
            </if>
        </if>
        </where>
        GROUP BY STATUS
    </select>

    <select id="unitProjectGroupByStatus" parameterType="map" resultType="map">
        SELECT status, COUNT(*) num FROM cet_unit_project
        <if test="addPermits">
            <if test="adminPartyIdList!=null and adminPartyIdList.size>0">
                where cet_party_id in
                <foreach collection="adminPartyIdList" item="st"
                         index="index" open="(" close=")" separator=",">
                    #{st}
                </foreach>
            </if>
          <if test="adminPartyIdList==null or adminPartyIdList.size==0">
                where cet_party_id is null
            </if>
        </if>
        GROUP BY STATUS
    </select>

    <select id="unitTrainGroupByStatus" parameterType="map" resultType="map">
        SELECT cup.status, COUNT(cut.id) num FROM cet_unit_project cup,cet_unit_train cut
        <where>
            cup.id=cut.project_id and cut.status=0
            <if test="addPermits">
                <if test="adminPartyIdList!=null and adminPartyIdList.size>0">
                    and cup.cet_party_id in
                    <foreach collection="adminPartyIdList" item="st"
                             index="index" open="(" close=")" separator=",">
                        #{st}
                    </foreach>
                </if>
                <if test="adminPartyIdList==null or adminPartyIdList.size==0">
                    and cup.cet_party_id is null
                </if>
            </if>
        </where>
        GROUP BY cup.status
    </select>
    <select id="unitTrainReRecord" parameterType="map" resultType="java.lang.Integer">
        SELECT COUNT(cut.id) num FROM cet_unit_project cup,cet_unit_train cut
        <where>
            cup.id=cut.project_id and cut.status!=0
            <if test="addPermits">
                <if test="adminPartyIdList!=null and adminPartyIdList.size>0">
                    and cup.cet_party_id in
                    <foreach collection="adminPartyIdList" item="st"
                             index="index" open="(" close=")" separator=",">
                        #{st}
                    </foreach>
                </if>
                <if test="adminPartyIdList==null or adminPartyIdList.size==0">
                    and cup.cet_party_id is null
                </if>
            </if>
        </where>
    </select>
</mapper>