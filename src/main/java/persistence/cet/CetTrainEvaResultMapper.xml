<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.cet.CetTrainEvaResultMapper">
  <resultMap id="BaseResultMap" type="domain.cet.CetTrainEvaResult">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="train_id" jdbcType="INTEGER" property="trainId" />
    <result column="train_course_id" jdbcType="INTEGER" property="trainCourseId" />
    <result column="inspector_id" jdbcType="INTEGER" property="inspectorId" />
    <result column="eva_table_id" jdbcType="INTEGER" property="evaTableId" />
    <result column="norm_id" jdbcType="INTEGER" property="normId" />
    <result column="rank_id" jdbcType="INTEGER" property="rankId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, train_id, train_course_id, inspector_id, eva_table_id, norm_id, rank_id
  </sql>
  <select id="selectByExample" parameterType="domain.cet.CetTrainEvaResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cet_train_eva_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cet_train_eva_result
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cet_train_eva_result
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cet.CetTrainEvaResultExample">
    delete from cet_train_eva_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cet.CetTrainEvaResult">
    insert into cet_train_eva_result (id, train_id, train_course_id, 
      inspector_id, eva_table_id, norm_id, 
      rank_id)
    values (#{id,jdbcType=INTEGER}, #{trainId,jdbcType=INTEGER}, #{trainCourseId,jdbcType=INTEGER}, 
      #{inspectorId,jdbcType=INTEGER}, #{evaTableId,jdbcType=INTEGER}, #{normId,jdbcType=INTEGER}, 
      #{rankId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="domain.cet.CetTrainEvaResult">
    insert into cet_train_eva_result
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="trainId != null">
        train_id,
      </if>
      <if test="trainCourseId != null">
        train_course_id,
      </if>
      <if test="inspectorId != null">
        inspector_id,
      </if>
      <if test="evaTableId != null">
        eva_table_id,
      </if>
      <if test="normId != null">
        norm_id,
      </if>
      <if test="rankId != null">
        rank_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="trainId != null">
        #{trainId,jdbcType=INTEGER},
      </if>
      <if test="trainCourseId != null">
        #{trainCourseId,jdbcType=INTEGER},
      </if>
      <if test="inspectorId != null">
        #{inspectorId,jdbcType=INTEGER},
      </if>
      <if test="evaTableId != null">
        #{evaTableId,jdbcType=INTEGER},
      </if>
      <if test="normId != null">
        #{normId,jdbcType=INTEGER},
      </if>
      <if test="rankId != null">
        #{rankId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cet.CetTrainEvaResultExample" resultType="java.lang.Long">
    select count(*) from cet_train_eva_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cet_train_eva_result
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.trainId != null">
        train_id = #{record.trainId,jdbcType=INTEGER},
      </if>
      <if test="record.trainCourseId != null">
        train_course_id = #{record.trainCourseId,jdbcType=INTEGER},
      </if>
      <if test="record.inspectorId != null">
        inspector_id = #{record.inspectorId,jdbcType=INTEGER},
      </if>
      <if test="record.evaTableId != null">
        eva_table_id = #{record.evaTableId,jdbcType=INTEGER},
      </if>
      <if test="record.normId != null">
        norm_id = #{record.normId,jdbcType=INTEGER},
      </if>
      <if test="record.rankId != null">
        rank_id = #{record.rankId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cet_train_eva_result
    set id = #{record.id,jdbcType=INTEGER},
      train_id = #{record.trainId,jdbcType=INTEGER},
      train_course_id = #{record.trainCourseId,jdbcType=INTEGER},
      inspector_id = #{record.inspectorId,jdbcType=INTEGER},
      eva_table_id = #{record.evaTableId,jdbcType=INTEGER},
      norm_id = #{record.normId,jdbcType=INTEGER},
      rank_id = #{record.rankId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cet.CetTrainEvaResult">
    update cet_train_eva_result
    <set>
      <if test="trainId != null">
        train_id = #{trainId,jdbcType=INTEGER},
      </if>
      <if test="trainCourseId != null">
        train_course_id = #{trainCourseId,jdbcType=INTEGER},
      </if>
      <if test="inspectorId != null">
        inspector_id = #{inspectorId,jdbcType=INTEGER},
      </if>
      <if test="evaTableId != null">
        eva_table_id = #{evaTableId,jdbcType=INTEGER},
      </if>
      <if test="normId != null">
        norm_id = #{normId,jdbcType=INTEGER},
      </if>
      <if test="rankId != null">
        rank_id = #{rankId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cet.CetTrainEvaResult">
    update cet_train_eva_result
    set train_id = #{trainId,jdbcType=INTEGER},
      train_course_id = #{trainCourseId,jdbcType=INTEGER},
      inspector_id = #{inspectorId,jdbcType=INTEGER},
      eva_table_id = #{evaTableId,jdbcType=INTEGER},
      norm_id = #{normId,jdbcType=INTEGER},
      rank_id = #{rankId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.cet.CetTrainEvaResultExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cet_train_eva_result
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>