<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.StudentMapper" >
  <resultMap id="BaseResultMap" type="domain.Student" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="code" property="code" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="TINYINT" />
    <result column="birth" property="birth" jdbcType="DATE" />
    <result column="nation" property="nation" jdbcType="VARCHAR" />
    <result column="native_place" property="nativePlace" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="edu_level" property="eduLevel" jdbcType="VARCHAR" />
    <result column="edu_type" property="eduType" jdbcType="VARCHAR" />
    <result column="edu_category" property="eduCategory" jdbcType="VARCHAR" />
    <result column="edu_way" property="eduWay" jdbcType="VARCHAR" />
    <result column="is_full_time" property="isFullTime" jdbcType="BIT" />
    <result column="enrol_year" property="enrolYear" jdbcType="VARCHAR" />
    <result column="period" property="period" jdbcType="VARCHAR" />
    <result column="grade" property="grade" jdbcType="VARCHAR" />
    <result column="actual_enrol_time" property="actualEnrolTime" jdbcType="DATE" />
    <result column="expect_graduate_time" property="expectGraduateTime" jdbcType="DATE" />
    <result column="delay_year" property="delayYear" jdbcType="REAL" />
    <result column="actual_graduate_time" property="actualGraduateTime" jdbcType="DATE" />
    <result column="xj_status" property="xjStatus" jdbcType="VARCHAR" />
    <result column="sync_source" property="syncSource" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, code, realname, gender, birth, nation, native_place, idcard, type, edu_level, 
    edu_type, edu_category, edu_way, is_full_time, enrol_year, period, grade, actual_enrol_time, 
    expect_graduate_time, delay_year, actual_graduate_time, xj_status, sync_source, create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="domain.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ow_student
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ow_student
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.StudentExample" >
    delete from ow_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.Student" >
    insert into ow_student (user_id, code, realname, 
      gender, birth, nation, 
      native_place, idcard, type, 
      edu_level, edu_type, edu_category, 
      edu_way, is_full_time, enrol_year, 
      period, grade, actual_enrol_time, 
      expect_graduate_time, delay_year, actual_graduate_time, 
      xj_status, sync_source, create_time
      )
    values (#{userId,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{gender,jdbcType=TINYINT}, #{birth,jdbcType=DATE}, #{nation,jdbcType=VARCHAR}, 
      #{nativePlace,jdbcType=VARCHAR}, #{idcard,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, 
      #{eduLevel,jdbcType=VARCHAR}, #{eduType,jdbcType=VARCHAR}, #{eduCategory,jdbcType=VARCHAR}, 
      #{eduWay,jdbcType=VARCHAR}, #{isFullTime,jdbcType=BIT}, #{enrolYear,jdbcType=VARCHAR}, 
      #{period,jdbcType=VARCHAR}, #{grade,jdbcType=VARCHAR}, #{actualEnrolTime,jdbcType=DATE}, 
      #{expectGraduateTime,jdbcType=DATE}, #{delayYear,jdbcType=REAL}, #{actualGraduateTime,jdbcType=DATE}, 
      #{xjStatus,jdbcType=VARCHAR}, #{syncSource,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.Student" >
    insert into ow_student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="code != null" >
        code,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="birth != null" >
        birth,
      </if>
      <if test="nation != null" >
        nation,
      </if>
      <if test="nativePlace != null" >
        native_place,
      </if>
      <if test="idcard != null" >
        idcard,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="eduLevel != null" >
        edu_level,
      </if>
      <if test="eduType != null" >
        edu_type,
      </if>
      <if test="eduCategory != null" >
        edu_category,
      </if>
      <if test="eduWay != null" >
        edu_way,
      </if>
      <if test="isFullTime != null" >
        is_full_time,
      </if>
      <if test="enrolYear != null" >
        enrol_year,
      </if>
      <if test="period != null" >
        period,
      </if>
      <if test="grade != null" >
        grade,
      </if>
      <if test="actualEnrolTime != null" >
        actual_enrol_time,
      </if>
      <if test="expectGraduateTime != null" >
        expect_graduate_time,
      </if>
      <if test="delayYear != null" >
        delay_year,
      </if>
      <if test="actualGraduateTime != null" >
        actual_graduate_time,
      </if>
      <if test="xjStatus != null" >
        xj_status,
      </if>
      <if test="syncSource != null" >
        sync_source,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="code != null" >
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="birth != null" >
        #{birth,jdbcType=DATE},
      </if>
      <if test="nation != null" >
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null" >
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="eduLevel != null" >
        #{eduLevel,jdbcType=VARCHAR},
      </if>
      <if test="eduType != null" >
        #{eduType,jdbcType=VARCHAR},
      </if>
      <if test="eduCategory != null" >
        #{eduCategory,jdbcType=VARCHAR},
      </if>
      <if test="eduWay != null" >
        #{eduWay,jdbcType=VARCHAR},
      </if>
      <if test="isFullTime != null" >
        #{isFullTime,jdbcType=BIT},
      </if>
      <if test="enrolYear != null" >
        #{enrolYear,jdbcType=VARCHAR},
      </if>
      <if test="period != null" >
        #{period,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        #{grade,jdbcType=VARCHAR},
      </if>
      <if test="actualEnrolTime != null" >
        #{actualEnrolTime,jdbcType=DATE},
      </if>
      <if test="expectGraduateTime != null" >
        #{expectGraduateTime,jdbcType=DATE},
      </if>
      <if test="delayYear != null" >
        #{delayYear,jdbcType=REAL},
      </if>
      <if test="actualGraduateTime != null" >
        #{actualGraduateTime,jdbcType=DATE},
      </if>
      <if test="xjStatus != null" >
        #{xjStatus,jdbcType=VARCHAR},
      </if>
      <if test="syncSource != null" >
        #{syncSource,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.StudentExample" resultType="java.lang.Integer" >
    select count(*) from ow_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ow_student
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.code != null" >
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null" >
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.birth != null" >
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.nation != null" >
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.nativePlace != null" >
        native_place = #{record.nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.idcard != null" >
        idcard = #{record.idcard,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.eduLevel != null" >
        edu_level = #{record.eduLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.eduType != null" >
        edu_type = #{record.eduType,jdbcType=VARCHAR},
      </if>
      <if test="record.eduCategory != null" >
        edu_category = #{record.eduCategory,jdbcType=VARCHAR},
      </if>
      <if test="record.eduWay != null" >
        edu_way = #{record.eduWay,jdbcType=VARCHAR},
      </if>
      <if test="record.isFullTime != null" >
        is_full_time = #{record.isFullTime,jdbcType=BIT},
      </if>
      <if test="record.enrolYear != null" >
        enrol_year = #{record.enrolYear,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null" >
        period = #{record.period,jdbcType=VARCHAR},
      </if>
      <if test="record.grade != null" >
        grade = #{record.grade,jdbcType=VARCHAR},
      </if>
      <if test="record.actualEnrolTime != null" >
        actual_enrol_time = #{record.actualEnrolTime,jdbcType=DATE},
      </if>
      <if test="record.expectGraduateTime != null" >
        expect_graduate_time = #{record.expectGraduateTime,jdbcType=DATE},
      </if>
      <if test="record.delayYear != null" >
        delay_year = #{record.delayYear,jdbcType=REAL},
      </if>
      <if test="record.actualGraduateTime != null" >
        actual_graduate_time = #{record.actualGraduateTime,jdbcType=DATE},
      </if>
      <if test="record.xjStatus != null" >
        xj_status = #{record.xjStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.syncSource != null" >
        sync_source = #{record.syncSource,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ow_student
    set user_id = #{record.userId,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=TINYINT},
      birth = #{record.birth,jdbcType=DATE},
      nation = #{record.nation,jdbcType=VARCHAR},
      native_place = #{record.nativePlace,jdbcType=VARCHAR},
      idcard = #{record.idcard,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR},
      edu_level = #{record.eduLevel,jdbcType=VARCHAR},
      edu_type = #{record.eduType,jdbcType=VARCHAR},
      edu_category = #{record.eduCategory,jdbcType=VARCHAR},
      edu_way = #{record.eduWay,jdbcType=VARCHAR},
      is_full_time = #{record.isFullTime,jdbcType=BIT},
      enrol_year = #{record.enrolYear,jdbcType=VARCHAR},
      period = #{record.period,jdbcType=VARCHAR},
      grade = #{record.grade,jdbcType=VARCHAR},
      actual_enrol_time = #{record.actualEnrolTime,jdbcType=DATE},
      expect_graduate_time = #{record.expectGraduateTime,jdbcType=DATE},
      delay_year = #{record.delayYear,jdbcType=REAL},
      actual_graduate_time = #{record.actualGraduateTime,jdbcType=DATE},
      xj_status = #{record.xjStatus,jdbcType=VARCHAR},
      sync_source = #{record.syncSource,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.Student" >
    update ow_student
    <set >
      <if test="code != null" >
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="birth != null" >
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="nation != null" >
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null" >
        native_place = #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="idcard != null" >
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
      <if test="eduLevel != null" >
        edu_level = #{eduLevel,jdbcType=VARCHAR},
      </if>
      <if test="eduType != null" >
        edu_type = #{eduType,jdbcType=VARCHAR},
      </if>
      <if test="eduCategory != null" >
        edu_category = #{eduCategory,jdbcType=VARCHAR},
      </if>
      <if test="eduWay != null" >
        edu_way = #{eduWay,jdbcType=VARCHAR},
      </if>
      <if test="isFullTime != null" >
        is_full_time = #{isFullTime,jdbcType=BIT},
      </if>
      <if test="enrolYear != null" >
        enrol_year = #{enrolYear,jdbcType=VARCHAR},
      </if>
      <if test="period != null" >
        period = #{period,jdbcType=VARCHAR},
      </if>
      <if test="grade != null" >
        grade = #{grade,jdbcType=VARCHAR},
      </if>
      <if test="actualEnrolTime != null" >
        actual_enrol_time = #{actualEnrolTime,jdbcType=DATE},
      </if>
      <if test="expectGraduateTime != null" >
        expect_graduate_time = #{expectGraduateTime,jdbcType=DATE},
      </if>
      <if test="delayYear != null" >
        delay_year = #{delayYear,jdbcType=REAL},
      </if>
      <if test="actualGraduateTime != null" >
        actual_graduate_time = #{actualGraduateTime,jdbcType=DATE},
      </if>
      <if test="xjStatus != null" >
        xj_status = #{xjStatus,jdbcType=VARCHAR},
      </if>
      <if test="syncSource != null" >
        sync_source = #{syncSource,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.Student" >
    update ow_student
    set code = #{code,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=TINYINT},
      birth = #{birth,jdbcType=DATE},
      nation = #{nation,jdbcType=VARCHAR},
      native_place = #{nativePlace,jdbcType=VARCHAR},
      idcard = #{idcard,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      edu_level = #{eduLevel,jdbcType=VARCHAR},
      edu_type = #{eduType,jdbcType=VARCHAR},
      edu_category = #{eduCategory,jdbcType=VARCHAR},
      edu_way = #{eduWay,jdbcType=VARCHAR},
      is_full_time = #{isFullTime,jdbcType=BIT},
      enrol_year = #{enrolYear,jdbcType=VARCHAR},
      period = #{period,jdbcType=VARCHAR},
      grade = #{grade,jdbcType=VARCHAR},
      actual_enrol_time = #{actualEnrolTime,jdbcType=DATE},
      expect_graduate_time = #{expectGraduateTime,jdbcType=DATE},
      delay_year = #{delayYear,jdbcType=REAL},
      actual_graduate_time = #{actualGraduateTime,jdbcType=DATE},
      xj_status = #{xjStatus,jdbcType=VARCHAR},
      sync_source = #{syncSource,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="domain.StudentExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>