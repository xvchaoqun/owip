<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.sc.scBorder.ScBorderItemMapper">
  <resultMap id="BaseResultMap" type="domain.sc.scBorder.ScBorderItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="border_id" jdbcType="INTEGER" property="borderId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="cadre_id" jdbcType="INTEGER" property="cadreId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="admin_level" jdbcType="INTEGER" property="adminLevel" />
    <result column="dispatch_cadre_ids" jdbcType="VARCHAR" property="dispatchCadreIds" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, border_id, type, cadre_id, title, admin_level, dispatch_cadre_ids, remark
  </sql>
  <select id="selectByExample" parameterType="domain.sc.scBorder.ScBorderItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sc_border_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sc_border_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sc_border_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.sc.scBorder.ScBorderItemExample">
    delete from sc_border_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.sc.scBorder.ScBorderItem">
    insert into sc_border_item (id, border_id, type, 
      cadre_id, title, admin_level, 
      dispatch_cadre_ids, remark)
    values (#{id,jdbcType=INTEGER}, #{borderId,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, 
      #{cadreId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{adminLevel,jdbcType=INTEGER}, 
      #{dispatchCadreIds,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.sc.scBorder.ScBorderItem">
    insert into sc_border_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="borderId != null">
        border_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="cadreId != null">
        cadre_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="adminLevel != null">
        admin_level,
      </if>
      <if test="dispatchCadreIds != null">
        dispatch_cadre_ids,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="borderId != null">
        #{borderId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="cadreId != null">
        #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="adminLevel != null">
        #{adminLevel,jdbcType=INTEGER},
      </if>
      <if test="dispatchCadreIds != null">
        #{dispatchCadreIds,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.sc.scBorder.ScBorderItemExample" resultType="java.lang.Long">
    select count(*) from sc_border_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sc_border_item
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.borderId != null">
        border_id = #{record.borderId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.cadreId != null">
        cadre_id = #{record.cadreId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.adminLevel != null">
        admin_level = #{record.adminLevel,jdbcType=INTEGER},
      </if>
      <if test="record.dispatchCadreIds != null">
        dispatch_cadre_ids = #{record.dispatchCadreIds,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sc_border_item
    set id = #{record.id,jdbcType=INTEGER},
      border_id = #{record.borderId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      cadre_id = #{record.cadreId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      admin_level = #{record.adminLevel,jdbcType=INTEGER},
      dispatch_cadre_ids = #{record.dispatchCadreIds,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.sc.scBorder.ScBorderItem">
    update sc_border_item
    <set>
      <if test="borderId != null">
        border_id = #{borderId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="cadreId != null">
        cadre_id = #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="adminLevel != null">
        admin_level = #{adminLevel,jdbcType=INTEGER},
      </if>
      <if test="dispatchCadreIds != null">
        dispatch_cadre_ids = #{dispatchCadreIds,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.sc.scBorder.ScBorderItem">
    update sc_border_item
    set border_id = #{borderId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      cadre_id = #{cadreId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      admin_level = #{adminLevel,jdbcType=INTEGER},
      dispatch_cadre_ids = #{dispatchCadreIds,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.sc.scBorder.ScBorderItemExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sc_border_item
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>