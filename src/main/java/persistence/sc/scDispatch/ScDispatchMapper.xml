<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.sc.scDispatch.ScDispatchMapper">
  <resultMap id="BaseResultMap" type="domain.sc.scDispatch.ScDispatch">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="dispatch_type_id" jdbcType="INTEGER" property="dispatchTypeId" />
    <result column="code" jdbcType="INTEGER" property="code" />
    <result column="meeting_time" jdbcType="DATE" property="meetingTime" />
    <result column="pub_time" jdbcType="DATE" property="pubTime" />
    <result column="file_path" jdbcType="VARCHAR" property="filePath" />
    <result column="sign_file_path" jdbcType="VARCHAR" property="signFilePath" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, dispatch_type_id, code, meeting_time, pub_time, file_path, sign_file_path, 
    remark
  </sql>
  <select id="selectByExample" parameterType="domain.sc.scDispatch.ScDispatchExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sc_dispatch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sc_dispatch
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sc_dispatch
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.sc.scDispatch.ScDispatchExample">
    delete from sc_dispatch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert keyProperty="id" id="insert" parameterType="domain.sc.scDispatch.ScDispatch">
    insert into sc_dispatch (id, year, dispatch_type_id, 
      code, meeting_time, pub_time, 
      file_path, sign_file_path, remark
      )
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, #{dispatchTypeId,jdbcType=INTEGER}, 
      #{code,jdbcType=INTEGER}, #{meetingTime,jdbcType=DATE}, #{pubTime,jdbcType=DATE}, 
      #{filePath,jdbcType=VARCHAR}, #{signFilePath,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}
      )
  </insert>
  <insert keyProperty="id" id="insertSelective" parameterType="domain.sc.scDispatch.ScDispatch">
    insert into sc_dispatch
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="dispatchTypeId != null">
        dispatch_type_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="meetingTime != null">
        meeting_time,
      </if>
      <if test="pubTime != null">
        pub_time,
      </if>
      <if test="filePath != null">
        file_path,
      </if>
      <if test="signFilePath != null">
        sign_file_path,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="dispatchTypeId != null">
        #{dispatchTypeId,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=INTEGER},
      </if>
      <if test="meetingTime != null">
        #{meetingTime,jdbcType=DATE},
      </if>
      <if test="pubTime != null">
        #{pubTime,jdbcType=DATE},
      </if>
      <if test="filePath != null">
        #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="signFilePath != null">
        #{signFilePath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.sc.scDispatch.ScDispatchExample" resultType="java.lang.Long">
    select count(*) from sc_dispatch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sc_dispatch
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.dispatchTypeId != null">
        dispatch_type_id = #{record.dispatchTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=INTEGER},
      </if>
      <if test="record.meetingTime != null">
        meeting_time = #{record.meetingTime,jdbcType=DATE},
      </if>
      <if test="record.pubTime != null">
        pub_time = #{record.pubTime,jdbcType=DATE},
      </if>
      <if test="record.filePath != null">
        file_path = #{record.filePath,jdbcType=VARCHAR},
      </if>
      <if test="record.signFilePath != null">
        sign_file_path = #{record.signFilePath,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sc_dispatch
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      dispatch_type_id = #{record.dispatchTypeId,jdbcType=INTEGER},
      code = #{record.code,jdbcType=INTEGER},
      meeting_time = #{record.meetingTime,jdbcType=DATE},
      pub_time = #{record.pubTime,jdbcType=DATE},
      file_path = #{record.filePath,jdbcType=VARCHAR},
      sign_file_path = #{record.signFilePath,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.sc.scDispatch.ScDispatch">
    update sc_dispatch
    <set>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="dispatchTypeId != null">
        dispatch_type_id = #{dispatchTypeId,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=INTEGER},
      </if>
      <if test="meetingTime != null">
        meeting_time = #{meetingTime,jdbcType=DATE},
      </if>
      <if test="pubTime != null">
        pub_time = #{pubTime,jdbcType=DATE},
      </if>
      <if test="filePath != null">
        file_path = #{filePath,jdbcType=VARCHAR},
      </if>
      <if test="signFilePath != null">
        sign_file_path = #{signFilePath,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.sc.scDispatch.ScDispatch">
    update sc_dispatch
    set year = #{year,jdbcType=INTEGER},
      dispatch_type_id = #{dispatchTypeId,jdbcType=INTEGER},
      code = #{code,jdbcType=INTEGER},
      meeting_time = #{meetingTime,jdbcType=DATE},
      pub_time = #{pubTime,jdbcType=DATE},
      file_path = #{filePath,jdbcType=VARCHAR},
      sign_file_path = #{signFilePath,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.sc.scDispatch.ScDispatchExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sc_dispatch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>