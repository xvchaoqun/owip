<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.sc.scCommittee.ScCommitteeVoteMapper">
  <resultMap id="BaseResultMap" type="domain.sc.scCommittee.ScCommitteeVote">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="topic_id" jdbcType="INTEGER" property="topicId" />
    <result column="cadre_id" jdbcType="INTEGER" property="cadreId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="unit_post_id" jdbcType="INTEGER" property="unitPostId" />
    <result column="cadre_type_id" jdbcType="INTEGER" property="cadreTypeId" />
    <result column="way_id" jdbcType="INTEGER" property="wayId" />
    <result column="procedure_id" jdbcType="INTEGER" property="procedureId" />
    <result column="post" jdbcType="VARCHAR" property="post" />
    <result column="post_type" jdbcType="INTEGER" property="postType" />
    <result column="admin_level" jdbcType="INTEGER" property="adminLevel" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="agree_count" jdbcType="INTEGER" property="agreeCount" />
    <result column="abstain_count" jdbcType="INTEGER" property="abstainCount" />
    <result column="disagree_count" jdbcType="INTEGER" property="disagreeCount" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, topic_id, cadre_id, type, unit_post_id, cadre_type_id, way_id, procedure_id, 
    post, post_type, admin_level, unit_id, agree_count, abstain_count, disagree_count, 
    remark, sort_order
  </sql>
  <select id="selectByExample" parameterType="domain.sc.scCommittee.ScCommitteeVoteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sc_committee_vote
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sc_committee_vote
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sc_committee_vote
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.sc.scCommittee.ScCommitteeVoteExample">
    delete from sc_committee_vote
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.sc.scCommittee.ScCommitteeVote">
    insert into sc_committee_vote (id, topic_id, cadre_id, 
      type, unit_post_id, cadre_type_id, 
      way_id, procedure_id, post, 
      post_type, admin_level, unit_id, 
      agree_count, abstain_count, disagree_count, 
      remark, sort_order)
    values (#{id,jdbcType=INTEGER}, #{topicId,jdbcType=INTEGER}, #{cadreId,jdbcType=INTEGER}, 
      #{type,jdbcType=TINYINT}, #{unitPostId,jdbcType=INTEGER}, #{cadreTypeId,jdbcType=INTEGER}, 
      #{wayId,jdbcType=INTEGER}, #{procedureId,jdbcType=INTEGER}, #{post,jdbcType=VARCHAR}, 
      #{postType,jdbcType=INTEGER}, #{adminLevel,jdbcType=INTEGER}, #{unitId,jdbcType=INTEGER}, 
      #{agreeCount,jdbcType=INTEGER}, #{abstainCount,jdbcType=INTEGER}, #{disagreeCount,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{sortOrder,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="domain.sc.scCommittee.ScCommitteeVote">
    insert into sc_committee_vote
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="topicId != null">
        topic_id,
      </if>
      <if test="cadreId != null">
        cadre_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="unitPostId != null">
        unit_post_id,
      </if>
      <if test="cadreTypeId != null">
        cadre_type_id,
      </if>
      <if test="wayId != null">
        way_id,
      </if>
      <if test="procedureId != null">
        procedure_id,
      </if>
      <if test="post != null">
        post,
      </if>
      <if test="postType != null">
        post_type,
      </if>
      <if test="adminLevel != null">
        admin_level,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="agreeCount != null">
        agree_count,
      </if>
      <if test="abstainCount != null">
        abstain_count,
      </if>
      <if test="disagreeCount != null">
        disagree_count,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="topicId != null">
        #{topicId,jdbcType=INTEGER},
      </if>
      <if test="cadreId != null">
        #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="unitPostId != null">
        #{unitPostId,jdbcType=INTEGER},
      </if>
      <if test="cadreTypeId != null">
        #{cadreTypeId,jdbcType=INTEGER},
      </if>
      <if test="wayId != null">
        #{wayId,jdbcType=INTEGER},
      </if>
      <if test="procedureId != null">
        #{procedureId,jdbcType=INTEGER},
      </if>
      <if test="post != null">
        #{post,jdbcType=VARCHAR},
      </if>
      <if test="postType != null">
        #{postType,jdbcType=INTEGER},
      </if>
      <if test="adminLevel != null">
        #{adminLevel,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="agreeCount != null">
        #{agreeCount,jdbcType=INTEGER},
      </if>
      <if test="abstainCount != null">
        #{abstainCount,jdbcType=INTEGER},
      </if>
      <if test="disagreeCount != null">
        #{disagreeCount,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.sc.scCommittee.ScCommitteeVoteExample" resultType="java.lang.Long">
    select count(*) from sc_committee_vote
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sc_committee_vote
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.topicId != null">
        topic_id = #{record.topicId,jdbcType=INTEGER},
      </if>
      <if test="record.cadreId != null">
        cadre_id = #{record.cadreId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.unitPostId != null">
        unit_post_id = #{record.unitPostId,jdbcType=INTEGER},
      </if>
      <if test="record.cadreTypeId != null">
        cadre_type_id = #{record.cadreTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.wayId != null">
        way_id = #{record.wayId,jdbcType=INTEGER},
      </if>
      <if test="record.procedureId != null">
        procedure_id = #{record.procedureId,jdbcType=INTEGER},
      </if>
      <if test="record.post != null">
        post = #{record.post,jdbcType=VARCHAR},
      </if>
      <if test="record.postType != null">
        post_type = #{record.postType,jdbcType=INTEGER},
      </if>
      <if test="record.adminLevel != null">
        admin_level = #{record.adminLevel,jdbcType=INTEGER},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
      <if test="record.agreeCount != null">
        agree_count = #{record.agreeCount,jdbcType=INTEGER},
      </if>
      <if test="record.abstainCount != null">
        abstain_count = #{record.abstainCount,jdbcType=INTEGER},
      </if>
      <if test="record.disagreeCount != null">
        disagree_count = #{record.disagreeCount,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sc_committee_vote
    set id = #{record.id,jdbcType=INTEGER},
      topic_id = #{record.topicId,jdbcType=INTEGER},
      cadre_id = #{record.cadreId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      unit_post_id = #{record.unitPostId,jdbcType=INTEGER},
      cadre_type_id = #{record.cadreTypeId,jdbcType=INTEGER},
      way_id = #{record.wayId,jdbcType=INTEGER},
      procedure_id = #{record.procedureId,jdbcType=INTEGER},
      post = #{record.post,jdbcType=VARCHAR},
      post_type = #{record.postType,jdbcType=INTEGER},
      admin_level = #{record.adminLevel,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      agree_count = #{record.agreeCount,jdbcType=INTEGER},
      abstain_count = #{record.abstainCount,jdbcType=INTEGER},
      disagree_count = #{record.disagreeCount,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      sort_order = #{record.sortOrder,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.sc.scCommittee.ScCommitteeVote">
    update sc_committee_vote
    <set>
      <if test="topicId != null">
        topic_id = #{topicId,jdbcType=INTEGER},
      </if>
      <if test="cadreId != null">
        cadre_id = #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="unitPostId != null">
        unit_post_id = #{unitPostId,jdbcType=INTEGER},
      </if>
      <if test="cadreTypeId != null">
        cadre_type_id = #{cadreTypeId,jdbcType=INTEGER},
      </if>
      <if test="wayId != null">
        way_id = #{wayId,jdbcType=INTEGER},
      </if>
      <if test="procedureId != null">
        procedure_id = #{procedureId,jdbcType=INTEGER},
      </if>
      <if test="post != null">
        post = #{post,jdbcType=VARCHAR},
      </if>
      <if test="postType != null">
        post_type = #{postType,jdbcType=INTEGER},
      </if>
      <if test="adminLevel != null">
        admin_level = #{adminLevel,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="agreeCount != null">
        agree_count = #{agreeCount,jdbcType=INTEGER},
      </if>
      <if test="abstainCount != null">
        abstain_count = #{abstainCount,jdbcType=INTEGER},
      </if>
      <if test="disagreeCount != null">
        disagree_count = #{disagreeCount,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.sc.scCommittee.ScCommitteeVote">
    update sc_committee_vote
    set topic_id = #{topicId,jdbcType=INTEGER},
      cadre_id = #{cadreId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      unit_post_id = #{unitPostId,jdbcType=INTEGER},
      cadre_type_id = #{cadreTypeId,jdbcType=INTEGER},
      way_id = #{wayId,jdbcType=INTEGER},
      procedure_id = #{procedureId,jdbcType=INTEGER},
      post = #{post,jdbcType=VARCHAR},
      post_type = #{postType,jdbcType=INTEGER},
      admin_level = #{adminLevel,jdbcType=INTEGER},
      unit_id = #{unitId,jdbcType=INTEGER},
      agree_count = #{agreeCount,jdbcType=INTEGER},
      abstain_count = #{abstainCount,jdbcType=INTEGER},
      disagree_count = #{disagreeCount,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      sort_order = #{sortOrder,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.sc.scCommittee.ScCommitteeVoteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sc_committee_vote
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>