<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.cr.CrApplicantMapper">
  <resultMap id="BaseResultMap" type="domain.cr.CrApplicant">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="info_id" jdbcType="INTEGER" property="infoId" />
    <result column="first_post_id" jdbcType="INTEGER" property="firstPostId" />
    <result column="second_post_id" jdbcType="INTEGER" property="secondPostId" />
    <result column="eva" jdbcType="VARCHAR" property="eva" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="enroll_time" jdbcType="TIMESTAMP" property="enrollTime" />
    <result column="first_check_status" jdbcType="TINYINT" property="firstCheckStatus" />
    <result column="first_check_remark" jdbcType="VARCHAR" property="firstCheckRemark" />
    <result column="second_check_status" jdbcType="TINYINT" property="secondCheckStatus" />
    <result column="second_check_remark" jdbcType="VARCHAR" property="secondCheckRemark" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="has_submit" jdbcType="BIT" property="hasSubmit" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, user_id, info_id, first_post_id, second_post_id, eva, reason, enroll_time, first_check_status, 
    first_check_remark, second_check_status, second_check_remark, sort_order, has_submit
  </sql>
  <select id="selectByExample" parameterType="domain.cr.CrApplicantExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cr_applicant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cr_applicant
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cr_applicant
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cr.CrApplicantExample">
    delete from cr_applicant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cr.CrApplicant">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cr_applicant (user_id, info_id, first_post_id, 
      second_post_id, eva, reason, 
      enroll_time, first_check_status, first_check_remark, 
      second_check_status, second_check_remark, sort_order, 
      has_submit)
    values (#{userId,jdbcType=INTEGER}, #{infoId,jdbcType=INTEGER}, #{firstPostId,jdbcType=INTEGER}, 
      #{secondPostId,jdbcType=INTEGER}, #{eva,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{enrollTime,jdbcType=TIMESTAMP}, #{firstCheckStatus,jdbcType=TINYINT}, #{firstCheckRemark,jdbcType=VARCHAR}, 
      #{secondCheckStatus,jdbcType=TINYINT}, #{secondCheckRemark,jdbcType=VARCHAR}, #{sortOrder,jdbcType=INTEGER}, 
      #{hasSubmit,jdbcType=BIT})
  </insert>
  <insert id="insertSelective" parameterType="domain.cr.CrApplicant">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cr_applicant
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="infoId != null">
        info_id,
      </if>
      <if test="firstPostId != null">
        first_post_id,
      </if>
      <if test="secondPostId != null">
        second_post_id,
      </if>
      <if test="eva != null">
        eva,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="enrollTime != null">
        enroll_time,
      </if>
      <if test="firstCheckStatus != null">
        first_check_status,
      </if>
      <if test="firstCheckRemark != null">
        first_check_remark,
      </if>
      <if test="secondCheckStatus != null">
        second_check_status,
      </if>
      <if test="secondCheckRemark != null">
        second_check_remark,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="hasSubmit != null">
        has_submit,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="infoId != null">
        #{infoId,jdbcType=INTEGER},
      </if>
      <if test="firstPostId != null">
        #{firstPostId,jdbcType=INTEGER},
      </if>
      <if test="secondPostId != null">
        #{secondPostId,jdbcType=INTEGER},
      </if>
      <if test="eva != null">
        #{eva,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="enrollTime != null">
        #{enrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="firstCheckStatus != null">
        #{firstCheckStatus,jdbcType=TINYINT},
      </if>
      <if test="firstCheckRemark != null">
        #{firstCheckRemark,jdbcType=VARCHAR},
      </if>
      <if test="secondCheckStatus != null">
        #{secondCheckStatus,jdbcType=TINYINT},
      </if>
      <if test="secondCheckRemark != null">
        #{secondCheckRemark,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="hasSubmit != null">
        #{hasSubmit,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cr.CrApplicantExample" resultType="java.lang.Long">
    select count(*) from cr_applicant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cr_applicant
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.infoId != null">
        info_id = #{record.infoId,jdbcType=INTEGER},
      </if>
      <if test="record.firstPostId != null">
        first_post_id = #{record.firstPostId,jdbcType=INTEGER},
      </if>
      <if test="record.secondPostId != null">
        second_post_id = #{record.secondPostId,jdbcType=INTEGER},
      </if>
      <if test="record.eva != null">
        eva = #{record.eva,jdbcType=VARCHAR},
      </if>
      <if test="record.reason != null">
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.enrollTime != null">
        enroll_time = #{record.enrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.firstCheckStatus != null">
        first_check_status = #{record.firstCheckStatus,jdbcType=TINYINT},
      </if>
      <if test="record.firstCheckRemark != null">
        first_check_remark = #{record.firstCheckRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.secondCheckStatus != null">
        second_check_status = #{record.secondCheckStatus,jdbcType=TINYINT},
      </if>
      <if test="record.secondCheckRemark != null">
        second_check_remark = #{record.secondCheckRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.hasSubmit != null">
        has_submit = #{record.hasSubmit,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cr_applicant
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      info_id = #{record.infoId,jdbcType=INTEGER},
      first_post_id = #{record.firstPostId,jdbcType=INTEGER},
      second_post_id = #{record.secondPostId,jdbcType=INTEGER},
      eva = #{record.eva,jdbcType=VARCHAR},
      reason = #{record.reason,jdbcType=VARCHAR},
      enroll_time = #{record.enrollTime,jdbcType=TIMESTAMP},
      first_check_status = #{record.firstCheckStatus,jdbcType=TINYINT},
      first_check_remark = #{record.firstCheckRemark,jdbcType=VARCHAR},
      second_check_status = #{record.secondCheckStatus,jdbcType=TINYINT},
      second_check_remark = #{record.secondCheckRemark,jdbcType=VARCHAR},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      has_submit = #{record.hasSubmit,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cr.CrApplicant">
    update cr_applicant
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="infoId != null">
        info_id = #{infoId,jdbcType=INTEGER},
      </if>
      <if test="firstPostId != null">
        first_post_id = #{firstPostId,jdbcType=INTEGER},
      </if>
      <if test="secondPostId != null">
        second_post_id = #{secondPostId,jdbcType=INTEGER},
      </if>
      <if test="eva != null">
        eva = #{eva,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="enrollTime != null">
        enroll_time = #{enrollTime,jdbcType=TIMESTAMP},
      </if>
      <if test="firstCheckStatus != null">
        first_check_status = #{firstCheckStatus,jdbcType=TINYINT},
      </if>
      <if test="firstCheckRemark != null">
        first_check_remark = #{firstCheckRemark,jdbcType=VARCHAR},
      </if>
      <if test="secondCheckStatus != null">
        second_check_status = #{secondCheckStatus,jdbcType=TINYINT},
      </if>
      <if test="secondCheckRemark != null">
        second_check_remark = #{secondCheckRemark,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="hasSubmit != null">
        has_submit = #{hasSubmit,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cr.CrApplicant">
    update cr_applicant
    set user_id = #{userId,jdbcType=INTEGER},
      info_id = #{infoId,jdbcType=INTEGER},
      first_post_id = #{firstPostId,jdbcType=INTEGER},
      second_post_id = #{secondPostId,jdbcType=INTEGER},
      eva = #{eva,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      enroll_time = #{enrollTime,jdbcType=TIMESTAMP},
      first_check_status = #{firstCheckStatus,jdbcType=TINYINT},
      first_check_remark = #{firstCheckRemark,jdbcType=VARCHAR},
      second_check_status = #{secondCheckStatus,jdbcType=TINYINT},
      second_check_remark = #{secondCheckRemark,jdbcType=VARCHAR},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      has_submit = #{hasSubmit,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.cr.CrApplicantExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cr_applicant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>