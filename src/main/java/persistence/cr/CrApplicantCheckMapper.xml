<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.cr.CrApplicantCheckMapper">
  <resultMap id="BaseResultMap" type="domain.cr.CrApplicantCheck">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="is_first_post" jdbcType="BIT" property="isFirstPost" />
    <result column="applicant_id" jdbcType="INTEGER" property="applicantId" />
    <result column="require_rule_id" jdbcType="INTEGER" property="requireRuleId" />
    <result column="pass" jdbcType="BIT" property="pass" />
    <result column="check_time" jdbcType="TIMESTAMP" property="checkTime" />
    <result column="check_user_id" jdbcType="INTEGER" property="checkUserId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, is_first_post, applicant_id, require_rule_id, pass, check_time, check_user_id, 
    remark
  </sql>
  <select id="selectByExample" parameterType="domain.cr.CrApplicantCheckExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cr_applicant_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cr_applicant_check
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cr_applicant_check
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cr.CrApplicantCheckExample">
    delete from cr_applicant_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cr.CrApplicantCheck">
    insert into cr_applicant_check (id, is_first_post, applicant_id, 
      require_rule_id, pass, check_time, 
      check_user_id, remark)
    values (#{id,jdbcType=INTEGER}, #{isFirstPost,jdbcType=BIT}, #{applicantId,jdbcType=INTEGER}, 
      #{requireRuleId,jdbcType=INTEGER}, #{pass,jdbcType=BIT}, #{checkTime,jdbcType=TIMESTAMP}, 
      #{checkUserId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.cr.CrApplicantCheck">
    insert into cr_applicant_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="isFirstPost != null">
        is_first_post,
      </if>
      <if test="applicantId != null">
        applicant_id,
      </if>
      <if test="requireRuleId != null">
        require_rule_id,
      </if>
      <if test="pass != null">
        pass,
      </if>
      <if test="checkTime != null">
        check_time,
      </if>
      <if test="checkUserId != null">
        check_user_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="isFirstPost != null">
        #{isFirstPost,jdbcType=BIT},
      </if>
      <if test="applicantId != null">
        #{applicantId,jdbcType=INTEGER},
      </if>
      <if test="requireRuleId != null">
        #{requireRuleId,jdbcType=INTEGER},
      </if>
      <if test="pass != null">
        #{pass,jdbcType=BIT},
      </if>
      <if test="checkTime != null">
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUserId != null">
        #{checkUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cr.CrApplicantCheckExample" resultType="java.lang.Long">
    select count(*) from cr_applicant_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cr_applicant_check
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.isFirstPost != null">
        is_first_post = #{record.isFirstPost,jdbcType=BIT},
      </if>
      <if test="record.applicantId != null">
        applicant_id = #{record.applicantId,jdbcType=INTEGER},
      </if>
      <if test="record.requireRuleId != null">
        require_rule_id = #{record.requireRuleId,jdbcType=INTEGER},
      </if>
      <if test="record.pass != null">
        pass = #{record.pass,jdbcType=BIT},
      </if>
      <if test="record.checkTime != null">
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkUserId != null">
        check_user_id = #{record.checkUserId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cr_applicant_check
    set id = #{record.id,jdbcType=INTEGER},
      is_first_post = #{record.isFirstPost,jdbcType=BIT},
      applicant_id = #{record.applicantId,jdbcType=INTEGER},
      require_rule_id = #{record.requireRuleId,jdbcType=INTEGER},
      pass = #{record.pass,jdbcType=BIT},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      check_user_id = #{record.checkUserId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cr.CrApplicantCheck">
    update cr_applicant_check
    <set>
      <if test="isFirstPost != null">
        is_first_post = #{isFirstPost,jdbcType=BIT},
      </if>
      <if test="applicantId != null">
        applicant_id = #{applicantId,jdbcType=INTEGER},
      </if>
      <if test="requireRuleId != null">
        require_rule_id = #{requireRuleId,jdbcType=INTEGER},
      </if>
      <if test="pass != null">
        pass = #{pass,jdbcType=BIT},
      </if>
      <if test="checkTime != null">
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkUserId != null">
        check_user_id = #{checkUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cr.CrApplicantCheck">
    update cr_applicant_check
    set is_first_post = #{isFirstPost,jdbcType=BIT},
      applicant_id = #{applicantId,jdbcType=INTEGER},
      require_rule_id = #{requireRuleId,jdbcType=INTEGER},
      pass = #{pass,jdbcType=BIT},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      check_user_id = #{checkUserId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.cr.CrApplicantCheckExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cr_applicant_check
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>