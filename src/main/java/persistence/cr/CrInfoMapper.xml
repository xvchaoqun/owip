<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.cr.CrInfoMapper">
  <resultMap id="BaseResultMap" type="domain.cr.CrInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="add_date" jdbcType="DATE" property="addDate" />
    <result column="notice" jdbcType="VARCHAR" property="notice" />
    <result column="post_num" jdbcType="INTEGER" property="postNum" />
    <result column="require_num" jdbcType="INTEGER" property="requireNum" />
    <result column="apply_num" jdbcType="INTEGER" property="applyNum" />
    <result column="meeting_num" jdbcType="INTEGER" property="meetingNum" />
    <result column="requirement" jdbcType="VARCHAR" property="requirement" />
    <result column="qualification" jdbcType="VARCHAR" property="qualification" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, name, add_date, notice, post_num, require_num, apply_num, meeting_num, 
    requirement, qualification, start_time, end_time, create_time, status, remark
  </sql>
  <select id="selectByExample" parameterType="domain.cr.CrInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cr_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cr_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from cr_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.cr.CrInfoExample">
    delete from cr_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.cr.CrInfo">
    insert into cr_info (id, year, name, 
      add_date, notice, post_num, 
      require_num, apply_num, meeting_num, 
      requirement, qualification, start_time, 
      end_time, create_time, status, 
      remark)
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{addDate,jdbcType=DATE}, #{notice,jdbcType=VARCHAR}, #{postNum,jdbcType=INTEGER}, 
      #{requireNum,jdbcType=INTEGER}, #{applyNum,jdbcType=INTEGER}, #{meetingNum,jdbcType=INTEGER}, 
      #{requirement,jdbcType=VARCHAR}, #{qualification,jdbcType=VARCHAR}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}, 
      #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.cr.CrInfo">
    insert into cr_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="addDate != null">
        add_date,
      </if>
      <if test="notice != null">
        notice,
      </if>
      <if test="postNum != null">
        post_num,
      </if>
      <if test="requireNum != null">
        require_num,
      </if>
      <if test="applyNum != null">
        apply_num,
      </if>
      <if test="meetingNum != null">
        meeting_num,
      </if>
      <if test="requirement != null">
        requirement,
      </if>
      <if test="qualification != null">
        qualification,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="addDate != null">
        #{addDate,jdbcType=DATE},
      </if>
      <if test="notice != null">
        #{notice,jdbcType=VARCHAR},
      </if>
      <if test="postNum != null">
        #{postNum,jdbcType=INTEGER},
      </if>
      <if test="requireNum != null">
        #{requireNum,jdbcType=INTEGER},
      </if>
      <if test="applyNum != null">
        #{applyNum,jdbcType=INTEGER},
      </if>
      <if test="meetingNum != null">
        #{meetingNum,jdbcType=INTEGER},
      </if>
      <if test="requirement != null">
        #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="qualification != null">
        #{qualification,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.cr.CrInfoExample" resultType="java.lang.Long">
    select count(*) from cr_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cr_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.addDate != null">
        add_date = #{record.addDate,jdbcType=DATE},
      </if>
      <if test="record.notice != null">
        notice = #{record.notice,jdbcType=VARCHAR},
      </if>
      <if test="record.postNum != null">
        post_num = #{record.postNum,jdbcType=INTEGER},
      </if>
      <if test="record.requireNum != null">
        require_num = #{record.requireNum,jdbcType=INTEGER},
      </if>
      <if test="record.applyNum != null">
        apply_num = #{record.applyNum,jdbcType=INTEGER},
      </if>
      <if test="record.meetingNum != null">
        meeting_num = #{record.meetingNum,jdbcType=INTEGER},
      </if>
      <if test="record.requirement != null">
        requirement = #{record.requirement,jdbcType=VARCHAR},
      </if>
      <if test="record.qualification != null">
        qualification = #{record.qualification,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cr_info
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      add_date = #{record.addDate,jdbcType=DATE},
      notice = #{record.notice,jdbcType=VARCHAR},
      post_num = #{record.postNum,jdbcType=INTEGER},
      require_num = #{record.requireNum,jdbcType=INTEGER},
      apply_num = #{record.applyNum,jdbcType=INTEGER},
      meeting_num = #{record.meetingNum,jdbcType=INTEGER},
      requirement = #{record.requirement,jdbcType=VARCHAR},
      qualification = #{record.qualification,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=TINYINT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.cr.CrInfo">
    update cr_info
    <set>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="addDate != null">
        add_date = #{addDate,jdbcType=DATE},
      </if>
      <if test="notice != null">
        notice = #{notice,jdbcType=VARCHAR},
      </if>
      <if test="postNum != null">
        post_num = #{postNum,jdbcType=INTEGER},
      </if>
      <if test="requireNum != null">
        require_num = #{requireNum,jdbcType=INTEGER},
      </if>
      <if test="applyNum != null">
        apply_num = #{applyNum,jdbcType=INTEGER},
      </if>
      <if test="meetingNum != null">
        meeting_num = #{meetingNum,jdbcType=INTEGER},
      </if>
      <if test="requirement != null">
        requirement = #{requirement,jdbcType=VARCHAR},
      </if>
      <if test="qualification != null">
        qualification = #{qualification,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.cr.CrInfo">
    update cr_info
    set year = #{year,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      add_date = #{addDate,jdbcType=DATE},
      notice = #{notice,jdbcType=VARCHAR},
      post_num = #{postNum,jdbcType=INTEGER},
      require_num = #{requireNum,jdbcType=INTEGER},
      apply_num = #{applyNum,jdbcType=INTEGER},
      meeting_num = #{meetingNum,jdbcType=INTEGER},
      requirement = #{requirement,jdbcType=VARCHAR},
      qualification = #{qualification,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.cr.CrInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cr_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>