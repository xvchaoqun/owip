<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pcs.PcsConfigMapper">
  <resultMap id="BaseResultMap" type="domain.pcs.PcsConfig">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="is_current" jdbcType="BIT" property="isCurrent" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="proposal_submit_time" jdbcType="TIMESTAMP" property="proposalSubmitTime" />
    <result column="proposal_support_time" jdbcType="TIMESTAMP" property="proposalSupportTime" />
    <result column="proposal_support_count" jdbcType="INTEGER" property="proposalSupportCount" />
    <result column="committee_join_count" jdbcType="INTEGER" property="committeeJoinCount" />
    <result column="dw_send_vote" jdbcType="INTEGER" property="dwSendVote" />
    <result column="jw_send_vote" jdbcType="INTEGER" property="jwSendVote" />
    <result column="dw_back_vote" jdbcType="INTEGER" property="dwBackVote" />
    <result column="jw_back_vote" jdbcType="INTEGER" property="jwBackVote" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, is_current, create_time, remark, proposal_submit_time, proposal_support_time, 
    proposal_support_count, committee_join_count, dw_send_vote, jw_send_vote, dw_back_vote, 
    jw_back_vote, is_deleted
  </sql>
  <select id="selectByExample" parameterType="domain.pcs.PcsConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pcs_config
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pcs_config
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.pcs.PcsConfigExample">
    delete from pcs_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pcs.PcsConfig">
    insert into pcs_config (id, name, is_current, 
      create_time, remark, proposal_submit_time, 
      proposal_support_time, proposal_support_count, 
      committee_join_count, dw_send_vote, jw_send_vote, 
      dw_back_vote, jw_back_vote, is_deleted
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{isCurrent,jdbcType=BIT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{proposalSubmitTime,jdbcType=TIMESTAMP}, 
      #{proposalSupportTime,jdbcType=TIMESTAMP}, #{proposalSupportCount,jdbcType=INTEGER}, 
      #{committeeJoinCount,jdbcType=INTEGER}, #{dwSendVote,jdbcType=INTEGER}, #{jwSendVote,jdbcType=INTEGER}, 
      #{dwBackVote,jdbcType=INTEGER}, #{jwBackVote,jdbcType=INTEGER}, #{isDeleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.pcs.PcsConfig">
    insert into pcs_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="isCurrent != null">
        is_current,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="proposalSubmitTime != null">
        proposal_submit_time,
      </if>
      <if test="proposalSupportTime != null">
        proposal_support_time,
      </if>
      <if test="proposalSupportCount != null">
        proposal_support_count,
      </if>
      <if test="committeeJoinCount != null">
        committee_join_count,
      </if>
      <if test="dwSendVote != null">
        dw_send_vote,
      </if>
      <if test="jwSendVote != null">
        jw_send_vote,
      </if>
      <if test="dwBackVote != null">
        dw_back_vote,
      </if>
      <if test="jwBackVote != null">
        jw_back_vote,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="isCurrent != null">
        #{isCurrent,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="proposalSubmitTime != null">
        #{proposalSubmitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="proposalSupportTime != null">
        #{proposalSupportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="proposalSupportCount != null">
        #{proposalSupportCount,jdbcType=INTEGER},
      </if>
      <if test="committeeJoinCount != null">
        #{committeeJoinCount,jdbcType=INTEGER},
      </if>
      <if test="dwSendVote != null">
        #{dwSendVote,jdbcType=INTEGER},
      </if>
      <if test="jwSendVote != null">
        #{jwSendVote,jdbcType=INTEGER},
      </if>
      <if test="dwBackVote != null">
        #{dwBackVote,jdbcType=INTEGER},
      </if>
      <if test="jwBackVote != null">
        #{jwBackVote,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pcs.PcsConfigExample" resultType="java.lang.Long">
    select count(*) from pcs_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pcs_config
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.isCurrent != null">
        is_current = #{record.isCurrent,jdbcType=BIT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.proposalSubmitTime != null">
        proposal_submit_time = #{record.proposalSubmitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.proposalSupportTime != null">
        proposal_support_time = #{record.proposalSupportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.proposalSupportCount != null">
        proposal_support_count = #{record.proposalSupportCount,jdbcType=INTEGER},
      </if>
      <if test="record.committeeJoinCount != null">
        committee_join_count = #{record.committeeJoinCount,jdbcType=INTEGER},
      </if>
      <if test="record.dwSendVote != null">
        dw_send_vote = #{record.dwSendVote,jdbcType=INTEGER},
      </if>
      <if test="record.jwSendVote != null">
        jw_send_vote = #{record.jwSendVote,jdbcType=INTEGER},
      </if>
      <if test="record.dwBackVote != null">
        dw_back_vote = #{record.dwBackVote,jdbcType=INTEGER},
      </if>
      <if test="record.jwBackVote != null">
        jw_back_vote = #{record.jwBackVote,jdbcType=INTEGER},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pcs_config
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      is_current = #{record.isCurrent,jdbcType=BIT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      proposal_submit_time = #{record.proposalSubmitTime,jdbcType=TIMESTAMP},
      proposal_support_time = #{record.proposalSupportTime,jdbcType=TIMESTAMP},
      proposal_support_count = #{record.proposalSupportCount,jdbcType=INTEGER},
      committee_join_count = #{record.committeeJoinCount,jdbcType=INTEGER},
      dw_send_vote = #{record.dwSendVote,jdbcType=INTEGER},
      jw_send_vote = #{record.jwSendVote,jdbcType=INTEGER},
      dw_back_vote = #{record.dwBackVote,jdbcType=INTEGER},
      jw_back_vote = #{record.jwBackVote,jdbcType=INTEGER},
      is_deleted = #{record.isDeleted,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.pcs.PcsConfig">
    update pcs_config
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="isCurrent != null">
        is_current = #{isCurrent,jdbcType=BIT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="proposalSubmitTime != null">
        proposal_submit_time = #{proposalSubmitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="proposalSupportTime != null">
        proposal_support_time = #{proposalSupportTime,jdbcType=TIMESTAMP},
      </if>
      <if test="proposalSupportCount != null">
        proposal_support_count = #{proposalSupportCount,jdbcType=INTEGER},
      </if>
      <if test="committeeJoinCount != null">
        committee_join_count = #{committeeJoinCount,jdbcType=INTEGER},
      </if>
      <if test="dwSendVote != null">
        dw_send_vote = #{dwSendVote,jdbcType=INTEGER},
      </if>
      <if test="jwSendVote != null">
        jw_send_vote = #{jwSendVote,jdbcType=INTEGER},
      </if>
      <if test="dwBackVote != null">
        dw_back_vote = #{dwBackVote,jdbcType=INTEGER},
      </if>
      <if test="jwBackVote != null">
        jw_back_vote = #{jwBackVote,jdbcType=INTEGER},
      </if>
      <if test="isDeleted != null">
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.pcs.PcsConfig">
    update pcs_config
    set name = #{name,jdbcType=VARCHAR},
      is_current = #{isCurrent,jdbcType=BIT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      proposal_submit_time = #{proposalSubmitTime,jdbcType=TIMESTAMP},
      proposal_support_time = #{proposalSupportTime,jdbcType=TIMESTAMP},
      proposal_support_count = #{proposalSupportCount,jdbcType=INTEGER},
      committee_join_count = #{committeeJoinCount,jdbcType=INTEGER},
      dw_send_vote = #{dwSendVote,jdbcType=INTEGER},
      jw_send_vote = #{jwSendVote,jdbcType=INTEGER},
      dw_back_vote = #{dwBackVote,jdbcType=INTEGER},
      jw_back_vote = #{jwBackVote,jdbcType=INTEGER},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pcs.PcsConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>