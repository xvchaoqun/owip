<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pcs.PcsCandidateMapper">
  <resultMap id="BaseResultMap" type="domain.pcs.PcsCandidate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="recommend_id" jdbcType="INTEGER" property="recommendId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="vote" jdbcType="INTEGER" property="vote" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="cadre_sort_order" jdbcType="INTEGER" property="cadreSortOrder" />
    <result column="cadre_status" jdbcType="TINYINT" property="cadreStatus" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="native_place" jdbcType="VARCHAR" property="nativePlace" />
    <result column="ext_unit" jdbcType="VARCHAR" property="extUnit" />
    <result column="grow_time" jdbcType="DATE" property="growTime" />
    <result column="work_time" jdbcType="DATE" property="workTime" />
    <result column="pro_post" jdbcType="VARCHAR" property="proPost" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="config_id" jdbcType="INTEGER" property="configId" />
    <result column="stage" jdbcType="TINYINT" property="stage" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="is_from_stage" jdbcType="BIT" property="isFromStage" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, recommend_id, user_id, type, vote, code, realname, birth, title, cadre_sort_order, 
    cadre_status, gender, nation, native_place, ext_unit, grow_time, work_time, pro_post, 
    party_id, branch_id, config_id, stage, sort_order, is_from_stage, add_time
  </sql>
  <select id="selectByExample" parameterType="domain.pcs.PcsCandidateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_candidate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pcs_candidate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pcs_candidate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.pcs.PcsCandidateExample">
    delete from pcs_candidate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pcs.PcsCandidate">
    insert into pcs_candidate (id, recommend_id, user_id, 
      type, vote, code, realname, 
      birth, title, cadre_sort_order, 
      cadre_status, gender, nation, 
      native_place, ext_unit, grow_time, 
      work_time, pro_post, party_id, 
      branch_id, config_id, stage, 
      sort_order, is_from_stage, add_time
      )
    values (#{id,jdbcType=INTEGER}, #{recommendId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{type,jdbcType=TINYINT}, #{vote,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{birth,jdbcType=DATE}, #{title,jdbcType=VARCHAR}, #{cadreSortOrder,jdbcType=INTEGER}, 
      #{cadreStatus,jdbcType=TINYINT}, #{gender,jdbcType=TINYINT}, #{nation,jdbcType=VARCHAR}, 
      #{nativePlace,jdbcType=VARCHAR}, #{extUnit,jdbcType=VARCHAR}, #{growTime,jdbcType=DATE}, 
      #{workTime,jdbcType=DATE}, #{proPost,jdbcType=VARCHAR}, #{partyId,jdbcType=INTEGER}, 
      #{branchId,jdbcType=INTEGER}, #{configId,jdbcType=INTEGER}, #{stage,jdbcType=TINYINT}, 
      #{sortOrder,jdbcType=INTEGER}, #{isFromStage,jdbcType=BIT}, #{addTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.pcs.PcsCandidate">
    insert into pcs_candidate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recommendId != null">
        recommend_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="vote != null">
        vote,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="cadreSortOrder != null">
        cadre_sort_order,
      </if>
      <if test="cadreStatus != null">
        cadre_status,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="nativePlace != null">
        native_place,
      </if>
      <if test="extUnit != null">
        ext_unit,
      </if>
      <if test="growTime != null">
        grow_time,
      </if>
      <if test="workTime != null">
        work_time,
      </if>
      <if test="proPost != null">
        pro_post,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="configId != null">
        config_id,
      </if>
      <if test="stage != null">
        stage,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="isFromStage != null">
        is_from_stage,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="recommendId != null">
        #{recommendId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="vote != null">
        #{vote,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="cadreSortOrder != null">
        #{cadreSortOrder,jdbcType=INTEGER},
      </if>
      <if test="cadreStatus != null">
        #{cadreStatus,jdbcType=TINYINT},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null">
        #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="extUnit != null">
        #{extUnit,jdbcType=VARCHAR},
      </if>
      <if test="growTime != null">
        #{growTime,jdbcType=DATE},
      </if>
      <if test="workTime != null">
        #{workTime,jdbcType=DATE},
      </if>
      <if test="proPost != null">
        #{proPost,jdbcType=VARCHAR},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="configId != null">
        #{configId,jdbcType=INTEGER},
      </if>
      <if test="stage != null">
        #{stage,jdbcType=TINYINT},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="isFromStage != null">
        #{isFromStage,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pcs.PcsCandidateExample" resultType="java.lang.Long">
    select count(*) from pcs_candidate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pcs_candidate
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.recommendId != null">
        recommend_id = #{record.recommendId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.vote != null">
        vote = #{record.vote,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.cadreSortOrder != null">
        cadre_sort_order = #{record.cadreSortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.cadreStatus != null">
        cadre_status = #{record.cadreStatus,jdbcType=TINYINT},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.nativePlace != null">
        native_place = #{record.nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="record.extUnit != null">
        ext_unit = #{record.extUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.growTime != null">
        grow_time = #{record.growTime,jdbcType=DATE},
      </if>
      <if test="record.workTime != null">
        work_time = #{record.workTime,jdbcType=DATE},
      </if>
      <if test="record.proPost != null">
        pro_post = #{record.proPost,jdbcType=VARCHAR},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.configId != null">
        config_id = #{record.configId,jdbcType=INTEGER},
      </if>
      <if test="record.stage != null">
        stage = #{record.stage,jdbcType=TINYINT},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.isFromStage != null">
        is_from_stage = #{record.isFromStage,jdbcType=BIT},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pcs_candidate
    set id = #{record.id,jdbcType=INTEGER},
      recommend_id = #{record.recommendId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      vote = #{record.vote,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      birth = #{record.birth,jdbcType=DATE},
      title = #{record.title,jdbcType=VARCHAR},
      cadre_sort_order = #{record.cadreSortOrder,jdbcType=INTEGER},
      cadre_status = #{record.cadreStatus,jdbcType=TINYINT},
      gender = #{record.gender,jdbcType=TINYINT},
      nation = #{record.nation,jdbcType=VARCHAR},
      native_place = #{record.nativePlace,jdbcType=VARCHAR},
      ext_unit = #{record.extUnit,jdbcType=VARCHAR},
      grow_time = #{record.growTime,jdbcType=DATE},
      work_time = #{record.workTime,jdbcType=DATE},
      pro_post = #{record.proPost,jdbcType=VARCHAR},
      party_id = #{record.partyId,jdbcType=INTEGER},
      branch_id = #{record.branchId,jdbcType=INTEGER},
      config_id = #{record.configId,jdbcType=INTEGER},
      stage = #{record.stage,jdbcType=TINYINT},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      is_from_stage = #{record.isFromStage,jdbcType=BIT},
      add_time = #{record.addTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.pcs.PcsCandidate">
    update pcs_candidate
    <set>
      <if test="recommendId != null">
        recommend_id = #{recommendId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="vote != null">
        vote = #{vote,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="cadreSortOrder != null">
        cadre_sort_order = #{cadreSortOrder,jdbcType=INTEGER},
      </if>
      <if test="cadreStatus != null">
        cadre_status = #{cadreStatus,jdbcType=TINYINT},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="nativePlace != null">
        native_place = #{nativePlace,jdbcType=VARCHAR},
      </if>
      <if test="extUnit != null">
        ext_unit = #{extUnit,jdbcType=VARCHAR},
      </if>
      <if test="growTime != null">
        grow_time = #{growTime,jdbcType=DATE},
      </if>
      <if test="workTime != null">
        work_time = #{workTime,jdbcType=DATE},
      </if>
      <if test="proPost != null">
        pro_post = #{proPost,jdbcType=VARCHAR},
      </if>
      <if test="partyId != null">
        party_id = #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        branch_id = #{branchId,jdbcType=INTEGER},
      </if>
      <if test="configId != null">
        config_id = #{configId,jdbcType=INTEGER},
      </if>
      <if test="stage != null">
        stage = #{stage,jdbcType=TINYINT},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="isFromStage != null">
        is_from_stage = #{isFromStage,jdbcType=BIT},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.pcs.PcsCandidate">
    update pcs_candidate
    set recommend_id = #{recommendId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      vote = #{vote,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=DATE},
      title = #{title,jdbcType=VARCHAR},
      cadre_sort_order = #{cadreSortOrder,jdbcType=INTEGER},
      cadre_status = #{cadreStatus,jdbcType=TINYINT},
      gender = #{gender,jdbcType=TINYINT},
      nation = #{nation,jdbcType=VARCHAR},
      native_place = #{nativePlace,jdbcType=VARCHAR},
      ext_unit = #{extUnit,jdbcType=VARCHAR},
      grow_time = #{growTime,jdbcType=DATE},
      work_time = #{workTime,jdbcType=DATE},
      pro_post = #{proPost,jdbcType=VARCHAR},
      party_id = #{partyId,jdbcType=INTEGER},
      branch_id = #{branchId,jdbcType=INTEGER},
      config_id = #{configId,jdbcType=INTEGER},
      stage = #{stage,jdbcType=TINYINT},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      is_from_stage = #{isFromStage,jdbcType=BIT},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pcs.PcsCandidateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_candidate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>