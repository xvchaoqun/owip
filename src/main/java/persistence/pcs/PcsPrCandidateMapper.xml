<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pcs.PcsPrCandidateMapper">
  <resultMap id="BaseResultMap" type="domain.pcs.PcsPrCandidate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="recommend_id" jdbcType="INTEGER" property="recommendId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="vote" jdbcType="INTEGER" property="vote" />
    <result column="vote3" jdbcType="INTEGER" property="vote3" />
    <result column="is_chosen" jdbcType="BIT" property="isChosen" />
    <result column="is_from_stage" jdbcType="BIT" property="isFromStage" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="realname_sort_order" jdbcType="INTEGER" property="realnameSortOrder" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, recommend_id, user_id, type, gender, birth, nation, mobile, email, vote, vote3, 
    is_chosen, is_from_stage, sort_order, realname_sort_order, add_time
  </sql>
  <select id="selectByExample" parameterType="domain.pcs.PcsPrCandidateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_pr_candidate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pcs_pr_candidate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pcs_pr_candidate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.pcs.PcsPrCandidateExample">
    delete from pcs_pr_candidate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pcs.PcsPrCandidate">
    insert into pcs_pr_candidate (id, recommend_id, user_id, 
      type, gender, birth, nation, 
      mobile, email, vote, 
      vote3, is_chosen, is_from_stage, 
      sort_order, realname_sort_order, add_time
      )
    values (#{id,jdbcType=INTEGER}, #{recommendId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{type,jdbcType=TINYINT}, #{gender,jdbcType=TINYINT}, #{birth,jdbcType=DATE}, #{nation,jdbcType=VARCHAR}, 
      #{mobile,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{vote,jdbcType=INTEGER}, 
      #{vote3,jdbcType=INTEGER}, #{isChosen,jdbcType=BIT}, #{isFromStage,jdbcType=BIT}, 
      #{sortOrder,jdbcType=INTEGER}, #{realnameSortOrder,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.pcs.PcsPrCandidate">
    insert into pcs_pr_candidate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recommendId != null">
        recommend_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="vote != null">
        vote,
      </if>
      <if test="vote3 != null">
        vote3,
      </if>
      <if test="isChosen != null">
        is_chosen,
      </if>
      <if test="isFromStage != null">
        is_from_stage,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="realnameSortOrder != null">
        realname_sort_order,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="recommendId != null">
        #{recommendId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="vote != null">
        #{vote,jdbcType=INTEGER},
      </if>
      <if test="vote3 != null">
        #{vote3,jdbcType=INTEGER},
      </if>
      <if test="isChosen != null">
        #{isChosen,jdbcType=BIT},
      </if>
      <if test="isFromStage != null">
        #{isFromStage,jdbcType=BIT},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="realnameSortOrder != null">
        #{realnameSortOrder,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pcs.PcsPrCandidateExample" resultType="java.lang.Long">
    select count(*) from pcs_pr_candidate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pcs_pr_candidate
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.recommendId != null">
        recommend_id = #{record.recommendId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.vote != null">
        vote = #{record.vote,jdbcType=INTEGER},
      </if>
      <if test="record.vote3 != null">
        vote3 = #{record.vote3,jdbcType=INTEGER},
      </if>
      <if test="record.isChosen != null">
        is_chosen = #{record.isChosen,jdbcType=BIT},
      </if>
      <if test="record.isFromStage != null">
        is_from_stage = #{record.isFromStage,jdbcType=BIT},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.realnameSortOrder != null">
        realname_sort_order = #{record.realnameSortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pcs_pr_candidate
    set id = #{record.id,jdbcType=INTEGER},
      recommend_id = #{record.recommendId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      gender = #{record.gender,jdbcType=TINYINT},
      birth = #{record.birth,jdbcType=DATE},
      nation = #{record.nation,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      vote = #{record.vote,jdbcType=INTEGER},
      vote3 = #{record.vote3,jdbcType=INTEGER},
      is_chosen = #{record.isChosen,jdbcType=BIT},
      is_from_stage = #{record.isFromStage,jdbcType=BIT},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      realname_sort_order = #{record.realnameSortOrder,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.pcs.PcsPrCandidate">
    update pcs_pr_candidate
    <set>
      <if test="recommendId != null">
        recommend_id = #{recommendId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="vote != null">
        vote = #{vote,jdbcType=INTEGER},
      </if>
      <if test="vote3 != null">
        vote3 = #{vote3,jdbcType=INTEGER},
      </if>
      <if test="isChosen != null">
        is_chosen = #{isChosen,jdbcType=BIT},
      </if>
      <if test="isFromStage != null">
        is_from_stage = #{isFromStage,jdbcType=BIT},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="realnameSortOrder != null">
        realname_sort_order = #{realnameSortOrder,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.pcs.PcsPrCandidate">
    update pcs_pr_candidate
    set recommend_id = #{recommendId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      gender = #{gender,jdbcType=TINYINT},
      birth = #{birth,jdbcType=DATE},
      nation = #{nation,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      vote = #{vote,jdbcType=INTEGER},
      vote3 = #{vote3,jdbcType=INTEGER},
      is_chosen = #{isChosen,jdbcType=BIT},
      is_from_stage = #{isFromStage,jdbcType=BIT},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      realname_sort_order = #{realnameSortOrder,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pcs.PcsPrCandidateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_pr_candidate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>