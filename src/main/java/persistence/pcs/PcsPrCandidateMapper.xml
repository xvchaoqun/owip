<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pcs.PcsPrCandidateMapper">
  <resultMap id="BaseResultMap" type="domain.pcs.PcsPrCandidate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="recommend_id" jdbcType="INTEGER" property="recommendId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="leader_sort_order" jdbcType="INTEGER" property="leaderSortOrder" />
    <result column="user_type" jdbcType="TINYINT" property="userType" />
    <result column="edu_id" jdbcType="INTEGER" property="eduId" />
    <result column="post" jdbcType="VARCHAR" property="post" />
    <result column="grow_time" jdbcType="DATE" property="growTime" />
    <result column="work_time" jdbcType="DATE" property="workTime" />
    <result column="pro_post" jdbcType="VARCHAR" property="proPost" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="is_retire" jdbcType="BIT" property="isRetire" />
    <result column="edu_level" jdbcType="VARCHAR" property="eduLevel" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="config_id" jdbcType="INTEGER" property="configId" />
    <result column="stage" jdbcType="TINYINT" property="stage" />
    <result column="party_sort_order" jdbcType="INTEGER" property="partySortOrder" />
    <result column="unit_name" jdbcType="VARCHAR" property="unitName" />
    <result column="branch_vote" jdbcType="INTEGER" property="branchVote" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="nation" jdbcType="VARCHAR" property="nation" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="vote" jdbcType="INTEGER" property="vote" />
    <result column="positive_vote" jdbcType="INTEGER" property="positiveVote" />
    <result column="vote3" jdbcType="INTEGER" property="vote3" />
    <result column="is_chosen" jdbcType="BIT" property="isChosen" />
    <result column="is_proposal" jdbcType="BIT" property="isProposal" />
    <result column="proposal_sort_order" jdbcType="INTEGER" property="proposalSortOrder" />
    <result column="is_from_stage" jdbcType="BIT" property="isFromStage" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="realname_sort_order" jdbcType="INTEGER" property="realnameSortOrder" />
    <result column="add_time" jdbcType="TIMESTAMP" property="addTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, recommend_id, user_id, code, realname, leader_sort_order, user_type, edu_id, 
    post, grow_time, work_time, pro_post, education, degree, is_retire, edu_level, party_id, 
    config_id, stage, party_sort_order, unit_name, branch_vote, type, gender, birth, 
    nation, mobile, email, vote, positive_vote, vote3, is_chosen, is_proposal, proposal_sort_order, 
    is_from_stage, sort_order, realname_sort_order, add_time
  </sql>
  <select id="selectByExample" parameterType="domain.pcs.PcsPrCandidateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_pr_candidate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pcs_pr_candidate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pcs_pr_candidate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.pcs.PcsPrCandidateExample">
    delete from pcs_pr_candidate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pcs.PcsPrCandidate">
    insert into pcs_pr_candidate (id, recommend_id, user_id, 
      code, realname, leader_sort_order, 
      user_type, edu_id, post, 
      grow_time, work_time, pro_post, 
      education, degree, is_retire, 
      edu_level, party_id, config_id, 
      stage, party_sort_order, unit_name, 
      branch_vote, type, gender, 
      birth, nation, mobile, 
      email, vote, positive_vote, 
      vote3, is_chosen, is_proposal, 
      proposal_sort_order, is_from_stage, sort_order, 
      realname_sort_order, add_time)
    values (#{id,jdbcType=INTEGER}, #{recommendId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{code,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, #{leaderSortOrder,jdbcType=INTEGER}, 
      #{userType,jdbcType=TINYINT}, #{eduId,jdbcType=INTEGER}, #{post,jdbcType=VARCHAR}, 
      #{growTime,jdbcType=DATE}, #{workTime,jdbcType=DATE}, #{proPost,jdbcType=VARCHAR}, 
      #{education,jdbcType=VARCHAR}, #{degree,jdbcType=VARCHAR}, #{isRetire,jdbcType=BIT}, 
      #{eduLevel,jdbcType=VARCHAR}, #{partyId,jdbcType=INTEGER}, #{configId,jdbcType=INTEGER}, 
      #{stage,jdbcType=TINYINT}, #{partySortOrder,jdbcType=INTEGER}, #{unitName,jdbcType=VARCHAR}, 
      #{branchVote,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, #{gender,jdbcType=TINYINT}, 
      #{birth,jdbcType=DATE}, #{nation,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{vote,jdbcType=INTEGER}, #{positiveVote,jdbcType=INTEGER}, 
      #{vote3,jdbcType=INTEGER}, #{isChosen,jdbcType=BIT}, #{isProposal,jdbcType=BIT}, 
      #{proposalSortOrder,jdbcType=INTEGER}, #{isFromStage,jdbcType=BIT}, #{sortOrder,jdbcType=INTEGER}, 
      #{realnameSortOrder,jdbcType=INTEGER}, #{addTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="domain.pcs.PcsPrCandidate">
    insert into pcs_pr_candidate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recommendId != null">
        recommend_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="leaderSortOrder != null">
        leader_sort_order,
      </if>
      <if test="userType != null">
        user_type,
      </if>
      <if test="eduId != null">
        edu_id,
      </if>
      <if test="post != null">
        post,
      </if>
      <if test="growTime != null">
        grow_time,
      </if>
      <if test="workTime != null">
        work_time,
      </if>
      <if test="proPost != null">
        pro_post,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="isRetire != null">
        is_retire,
      </if>
      <if test="eduLevel != null">
        edu_level,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="configId != null">
        config_id,
      </if>
      <if test="stage != null">
        stage,
      </if>
      <if test="partySortOrder != null">
        party_sort_order,
      </if>
      <if test="unitName != null">
        unit_name,
      </if>
      <if test="branchVote != null">
        branch_vote,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="birth != null">
        birth,
      </if>
      <if test="nation != null">
        nation,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="vote != null">
        vote,
      </if>
      <if test="positiveVote != null">
        positive_vote,
      </if>
      <if test="vote3 != null">
        vote3,
      </if>
      <if test="isChosen != null">
        is_chosen,
      </if>
      <if test="isProposal != null">
        is_proposal,
      </if>
      <if test="proposalSortOrder != null">
        proposal_sort_order,
      </if>
      <if test="isFromStage != null">
        is_from_stage,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="realnameSortOrder != null">
        realname_sort_order,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="recommendId != null">
        #{recommendId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="leaderSortOrder != null">
        #{leaderSortOrder,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        #{userType,jdbcType=TINYINT},
      </if>
      <if test="eduId != null">
        #{eduId,jdbcType=INTEGER},
      </if>
      <if test="post != null">
        #{post,jdbcType=VARCHAR},
      </if>
      <if test="growTime != null">
        #{growTime,jdbcType=DATE},
      </if>
      <if test="workTime != null">
        #{workTime,jdbcType=DATE},
      </if>
      <if test="proPost != null">
        #{proPost,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="isRetire != null">
        #{isRetire,jdbcType=BIT},
      </if>
      <if test="eduLevel != null">
        #{eduLevel,jdbcType=VARCHAR},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="configId != null">
        #{configId,jdbcType=INTEGER},
      </if>
      <if test="stage != null">
        #{stage,jdbcType=TINYINT},
      </if>
      <if test="partySortOrder != null">
        #{partySortOrder,jdbcType=INTEGER},
      </if>
      <if test="unitName != null">
        #{unitName,jdbcType=VARCHAR},
      </if>
      <if test="branchVote != null">
        #{branchVote,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=TINYINT},
      </if>
      <if test="birth != null">
        #{birth,jdbcType=DATE},
      </if>
      <if test="nation != null">
        #{nation,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="vote != null">
        #{vote,jdbcType=INTEGER},
      </if>
      <if test="positiveVote != null">
        #{positiveVote,jdbcType=INTEGER},
      </if>
      <if test="vote3 != null">
        #{vote3,jdbcType=INTEGER},
      </if>
      <if test="isChosen != null">
        #{isChosen,jdbcType=BIT},
      </if>
      <if test="isProposal != null">
        #{isProposal,jdbcType=BIT},
      </if>
      <if test="proposalSortOrder != null">
        #{proposalSortOrder,jdbcType=INTEGER},
      </if>
      <if test="isFromStage != null">
        #{isFromStage,jdbcType=BIT},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="realnameSortOrder != null">
        #{realnameSortOrder,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pcs.PcsPrCandidateExample" resultType="java.lang.Long">
    select count(*) from pcs_pr_candidate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pcs_pr_candidate
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.recommendId != null">
        recommend_id = #{record.recommendId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.realname != null">
        realname = #{record.realname,jdbcType=VARCHAR},
      </if>
      <if test="record.leaderSortOrder != null">
        leader_sort_order = #{record.leaderSortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.userType != null">
        user_type = #{record.userType,jdbcType=TINYINT},
      </if>
      <if test="record.eduId != null">
        edu_id = #{record.eduId,jdbcType=INTEGER},
      </if>
      <if test="record.post != null">
        post = #{record.post,jdbcType=VARCHAR},
      </if>
      <if test="record.growTime != null">
        grow_time = #{record.growTime,jdbcType=DATE},
      </if>
      <if test="record.workTime != null">
        work_time = #{record.workTime,jdbcType=DATE},
      </if>
      <if test="record.proPost != null">
        pro_post = #{record.proPost,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=VARCHAR},
      </if>
      <if test="record.degree != null">
        degree = #{record.degree,jdbcType=VARCHAR},
      </if>
      <if test="record.isRetire != null">
        is_retire = #{record.isRetire,jdbcType=BIT},
      </if>
      <if test="record.eduLevel != null">
        edu_level = #{record.eduLevel,jdbcType=VARCHAR},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.configId != null">
        config_id = #{record.configId,jdbcType=INTEGER},
      </if>
      <if test="record.stage != null">
        stage = #{record.stage,jdbcType=TINYINT},
      </if>
      <if test="record.partySortOrder != null">
        party_sort_order = #{record.partySortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.unitName != null">
        unit_name = #{record.unitName,jdbcType=VARCHAR},
      </if>
      <if test="record.branchVote != null">
        branch_vote = #{record.branchVote,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=TINYINT},
      </if>
      <if test="record.birth != null">
        birth = #{record.birth,jdbcType=DATE},
      </if>
      <if test="record.nation != null">
        nation = #{record.nation,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null">
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.vote != null">
        vote = #{record.vote,jdbcType=INTEGER},
      </if>
      <if test="record.positiveVote != null">
        positive_vote = #{record.positiveVote,jdbcType=INTEGER},
      </if>
      <if test="record.vote3 != null">
        vote3 = #{record.vote3,jdbcType=INTEGER},
      </if>
      <if test="record.isChosen != null">
        is_chosen = #{record.isChosen,jdbcType=BIT},
      </if>
      <if test="record.isProposal != null">
        is_proposal = #{record.isProposal,jdbcType=BIT},
      </if>
      <if test="record.proposalSortOrder != null">
        proposal_sort_order = #{record.proposalSortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.isFromStage != null">
        is_from_stage = #{record.isFromStage,jdbcType=BIT},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.realnameSortOrder != null">
        realname_sort_order = #{record.realnameSortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.addTime != null">
        add_time = #{record.addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pcs_pr_candidate
    set id = #{record.id,jdbcType=INTEGER},
      recommend_id = #{record.recommendId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      realname = #{record.realname,jdbcType=VARCHAR},
      leader_sort_order = #{record.leaderSortOrder,jdbcType=INTEGER},
      user_type = #{record.userType,jdbcType=TINYINT},
      edu_id = #{record.eduId,jdbcType=INTEGER},
      post = #{record.post,jdbcType=VARCHAR},
      grow_time = #{record.growTime,jdbcType=DATE},
      work_time = #{record.workTime,jdbcType=DATE},
      pro_post = #{record.proPost,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=VARCHAR},
      degree = #{record.degree,jdbcType=VARCHAR},
      is_retire = #{record.isRetire,jdbcType=BIT},
      edu_level = #{record.eduLevel,jdbcType=VARCHAR},
      party_id = #{record.partyId,jdbcType=INTEGER},
      config_id = #{record.configId,jdbcType=INTEGER},
      stage = #{record.stage,jdbcType=TINYINT},
      party_sort_order = #{record.partySortOrder,jdbcType=INTEGER},
      unit_name = #{record.unitName,jdbcType=VARCHAR},
      branch_vote = #{record.branchVote,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      gender = #{record.gender,jdbcType=TINYINT},
      birth = #{record.birth,jdbcType=DATE},
      nation = #{record.nation,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      vote = #{record.vote,jdbcType=INTEGER},
      positive_vote = #{record.positiveVote,jdbcType=INTEGER},
      vote3 = #{record.vote3,jdbcType=INTEGER},
      is_chosen = #{record.isChosen,jdbcType=BIT},
      is_proposal = #{record.isProposal,jdbcType=BIT},
      proposal_sort_order = #{record.proposalSortOrder,jdbcType=INTEGER},
      is_from_stage = #{record.isFromStage,jdbcType=BIT},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      realname_sort_order = #{record.realnameSortOrder,jdbcType=INTEGER},
      add_time = #{record.addTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.pcs.PcsPrCandidate">
    update pcs_pr_candidate
    <set>
      <if test="recommendId != null">
        recommend_id = #{recommendId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="leaderSortOrder != null">
        leader_sort_order = #{leaderSortOrder,jdbcType=INTEGER},
      </if>
      <if test="userType != null">
        user_type = #{userType,jdbcType=TINYINT},
      </if>
      <if test="eduId != null">
        edu_id = #{eduId,jdbcType=INTEGER},
      </if>
      <if test="post != null">
        post = #{post,jdbcType=VARCHAR},
      </if>
      <if test="growTime != null">
        grow_time = #{growTime,jdbcType=DATE},
      </if>
      <if test="workTime != null">
        work_time = #{workTime,jdbcType=DATE},
      </if>
      <if test="proPost != null">
        pro_post = #{proPost,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="isRetire != null">
        is_retire = #{isRetire,jdbcType=BIT},
      </if>
      <if test="eduLevel != null">
        edu_level = #{eduLevel,jdbcType=VARCHAR},
      </if>
      <if test="partyId != null">
        party_id = #{partyId,jdbcType=INTEGER},
      </if>
      <if test="configId != null">
        config_id = #{configId,jdbcType=INTEGER},
      </if>
      <if test="stage != null">
        stage = #{stage,jdbcType=TINYINT},
      </if>
      <if test="partySortOrder != null">
        party_sort_order = #{partySortOrder,jdbcType=INTEGER},
      </if>
      <if test="unitName != null">
        unit_name = #{unitName,jdbcType=VARCHAR},
      </if>
      <if test="branchVote != null">
        branch_vote = #{branchVote,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=TINYINT},
      </if>
      <if test="birth != null">
        birth = #{birth,jdbcType=DATE},
      </if>
      <if test="nation != null">
        nation = #{nation,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="vote != null">
        vote = #{vote,jdbcType=INTEGER},
      </if>
      <if test="positiveVote != null">
        positive_vote = #{positiveVote,jdbcType=INTEGER},
      </if>
      <if test="vote3 != null">
        vote3 = #{vote3,jdbcType=INTEGER},
      </if>
      <if test="isChosen != null">
        is_chosen = #{isChosen,jdbcType=BIT},
      </if>
      <if test="isProposal != null">
        is_proposal = #{isProposal,jdbcType=BIT},
      </if>
      <if test="proposalSortOrder != null">
        proposal_sort_order = #{proposalSortOrder,jdbcType=INTEGER},
      </if>
      <if test="isFromStage != null">
        is_from_stage = #{isFromStage,jdbcType=BIT},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="realnameSortOrder != null">
        realname_sort_order = #{realnameSortOrder,jdbcType=INTEGER},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.pcs.PcsPrCandidate">
    update pcs_pr_candidate
    set recommend_id = #{recommendId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      code = #{code,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      leader_sort_order = #{leaderSortOrder,jdbcType=INTEGER},
      user_type = #{userType,jdbcType=TINYINT},
      edu_id = #{eduId,jdbcType=INTEGER},
      post = #{post,jdbcType=VARCHAR},
      grow_time = #{growTime,jdbcType=DATE},
      work_time = #{workTime,jdbcType=DATE},
      pro_post = #{proPost,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      degree = #{degree,jdbcType=VARCHAR},
      is_retire = #{isRetire,jdbcType=BIT},
      edu_level = #{eduLevel,jdbcType=VARCHAR},
      party_id = #{partyId,jdbcType=INTEGER},
      config_id = #{configId,jdbcType=INTEGER},
      stage = #{stage,jdbcType=TINYINT},
      party_sort_order = #{partySortOrder,jdbcType=INTEGER},
      unit_name = #{unitName,jdbcType=VARCHAR},
      branch_vote = #{branchVote,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      gender = #{gender,jdbcType=TINYINT},
      birth = #{birth,jdbcType=DATE},
      nation = #{nation,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      vote = #{vote,jdbcType=INTEGER},
      positive_vote = #{positiveVote,jdbcType=INTEGER},
      vote3 = #{vote3,jdbcType=INTEGER},
      is_chosen = #{isChosen,jdbcType=BIT},
      is_proposal = #{isProposal,jdbcType=BIT},
      proposal_sort_order = #{proposalSortOrder,jdbcType=INTEGER},
      is_from_stage = #{isFromStage,jdbcType=BIT},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      realname_sort_order = #{realnameSortOrder,jdbcType=INTEGER},
      add_time = #{addTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pcs.PcsPrCandidateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_pr_candidate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>