<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pcs.PcsPartyViewMapper">
  <resultMap id="BaseResultMap" type="domain.pcs.PcsPartyView">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="short_name" jdbcType="VARCHAR" property="shortName" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="class_id" jdbcType="INTEGER" property="classId" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="unit_type_id" jdbcType="INTEGER" property="unitTypeId" />
    <result column="is_enterprise_big" jdbcType="BIT" property="isEnterpriseBig" />
    <result column="is_enterprise_nationalized" jdbcType="BIT" property="isEnterpriseNationalized" />
    <result column="is_separate" jdbcType="BIT" property="isSeparate" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="fax" jdbcType="VARCHAR" property="fax" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="found_time" jdbcType="DATE" property="foundTime" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="branch_count" jdbcType="BIGINT" property="branchCount" />
    <result column="member_count" jdbcType="BIGINT" property="memberCount" />
    <result column="student_member_count" jdbcType="DECIMAL" property="studentMemberCount" />
    <result column="positive_count" jdbcType="DECIMAL" property="positiveCount" />
    <result column="teacher_member_count" jdbcType="DECIMAL" property="teacherMemberCount" />
    <result column="retire_member_count" jdbcType="DECIMAL" property="retireMemberCount" />
    <result column="group_count" jdbcType="BIGINT" property="groupCount" />
    <result column="present_group_count" jdbcType="BIGINT" property="presentGroupCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, code, name, short_name, url, unit_id, class_id, type_id, unit_type_id, is_enterprise_big, 
    is_enterprise_nationalized, is_separate, phone, fax, email, found_time, sort_order, 
    create_time, update_time, is_deleted, branch_count, member_count, student_member_count, 
    positive_count, teacher_member_count, retire_member_count, group_count, present_group_count
  </sql>
  <select id="selectByExample" parameterType="domain.pcs.PcsPartyViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_party_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="domain.pcs.PcsPartyViewExample">
    delete from pcs_party_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pcs.PcsPartyView">
    insert into pcs_party_view (id, code, name, 
      short_name, url, unit_id, 
      class_id, type_id, unit_type_id, 
      is_enterprise_big, is_enterprise_nationalized, is_separate, 
      phone, fax, email, 
      found_time, sort_order, create_time, 
      update_time, is_deleted, branch_count, 
      member_count, student_member_count, positive_count, 
      teacher_member_count, retire_member_count, 
      group_count, present_group_count)
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{shortName,jdbcType=VARCHAR}, #{url,jdbcType=VARCHAR}, #{unitId,jdbcType=INTEGER}, 
      #{classId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{unitTypeId,jdbcType=INTEGER}, 
      #{isEnterpriseBig,jdbcType=BIT}, #{isEnterpriseNationalized,jdbcType=BIT}, #{isSeparate,jdbcType=BIT}, 
      #{phone,jdbcType=VARCHAR}, #{fax,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{foundTime,jdbcType=DATE}, #{sortOrder,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}, #{branchCount,jdbcType=BIGINT}, 
      #{memberCount,jdbcType=BIGINT}, #{studentMemberCount,jdbcType=DECIMAL}, #{positiveCount,jdbcType=DECIMAL}, 
      #{teacherMemberCount,jdbcType=DECIMAL}, #{retireMemberCount,jdbcType=DECIMAL}, 
      #{groupCount,jdbcType=BIGINT}, #{presentGroupCount,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="domain.pcs.PcsPartyView">
    insert into pcs_party_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="shortName != null">
        short_name,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="classId != null">
        class_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="unitTypeId != null">
        unit_type_id,
      </if>
      <if test="isEnterpriseBig != null">
        is_enterprise_big,
      </if>
      <if test="isEnterpriseNationalized != null">
        is_enterprise_nationalized,
      </if>
      <if test="isSeparate != null">
        is_separate,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="fax != null">
        fax,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="foundTime != null">
        found_time,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="isDeleted != null">
        is_deleted,
      </if>
      <if test="branchCount != null">
        branch_count,
      </if>
      <if test="memberCount != null">
        member_count,
      </if>
      <if test="studentMemberCount != null">
        student_member_count,
      </if>
      <if test="positiveCount != null">
        positive_count,
      </if>
      <if test="teacherMemberCount != null">
        teacher_member_count,
      </if>
      <if test="retireMemberCount != null">
        retire_member_count,
      </if>
      <if test="groupCount != null">
        group_count,
      </if>
      <if test="presentGroupCount != null">
        present_group_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="shortName != null">
        #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="classId != null">
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="unitTypeId != null">
        #{unitTypeId,jdbcType=INTEGER},
      </if>
      <if test="isEnterpriseBig != null">
        #{isEnterpriseBig,jdbcType=BIT},
      </if>
      <if test="isEnterpriseNationalized != null">
        #{isEnterpriseNationalized,jdbcType=BIT},
      </if>
      <if test="isSeparate != null">
        #{isSeparate,jdbcType=BIT},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="fax != null">
        #{fax,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="foundTime != null">
        #{foundTime,jdbcType=DATE},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null">
        #{isDeleted,jdbcType=BIT},
      </if>
      <if test="branchCount != null">
        #{branchCount,jdbcType=BIGINT},
      </if>
      <if test="memberCount != null">
        #{memberCount,jdbcType=BIGINT},
      </if>
      <if test="studentMemberCount != null">
        #{studentMemberCount,jdbcType=DECIMAL},
      </if>
      <if test="positiveCount != null">
        #{positiveCount,jdbcType=DECIMAL},
      </if>
      <if test="teacherMemberCount != null">
        #{teacherMemberCount,jdbcType=DECIMAL},
      </if>
      <if test="retireMemberCount != null">
        #{retireMemberCount,jdbcType=DECIMAL},
      </if>
      <if test="groupCount != null">
        #{groupCount,jdbcType=BIGINT},
      </if>
      <if test="presentGroupCount != null">
        #{presentGroupCount,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pcs.PcsPartyViewExample" resultType="java.lang.Long">
    select count(*) from pcs_party_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pcs_party_view
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.shortName != null">
        short_name = #{record.shortName,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
      <if test="record.classId != null">
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.unitTypeId != null">
        unit_type_id = #{record.unitTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.isEnterpriseBig != null">
        is_enterprise_big = #{record.isEnterpriseBig,jdbcType=BIT},
      </if>
      <if test="record.isEnterpriseNationalized != null">
        is_enterprise_nationalized = #{record.isEnterpriseNationalized,jdbcType=BIT},
      </if>
      <if test="record.isSeparate != null">
        is_separate = #{record.isSeparate,jdbcType=BIT},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=VARCHAR},
      </if>
      <if test="record.fax != null">
        fax = #{record.fax,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.foundTime != null">
        found_time = #{record.foundTime,jdbcType=DATE},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleted != null">
        is_deleted = #{record.isDeleted,jdbcType=BIT},
      </if>
      <if test="record.branchCount != null">
        branch_count = #{record.branchCount,jdbcType=BIGINT},
      </if>
      <if test="record.memberCount != null">
        member_count = #{record.memberCount,jdbcType=BIGINT},
      </if>
      <if test="record.studentMemberCount != null">
        student_member_count = #{record.studentMemberCount,jdbcType=DECIMAL},
      </if>
      <if test="record.positiveCount != null">
        positive_count = #{record.positiveCount,jdbcType=DECIMAL},
      </if>
      <if test="record.teacherMemberCount != null">
        teacher_member_count = #{record.teacherMemberCount,jdbcType=DECIMAL},
      </if>
      <if test="record.retireMemberCount != null">
        retire_member_count = #{record.retireMemberCount,jdbcType=DECIMAL},
      </if>
      <if test="record.groupCount != null">
        group_count = #{record.groupCount,jdbcType=BIGINT},
      </if>
      <if test="record.presentGroupCount != null">
        present_group_count = #{record.presentGroupCount,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pcs_party_view
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      short_name = #{record.shortName,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      class_id = #{record.classId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      unit_type_id = #{record.unitTypeId,jdbcType=INTEGER},
      is_enterprise_big = #{record.isEnterpriseBig,jdbcType=BIT},
      is_enterprise_nationalized = #{record.isEnterpriseNationalized,jdbcType=BIT},
      is_separate = #{record.isSeparate,jdbcType=BIT},
      phone = #{record.phone,jdbcType=VARCHAR},
      fax = #{record.fax,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      found_time = #{record.foundTime,jdbcType=DATE},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      is_deleted = #{record.isDeleted,jdbcType=BIT},
      branch_count = #{record.branchCount,jdbcType=BIGINT},
      member_count = #{record.memberCount,jdbcType=BIGINT},
      student_member_count = #{record.studentMemberCount,jdbcType=DECIMAL},
      positive_count = #{record.positiveCount,jdbcType=DECIMAL},
      teacher_member_count = #{record.teacherMemberCount,jdbcType=DECIMAL},
      retire_member_count = #{record.retireMemberCount,jdbcType=DECIMAL},
      group_count = #{record.groupCount,jdbcType=BIGINT},
      present_group_count = #{record.presentGroupCount,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pcs.PcsPartyViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_party_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>