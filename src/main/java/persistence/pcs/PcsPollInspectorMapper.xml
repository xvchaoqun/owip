<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pcs.PcsPollInspectorMapper">
  <resultMap id="BaseResultMap" type="domain.pcs.PcsPollInspector">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="poll_id" jdbcType="INTEGER" property="pollId" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="passwd" jdbcType="VARCHAR" property="passwd" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="branch_id" jdbcType="INTEGER" property="branchId" />
    <result column="is_positive" jdbcType="BIT" property="isPositive" />
    <result column="tempdata" jdbcType="VARCHAR" property="tempdata" />
    <result column="is_finished" jdbcType="BIT" property="isFinished" />
    <result column="is_mobile" jdbcType="BIT" property="isMobile" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="submit_time" jdbcType="TIMESTAMP" property="submitTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, poll_id, username, passwd, party_id, branch_id, is_positive, tempdata, is_finished, 
    is_mobile, remark, create_time, submit_time
  </sql>
  <select id="selectByExample" parameterType="domain.pcs.PcsPollInspectorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_poll_inspector
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pcs_poll_inspector
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pcs_poll_inspector
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.pcs.PcsPollInspectorExample">
    delete from pcs_poll_inspector
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pcs.PcsPollInspector">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pcs_poll_inspector (poll_id, username, passwd, 
      party_id, branch_id, is_positive, 
      tempdata, is_finished, is_mobile, 
      remark, create_time, submit_time
      )
    values (#{pollId,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{passwd,jdbcType=VARCHAR}, 
      #{partyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, #{isPositive,jdbcType=BIT}, 
      #{tempdata,jdbcType=VARCHAR}, #{isFinished,jdbcType=BIT}, #{isMobile,jdbcType=BIT}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{submitTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.pcs.PcsPollInspector">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into pcs_poll_inspector
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="pollId != null">
        poll_id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="passwd != null">
        passwd,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="branchId != null">
        branch_id,
      </if>
      <if test="isPositive != null">
        is_positive,
      </if>
      <if test="tempdata != null">
        tempdata,
      </if>
      <if test="isFinished != null">
        is_finished,
      </if>
      <if test="isMobile != null">
        is_mobile,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="submitTime != null">
        submit_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="pollId != null">
        #{pollId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="isPositive != null">
        #{isPositive,jdbcType=BIT},
      </if>
      <if test="tempdata != null">
        #{tempdata,jdbcType=VARCHAR},
      </if>
      <if test="isFinished != null">
        #{isFinished,jdbcType=BIT},
      </if>
      <if test="isMobile != null">
        #{isMobile,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitTime != null">
        #{submitTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pcs.PcsPollInspectorExample" resultType="java.lang.Long">
    select count(*) from pcs_poll_inspector
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pcs_poll_inspector
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.pollId != null">
        poll_id = #{record.pollId,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.passwd != null">
        passwd = #{record.passwd,jdbcType=VARCHAR},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.branchId != null">
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.isPositive != null">
        is_positive = #{record.isPositive,jdbcType=BIT},
      </if>
      <if test="record.tempdata != null">
        tempdata = #{record.tempdata,jdbcType=VARCHAR},
      </if>
      <if test="record.isFinished != null">
        is_finished = #{record.isFinished,jdbcType=BIT},
      </if>
      <if test="record.isMobile != null">
        is_mobile = #{record.isMobile,jdbcType=BIT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.submitTime != null">
        submit_time = #{record.submitTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pcs_poll_inspector
    set id = #{record.id,jdbcType=INTEGER},
      poll_id = #{record.pollId,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      passwd = #{record.passwd,jdbcType=VARCHAR},
      party_id = #{record.partyId,jdbcType=INTEGER},
      branch_id = #{record.branchId,jdbcType=INTEGER},
      is_positive = #{record.isPositive,jdbcType=BIT},
      tempdata = #{record.tempdata,jdbcType=VARCHAR},
      is_finished = #{record.isFinished,jdbcType=BIT},
      is_mobile = #{record.isMobile,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      submit_time = #{record.submitTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.pcs.PcsPollInspector">
    update pcs_poll_inspector
    <set>
      <if test="pollId != null">
        poll_id = #{pollId,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="passwd != null">
        passwd = #{passwd,jdbcType=VARCHAR},
      </if>
      <if test="partyId != null">
        party_id = #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null">
        branch_id = #{branchId,jdbcType=INTEGER},
      </if>
      <if test="isPositive != null">
        is_positive = #{isPositive,jdbcType=BIT},
      </if>
      <if test="tempdata != null">
        tempdata = #{tempdata,jdbcType=VARCHAR},
      </if>
      <if test="isFinished != null">
        is_finished = #{isFinished,jdbcType=BIT},
      </if>
      <if test="isMobile != null">
        is_mobile = #{isMobile,jdbcType=BIT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="submitTime != null">
        submit_time = #{submitTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.pcs.PcsPollInspector">
    update pcs_poll_inspector
    set poll_id = #{pollId,jdbcType=INTEGER},
      username = #{username,jdbcType=VARCHAR},
      passwd = #{passwd,jdbcType=VARCHAR},
      party_id = #{partyId,jdbcType=INTEGER},
      branch_id = #{branchId,jdbcType=INTEGER},
      is_positive = #{isPositive,jdbcType=BIT},
      tempdata = #{tempdata,jdbcType=VARCHAR},
      is_finished = #{isFinished,jdbcType=BIT},
      is_mobile = #{isMobile,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      submit_time = #{submitTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pcs.PcsPollInspectorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_poll_inspector
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>