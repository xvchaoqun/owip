<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pcs.PcsPartyMapper">
  <resultMap id="BaseResultMap" type="domain.pcs.PcsParty">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="config_id" jdbcType="INTEGER" property="configId" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="branch_count" jdbcType="INTEGER" property="branchCount" />
    <result column="member_count" jdbcType="INTEGER" property="memberCount" />
    <result column="positive_count" jdbcType="INTEGER" property="positiveCount" />
    <result column="student_member_count" jdbcType="INTEGER" property="studentMemberCount" />
    <result column="teacher_member_count" jdbcType="INTEGER" property="teacherMemberCount" />
    <result column="retire_member_count" jdbcType="INTEGER" property="retireMemberCount" />
    <result column="group_count" jdbcType="INTEGER" property="groupCount" />
    <result column="present_group_count" jdbcType="INTEGER" property="presentGroupCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, config_id, party_id, name, sort_order, branch_count, member_count, positive_count, 
    student_member_count, teacher_member_count, retire_member_count, group_count, present_group_count
  </sql>
  <select id="selectByExample" parameterType="domain.pcs.PcsPartyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pcs_party
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pcs_party
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.pcs.PcsPartyExample">
    delete from pcs_party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pcs.PcsParty">
    insert into pcs_party (id, config_id, party_id, 
      name, sort_order, branch_count, 
      member_count, positive_count, student_member_count, 
      teacher_member_count, retire_member_count, 
      group_count, present_group_count)
    values (#{id,jdbcType=INTEGER}, #{configId,jdbcType=INTEGER}, #{partyId,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{sortOrder,jdbcType=INTEGER}, #{branchCount,jdbcType=INTEGER}, 
      #{memberCount,jdbcType=INTEGER}, #{positiveCount,jdbcType=INTEGER}, #{studentMemberCount,jdbcType=INTEGER}, 
      #{teacherMemberCount,jdbcType=INTEGER}, #{retireMemberCount,jdbcType=INTEGER}, 
      #{groupCount,jdbcType=INTEGER}, #{presentGroupCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="domain.pcs.PcsParty">
    insert into pcs_party
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="configId != null">
        config_id,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="branchCount != null">
        branch_count,
      </if>
      <if test="memberCount != null">
        member_count,
      </if>
      <if test="positiveCount != null">
        positive_count,
      </if>
      <if test="studentMemberCount != null">
        student_member_count,
      </if>
      <if test="teacherMemberCount != null">
        teacher_member_count,
      </if>
      <if test="retireMemberCount != null">
        retire_member_count,
      </if>
      <if test="groupCount != null">
        group_count,
      </if>
      <if test="presentGroupCount != null">
        present_group_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="configId != null">
        #{configId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="branchCount != null">
        #{branchCount,jdbcType=INTEGER},
      </if>
      <if test="memberCount != null">
        #{memberCount,jdbcType=INTEGER},
      </if>
      <if test="positiveCount != null">
        #{positiveCount,jdbcType=INTEGER},
      </if>
      <if test="studentMemberCount != null">
        #{studentMemberCount,jdbcType=INTEGER},
      </if>
      <if test="teacherMemberCount != null">
        #{teacherMemberCount,jdbcType=INTEGER},
      </if>
      <if test="retireMemberCount != null">
        #{retireMemberCount,jdbcType=INTEGER},
      </if>
      <if test="groupCount != null">
        #{groupCount,jdbcType=INTEGER},
      </if>
      <if test="presentGroupCount != null">
        #{presentGroupCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pcs.PcsPartyExample" resultType="java.lang.Long">
    select count(*) from pcs_party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pcs_party
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.configId != null">
        config_id = #{record.configId,jdbcType=INTEGER},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.branchCount != null">
        branch_count = #{record.branchCount,jdbcType=INTEGER},
      </if>
      <if test="record.memberCount != null">
        member_count = #{record.memberCount,jdbcType=INTEGER},
      </if>
      <if test="record.positiveCount != null">
        positive_count = #{record.positiveCount,jdbcType=INTEGER},
      </if>
      <if test="record.studentMemberCount != null">
        student_member_count = #{record.studentMemberCount,jdbcType=INTEGER},
      </if>
      <if test="record.teacherMemberCount != null">
        teacher_member_count = #{record.teacherMemberCount,jdbcType=INTEGER},
      </if>
      <if test="record.retireMemberCount != null">
        retire_member_count = #{record.retireMemberCount,jdbcType=INTEGER},
      </if>
      <if test="record.groupCount != null">
        group_count = #{record.groupCount,jdbcType=INTEGER},
      </if>
      <if test="record.presentGroupCount != null">
        present_group_count = #{record.presentGroupCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pcs_party
    set id = #{record.id,jdbcType=INTEGER},
      config_id = #{record.configId,jdbcType=INTEGER},
      party_id = #{record.partyId,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      branch_count = #{record.branchCount,jdbcType=INTEGER},
      member_count = #{record.memberCount,jdbcType=INTEGER},
      positive_count = #{record.positiveCount,jdbcType=INTEGER},
      student_member_count = #{record.studentMemberCount,jdbcType=INTEGER},
      teacher_member_count = #{record.teacherMemberCount,jdbcType=INTEGER},
      retire_member_count = #{record.retireMemberCount,jdbcType=INTEGER},
      group_count = #{record.groupCount,jdbcType=INTEGER},
      present_group_count = #{record.presentGroupCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.pcs.PcsParty">
    update pcs_party
    <set>
      <if test="configId != null">
        config_id = #{configId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        party_id = #{partyId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="branchCount != null">
        branch_count = #{branchCount,jdbcType=INTEGER},
      </if>
      <if test="memberCount != null">
        member_count = #{memberCount,jdbcType=INTEGER},
      </if>
      <if test="positiveCount != null">
        positive_count = #{positiveCount,jdbcType=INTEGER},
      </if>
      <if test="studentMemberCount != null">
        student_member_count = #{studentMemberCount,jdbcType=INTEGER},
      </if>
      <if test="teacherMemberCount != null">
        teacher_member_count = #{teacherMemberCount,jdbcType=INTEGER},
      </if>
      <if test="retireMemberCount != null">
        retire_member_count = #{retireMemberCount,jdbcType=INTEGER},
      </if>
      <if test="groupCount != null">
        group_count = #{groupCount,jdbcType=INTEGER},
      </if>
      <if test="presentGroupCount != null">
        present_group_count = #{presentGroupCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.pcs.PcsParty">
    update pcs_party
    set config_id = #{configId,jdbcType=INTEGER},
      party_id = #{partyId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      branch_count = #{branchCount,jdbcType=INTEGER},
      member_count = #{memberCount,jdbcType=INTEGER},
      positive_count = #{positiveCount,jdbcType=INTEGER},
      student_member_count = #{studentMemberCount,jdbcType=INTEGER},
      teacher_member_count = #{teacherMemberCount,jdbcType=INTEGER},
      retire_member_count = #{retireMemberCount,jdbcType=INTEGER},
      group_count = #{groupCount,jdbcType=INTEGER},
      present_group_count = #{presentGroupCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pcs.PcsPartyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_party
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>