<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.pcs.PcsPrAllocateMapper">
  <resultMap id="BaseResultMap" type="domain.pcs.PcsPrAllocate">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="config_id" jdbcType="INTEGER" property="configId" />
    <result column="party_id" jdbcType="INTEGER" property="partyId" />
    <result column="pro_count" jdbcType="INTEGER" property="proCount" />
    <result column="stu_count" jdbcType="INTEGER" property="stuCount" />
    <result column="retire_count" jdbcType="INTEGER" property="retireCount" />
    <result column="female_count" jdbcType="INTEGER" property="femaleCount" />
    <result column="minority_count" jdbcType="INTEGER" property="minorityCount" />
    <result column="under_fifty_count" jdbcType="INTEGER" property="underFiftyCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, config_id, party_id, pro_count, stu_count, retire_count, female_count, minority_count, 
    under_fifty_count
  </sql>
  <select id="selectByExample" parameterType="domain.pcs.PcsPrAllocateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_pr_allocate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from pcs_pr_allocate
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from pcs_pr_allocate
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.pcs.PcsPrAllocateExample">
    delete from pcs_pr_allocate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.pcs.PcsPrAllocate">
    insert into pcs_pr_allocate (id, config_id, party_id, 
      pro_count, stu_count, retire_count, 
      female_count, minority_count, under_fifty_count
      )
    values (#{id,jdbcType=INTEGER}, #{configId,jdbcType=INTEGER}, #{partyId,jdbcType=INTEGER}, 
      #{proCount,jdbcType=INTEGER}, #{stuCount,jdbcType=INTEGER}, #{retireCount,jdbcType=INTEGER}, 
      #{femaleCount,jdbcType=INTEGER}, #{minorityCount,jdbcType=INTEGER}, #{underFiftyCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.pcs.PcsPrAllocate">
    insert into pcs_pr_allocate
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="configId != null">
        config_id,
      </if>
      <if test="partyId != null">
        party_id,
      </if>
      <if test="proCount != null">
        pro_count,
      </if>
      <if test="stuCount != null">
        stu_count,
      </if>
      <if test="retireCount != null">
        retire_count,
      </if>
      <if test="femaleCount != null">
        female_count,
      </if>
      <if test="minorityCount != null">
        minority_count,
      </if>
      <if test="underFiftyCount != null">
        under_fifty_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="configId != null">
        #{configId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="proCount != null">
        #{proCount,jdbcType=INTEGER},
      </if>
      <if test="stuCount != null">
        #{stuCount,jdbcType=INTEGER},
      </if>
      <if test="retireCount != null">
        #{retireCount,jdbcType=INTEGER},
      </if>
      <if test="femaleCount != null">
        #{femaleCount,jdbcType=INTEGER},
      </if>
      <if test="minorityCount != null">
        #{minorityCount,jdbcType=INTEGER},
      </if>
      <if test="underFiftyCount != null">
        #{underFiftyCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.pcs.PcsPrAllocateExample" resultType="java.lang.Long">
    select count(*) from pcs_pr_allocate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update pcs_pr_allocate
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.configId != null">
        config_id = #{record.configId,jdbcType=INTEGER},
      </if>
      <if test="record.partyId != null">
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.proCount != null">
        pro_count = #{record.proCount,jdbcType=INTEGER},
      </if>
      <if test="record.stuCount != null">
        stu_count = #{record.stuCount,jdbcType=INTEGER},
      </if>
      <if test="record.retireCount != null">
        retire_count = #{record.retireCount,jdbcType=INTEGER},
      </if>
      <if test="record.femaleCount != null">
        female_count = #{record.femaleCount,jdbcType=INTEGER},
      </if>
      <if test="record.minorityCount != null">
        minority_count = #{record.minorityCount,jdbcType=INTEGER},
      </if>
      <if test="record.underFiftyCount != null">
        under_fifty_count = #{record.underFiftyCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update pcs_pr_allocate
    set id = #{record.id,jdbcType=INTEGER},
      config_id = #{record.configId,jdbcType=INTEGER},
      party_id = #{record.partyId,jdbcType=INTEGER},
      pro_count = #{record.proCount,jdbcType=INTEGER},
      stu_count = #{record.stuCount,jdbcType=INTEGER},
      retire_count = #{record.retireCount,jdbcType=INTEGER},
      female_count = #{record.femaleCount,jdbcType=INTEGER},
      minority_count = #{record.minorityCount,jdbcType=INTEGER},
      under_fifty_count = #{record.underFiftyCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.pcs.PcsPrAllocate">
    update pcs_pr_allocate
    <set>
      <if test="configId != null">
        config_id = #{configId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null">
        party_id = #{partyId,jdbcType=INTEGER},
      </if>
      <if test="proCount != null">
        pro_count = #{proCount,jdbcType=INTEGER},
      </if>
      <if test="stuCount != null">
        stu_count = #{stuCount,jdbcType=INTEGER},
      </if>
      <if test="retireCount != null">
        retire_count = #{retireCount,jdbcType=INTEGER},
      </if>
      <if test="femaleCount != null">
        female_count = #{femaleCount,jdbcType=INTEGER},
      </if>
      <if test="minorityCount != null">
        minority_count = #{minorityCount,jdbcType=INTEGER},
      </if>
      <if test="underFiftyCount != null">
        under_fifty_count = #{underFiftyCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.pcs.PcsPrAllocate">
    update pcs_pr_allocate
    set config_id = #{configId,jdbcType=INTEGER},
      party_id = #{partyId,jdbcType=INTEGER},
      pro_count = #{proCount,jdbcType=INTEGER},
      stu_count = #{stuCount,jdbcType=INTEGER},
      retire_count = #{retireCount,jdbcType=INTEGER},
      female_count = #{femaleCount,jdbcType=INTEGER},
      minority_count = #{minorityCount,jdbcType=INTEGER},
      under_fifty_count = #{underFiftyCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.pcs.PcsPrAllocateExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pcs_pr_allocate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>