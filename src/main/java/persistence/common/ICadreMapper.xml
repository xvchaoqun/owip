<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.common.ICadreMapper">

    <sql id="statCadreSearchSql">
        1=1
        <if test="searchBean.cadreId!=null">
            and c.id=#{searchBean.cadreId}
        </if>
        <if test="searchBean.cadreStatus!=null">
            and c.status=#{searchBean.cadreStatus}
        </if>
        <if test="searchBean.unitTypeId!=null">
            and c.unit_type_id=#{searchBean.unitTypeId}
        </if>
        <if test="searchBean.notUnitTypeId!=null">
            and c.unit_type_id!=#{searchBean.notUnitTypeId}
        </if>
    </sql>
    <!--1、查找干部的（境外）学习经历 -->
    <select id="findCadreEdus" resultMap="persistence.cadre.CadreEduMapper.IBaseResultMap" parameterType="map">
        select ce.* from cadre_edu ce , cadre c where
        <include refid="statCadreSearchSql" />
        and ce.cadre_id=c.id and ce.school_type =#{schoolType}
    </select>
    <select id="countCadreEdus" parameterType="map" resultType="java.lang.Integer">
        select count(distinct ce.id) from cadre_edu ce , cadre c where
        <include refid="statCadreSearchSql" />
        and ce.cadre_id=c.id and ce.school_type =#{schoolType}
    </select>
    <!--2、查找干部的工作经历 3、查找（机关）干部的（院系）工作经历 4、查找（院系）干部的（机关）工作经历-->
    <select id="findCadreWroks" resultMap="persistence.cadre.CadreWorkMapper.IBaseResultMap" parameterType="map">
        select cw.* from cadre_work cw , cadre_view c where <include refid="statCadreSearchSql" />
        and cw.cadre_id=c.id and cw.work_type =#{workType}
    </select>
    <select id="countCadreWroks" parameterType="map" resultType="java.lang.Integer">
        select count(distinct cw.id) from cadre_work cw , cadre_view c where <include refid="statCadreSearchSql" />
        and cw.cadre_id=c.id and cw.work_type =#{workType}
    </select>
    <!--5、有校外挂职经历的干部-->
    <select id="findCrpRecords" resultMap="persistence.crp.CrpRecordMapper.BaseResultMap" parameterType="map">
        select cr.* from crp_record cr , cadre c where <include refid="statCadreSearchSql" />
        and cr.user_id=c.user_id and cr.type =#{type}
    </select>
    <select id="countCrpRecords" parameterType="map" resultType="java.lang.Integer">
        select count(distinct cr.id) from crp_record cr , cadre c where <include refid="statCadreSearchSql" />
        and cr.user_id=c.user_id and cr.type =#{type}
    </select>


    <select id="selectCadreList" resultMap="persistence.cadre.CadreMapper.BaseResultMap" parameterType="map">
        select c.* from cadre c, sys_user_view u where c.user_id= u.id
        <if test="search != null">
            and (u.username like #{search} or u.realname like #{search} or u.code like #{search})
        </if>

        <if test="cadreStatusList!=null and cadreStatusList.size>0">
            and c.status in
            <foreach collection="cadreStatusList" item="st"
                     index="index" open="(" close=")" separator=",">
                #{st}
            </foreach>
        </if>
        order by c.sort_order desc
    </select>
    <select id="countCadre" parameterType="map" resultType="java.lang.Integer">
        select count(c.id) from cadre c, sys_user_view u where c.user_id= u.id
        <if test="search != null">
            and (u.username like #{search} or u.realname like #{search} or u.code like #{search})
        </if>

        <if test="cadreStatusList!=null and cadreStatusList.size>0">
            and c.status in
            <foreach collection="cadreStatusList" item="st"
                     index="index" open="(" close=")" separator=",">
                #{st}
            </foreach>
        </if>
    </select>

    <select id="selectNotCadreList" resultMap="persistence.sys.SysUserViewMapper.BaseResultMap" parameterType="map">
        select user.* from sys_user_view user where user.id not in(select c.user_id from cadre c where 1=1
        <if test="cadreStatusList.size>0">
            and c.status in
            <foreach collection="cadreStatusList" item="status"
                     index="index" open="(" close=")" separator=",">
                #{status}
            </foreach>
        </if>
        )
        <if test="search != null">
            and (user.username like #{search} or user.realname like #{search} or user.code like #{search})
        </if>
        and user.role_ids not like "%${regRoleStr}%"
        order by create_time desc
    </select>

    <select id="countNotCadre" parameterType="map" resultType="java.lang.Integer">
        select count(user.id) from sys_user_view user where user.id not in(select c.user_id from cadre c where 1=1
        <if test="cadreStatusList.size>0">
            and c.status in
            <foreach collection="cadreStatusList" item="status"
                     index="index" open="(" close=")" separator=",">
                #{status}
            </foreach>
        </if>
        )
        <if test="search != null">
            and (user.username like #{search} or user.realname like #{search} or user.code like #{search})
        </if>
        and user.role_ids not like "%${regRoleStr}%"
    </select>

    <!--<select id="selectCadreByUnitIdList" resultMap="persistence.cadre.CadreMapper.BaseResultMap" parameterType="map" >
     select c.* from cadre c, sys_user_view user where user.id in(
     select c.user_id from cadre_main_work cmw, cadre c where cmw.unit_id=#{unitId} and cmw.cadre_id = c.id
     union all
     select c.user_id from cadre_sub_work csw, cadre c where csw.unit_id=#{unitId} and csw.cadre_id = c.id)
     <if test="search != null" >
       and (user.username like #{search} or user.realname like #{search} or user.code like #{search})
     </if>
     and c.user_id = user.id
     <if test="cadreStatusList.size>0">
       and  c.status in
       <foreach collection="cadreStatusList" item="status"
                index="index" open="(" close=")" separator=",">
         #{status}
       </foreach>
     </if>
     order by c.sort_order desc
   </select>
   <select id="countCadreByUnitId" parameterType="map" resultType="java.lang.Integer" >
     select count(c.id) from cadre c, sys_user_view user where user.id in(
     select c.user_id from cadre_main_work cmw, cadre c where cmw.unit_id=#{unitId} and cmw.cadre_id = c.id
     union all
     select c.user_id from cadre_sub_work csw, cadre c where csw.unit_id=#{unitId} and csw.cadre_id = c.id)
     <if test="search != null" >
       and (user.username like #{search} or user.realname like #{search} or user.code like #{search})
     </if>
     and c.user_id = user.id
     <if test="cadreStatusList.size>0">
       and  c.status in
       <foreach collection="cadreStatusList" item="status"
                index="index" open="(" close=")" separator=",">
         #{status}
       </foreach>
     </if>
   </select>-->

    <select id="getCadreFamliys" resultMap="persistence.cadre.CadreFamliyMapper.BaseResultMap" parameterType="map">
        select cf.* from cadre_famliy cf, cadre c where cf.cadre_id=c.id
        <if test="cadreIds != null and cadreIds.length>0">
            and c.id IN
            <foreach collection="cadreIds" item="cadreId" separator="," open="(" close=")">
                #{cadreId}
            </foreach>
        </if>
        <if test="status != null">
            and c.status = #{status}
        </if>
        order by c.sort_order desc
    </select>
</mapper>