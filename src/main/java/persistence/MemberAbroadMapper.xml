<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.MemberAbroadMapper" >
  <resultMap id="BaseResultMap" type="domain.MemberAbroad" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="party_name" property="partyName" jdbcType="VARCHAR" />
    <result column="branch_name" property="branchName" jdbcType="VARCHAR" />
    <result column="grow_time" property="growTime" jdbcType="DATE" />
    <result column="abroad_time" property="abroadTime" jdbcType="DATE" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="expect_return_time" property="expectReturnTime" jdbcType="DATE" />
    <result column="actual_return_time" property="actualReturnTime" jdbcType="DATE" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, party_name, branch_name, grow_time, abroad_time, reason, expect_return_time, 
    actual_return_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="domain.MemberAbroadExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_abroad
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ow_member_abroad
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ow_member_abroad
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.MemberAbroadExample" >
    delete from ow_member_abroad
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.MemberAbroad" >
    insert into ow_member_abroad (id, user_id, party_name, 
      branch_name, grow_time, abroad_time, 
      reason, expect_return_time, actual_return_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{partyName,jdbcType=VARCHAR}, 
      #{branchName,jdbcType=VARCHAR}, #{growTime,jdbcType=DATE}, #{abroadTime,jdbcType=DATE}, 
      #{reason,jdbcType=VARCHAR}, #{expectReturnTime,jdbcType=DATE}, #{actualReturnTime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.MemberAbroad" >
    insert into ow_member_abroad
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="partyName != null" >
        party_name,
      </if>
      <if test="branchName != null" >
        branch_name,
      </if>
      <if test="growTime != null" >
        grow_time,
      </if>
      <if test="abroadTime != null" >
        abroad_time,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="expectReturnTime != null" >
        expect_return_time,
      </if>
      <if test="actualReturnTime != null" >
        actual_return_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyName != null" >
        #{partyName,jdbcType=VARCHAR},
      </if>
      <if test="branchName != null" >
        #{branchName,jdbcType=VARCHAR},
      </if>
      <if test="growTime != null" >
        #{growTime,jdbcType=DATE},
      </if>
      <if test="abroadTime != null" >
        #{abroadTime,jdbcType=DATE},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="expectReturnTime != null" >
        #{expectReturnTime,jdbcType=DATE},
      </if>
      <if test="actualReturnTime != null" >
        #{actualReturnTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.MemberAbroadExample" resultType="java.lang.Integer" >
    select count(*) from ow_member_abroad
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ow_member_abroad
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.partyName != null" >
        party_name = #{record.partyName,jdbcType=VARCHAR},
      </if>
      <if test="record.branchName != null" >
        branch_name = #{record.branchName,jdbcType=VARCHAR},
      </if>
      <if test="record.growTime != null" >
        grow_time = #{record.growTime,jdbcType=DATE},
      </if>
      <if test="record.abroadTime != null" >
        abroad_time = #{record.abroadTime,jdbcType=DATE},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.expectReturnTime != null" >
        expect_return_time = #{record.expectReturnTime,jdbcType=DATE},
      </if>
      <if test="record.actualReturnTime != null" >
        actual_return_time = #{record.actualReturnTime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ow_member_abroad
    set id = #{record.id,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      party_name = #{record.partyName,jdbcType=VARCHAR},
      branch_name = #{record.branchName,jdbcType=VARCHAR},
      grow_time = #{record.growTime,jdbcType=DATE},
      abroad_time = #{record.abroadTime,jdbcType=DATE},
      reason = #{record.reason,jdbcType=VARCHAR},
      expect_return_time = #{record.expectReturnTime,jdbcType=DATE},
      actual_return_time = #{record.actualReturnTime,jdbcType=DATE}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.MemberAbroad" >
    update ow_member_abroad
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyName != null" >
        party_name = #{partyName,jdbcType=VARCHAR},
      </if>
      <if test="branchName != null" >
        branch_name = #{branchName,jdbcType=VARCHAR},
      </if>
      <if test="growTime != null" >
        grow_time = #{growTime,jdbcType=DATE},
      </if>
      <if test="abroadTime != null" >
        abroad_time = #{abroadTime,jdbcType=DATE},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="expectReturnTime != null" >
        expect_return_time = #{expectReturnTime,jdbcType=DATE},
      </if>
      <if test="actualReturnTime != null" >
        actual_return_time = #{actualReturnTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.MemberAbroad" >
    update ow_member_abroad
    set user_id = #{userId,jdbcType=INTEGER},
      party_name = #{partyName,jdbcType=VARCHAR},
      branch_name = #{branchName,jdbcType=VARCHAR},
      grow_time = #{growTime,jdbcType=DATE},
      abroad_time = #{abroadTime,jdbcType=DATE},
      reason = #{reason,jdbcType=VARCHAR},
      expect_return_time = #{expectReturnTime,jdbcType=DATE},
      actual_return_time = #{actualReturnTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="domain.MemberAbroadExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_abroad
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>