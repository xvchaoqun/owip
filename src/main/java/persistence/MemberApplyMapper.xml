<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.MemberApplyMapper" >
  <resultMap id="BaseResultMap" type="domain.MemberApply" >
    <id column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="party_id" property="partyId" jdbcType="INTEGER" />
    <result column="branch_id" property="branchId" jdbcType="INTEGER" />
    <result column="type" property="type" jdbcType="TINYINT" />
    <result column="apply_time" property="applyTime" jdbcType="DATE" />
    <result column="fill_time" property="fillTime" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="stage" property="stage" jdbcType="TINYINT" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
    <result column="pass_time" property="passTime" jdbcType="DATE" />
    <result column="active_time" property="activeTime" jdbcType="DATE" />
    <result column="candidate_time" property="candidateTime" jdbcType="DATE" />
    <result column="train_time" property="trainTime" jdbcType="DATE" />
    <result column="candidate_status" property="candidateStatus" jdbcType="TINYINT" />
    <result column="plan_time" property="planTime" jdbcType="DATE" />
    <result column="plan_status" property="planStatus" jdbcType="TINYINT" />
    <result column="draw_time" property="drawTime" jdbcType="DATE" />
    <result column="draw_status" property="drawStatus" jdbcType="TINYINT" />
    <result column="grow_time" property="growTime" jdbcType="DATE" />
    <result column="grow_status" property="growStatus" jdbcType="TINYINT" />
    <result column="positive_time" property="positiveTime" jdbcType="DATE" />
    <result column="positive_status" property="positiveStatus" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    user_id, party_id, branch_id, type, apply_time, fill_time, remark, stage, reason, 
    pass_time, active_time, candidate_time, train_time, candidate_status, plan_time, 
    plan_status, draw_time, draw_status, grow_time, grow_status, positive_time, positive_status, 
    create_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="domain.MemberApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from ow_member_apply
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from ow_member_apply
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.MemberApplyExample" >
    delete from ow_member_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.MemberApply" >
    insert into ow_member_apply (user_id, party_id, branch_id, 
      type, apply_time, fill_time, 
      remark, stage, reason, 
      pass_time, active_time, candidate_time, 
      train_time, candidate_status, plan_time, 
      plan_status, draw_time, draw_status, 
      grow_time, grow_status, positive_time, 
      positive_status, create_time)
    values (#{userId,jdbcType=INTEGER}, #{partyId,jdbcType=INTEGER}, #{branchId,jdbcType=INTEGER}, 
      #{type,jdbcType=TINYINT}, #{applyTime,jdbcType=DATE}, #{fillTime,jdbcType=TIMESTAMP}, 
      #{remark,jdbcType=VARCHAR}, #{stage,jdbcType=TINYINT}, #{reason,jdbcType=VARCHAR}, 
      #{passTime,jdbcType=DATE}, #{activeTime,jdbcType=DATE}, #{candidateTime,jdbcType=DATE}, 
      #{trainTime,jdbcType=DATE}, #{candidateStatus,jdbcType=TINYINT}, #{planTime,jdbcType=DATE}, 
      #{planStatus,jdbcType=TINYINT}, #{drawTime,jdbcType=DATE}, #{drawStatus,jdbcType=TINYINT}, 
      #{growTime,jdbcType=DATE}, #{growStatus,jdbcType=TINYINT}, #{positiveTime,jdbcType=DATE}, 
      #{positiveStatus,jdbcType=TINYINT}, #{createTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="domain.MemberApply" >
    insert into ow_member_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="partyId != null" >
        party_id,
      </if>
      <if test="branchId != null" >
        branch_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="applyTime != null" >
        apply_time,
      </if>
      <if test="fillTime != null" >
        fill_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="stage != null" >
        stage,
      </if>
      <if test="reason != null" >
        reason,
      </if>
      <if test="passTime != null" >
        pass_time,
      </if>
      <if test="activeTime != null" >
        active_time,
      </if>
      <if test="candidateTime != null" >
        candidate_time,
      </if>
      <if test="trainTime != null" >
        train_time,
      </if>
      <if test="candidateStatus != null" >
        candidate_status,
      </if>
      <if test="planTime != null" >
        plan_time,
      </if>
      <if test="planStatus != null" >
        plan_status,
      </if>
      <if test="drawTime != null" >
        draw_time,
      </if>
      <if test="drawStatus != null" >
        draw_status,
      </if>
      <if test="growTime != null" >
        grow_time,
      </if>
      <if test="growStatus != null" >
        grow_status,
      </if>
      <if test="positiveTime != null" >
        positive_time,
      </if>
      <if test="positiveStatus != null" >
        positive_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="partyId != null" >
        #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null" >
        #{branchId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=TINYINT},
      </if>
      <if test="applyTime != null" >
        #{applyTime,jdbcType=DATE},
      </if>
      <if test="fillTime != null" >
        #{fillTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="stage != null" >
        #{stage,jdbcType=TINYINT},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="passTime != null" >
        #{passTime,jdbcType=DATE},
      </if>
      <if test="activeTime != null" >
        #{activeTime,jdbcType=DATE},
      </if>
      <if test="candidateTime != null" >
        #{candidateTime,jdbcType=DATE},
      </if>
      <if test="trainTime != null" >
        #{trainTime,jdbcType=DATE},
      </if>
      <if test="candidateStatus != null" >
        #{candidateStatus,jdbcType=TINYINT},
      </if>
      <if test="planTime != null" >
        #{planTime,jdbcType=DATE},
      </if>
      <if test="planStatus != null" >
        #{planStatus,jdbcType=TINYINT},
      </if>
      <if test="drawTime != null" >
        #{drawTime,jdbcType=DATE},
      </if>
      <if test="drawStatus != null" >
        #{drawStatus,jdbcType=TINYINT},
      </if>
      <if test="growTime != null" >
        #{growTime,jdbcType=DATE},
      </if>
      <if test="growStatus != null" >
        #{growStatus,jdbcType=TINYINT},
      </if>
      <if test="positiveTime != null" >
        #{positiveTime,jdbcType=DATE},
      </if>
      <if test="positiveStatus != null" >
        #{positiveStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.MemberApplyExample" resultType="java.lang.Integer" >
    select count(*) from ow_member_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ow_member_apply
    <set >
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.partyId != null" >
        party_id = #{record.partyId,jdbcType=INTEGER},
      </if>
      <if test="record.branchId != null" >
        branch_id = #{record.branchId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.applyTime != null" >
        apply_time = #{record.applyTime,jdbcType=DATE},
      </if>
      <if test="record.fillTime != null" >
        fill_time = #{record.fillTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.stage != null" >
        stage = #{record.stage,jdbcType=TINYINT},
      </if>
      <if test="record.reason != null" >
        reason = #{record.reason,jdbcType=VARCHAR},
      </if>
      <if test="record.passTime != null" >
        pass_time = #{record.passTime,jdbcType=DATE},
      </if>
      <if test="record.activeTime != null" >
        active_time = #{record.activeTime,jdbcType=DATE},
      </if>
      <if test="record.candidateTime != null" >
        candidate_time = #{record.candidateTime,jdbcType=DATE},
      </if>
      <if test="record.trainTime != null" >
        train_time = #{record.trainTime,jdbcType=DATE},
      </if>
      <if test="record.candidateStatus != null" >
        candidate_status = #{record.candidateStatus,jdbcType=TINYINT},
      </if>
      <if test="record.planTime != null" >
        plan_time = #{record.planTime,jdbcType=DATE},
      </if>
      <if test="record.planStatus != null" >
        plan_status = #{record.planStatus,jdbcType=TINYINT},
      </if>
      <if test="record.drawTime != null" >
        draw_time = #{record.drawTime,jdbcType=DATE},
      </if>
      <if test="record.drawStatus != null" >
        draw_status = #{record.drawStatus,jdbcType=TINYINT},
      </if>
      <if test="record.growTime != null" >
        grow_time = #{record.growTime,jdbcType=DATE},
      </if>
      <if test="record.growStatus != null" >
        grow_status = #{record.growStatus,jdbcType=TINYINT},
      </if>
      <if test="record.positiveTime != null" >
        positive_time = #{record.positiveTime,jdbcType=DATE},
      </if>
      <if test="record.positiveStatus != null" >
        positive_status = #{record.positiveStatus,jdbcType=TINYINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ow_member_apply
    set user_id = #{record.userId,jdbcType=INTEGER},
      party_id = #{record.partyId,jdbcType=INTEGER},
      branch_id = #{record.branchId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      apply_time = #{record.applyTime,jdbcType=DATE},
      fill_time = #{record.fillTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      stage = #{record.stage,jdbcType=TINYINT},
      reason = #{record.reason,jdbcType=VARCHAR},
      pass_time = #{record.passTime,jdbcType=DATE},
      active_time = #{record.activeTime,jdbcType=DATE},
      candidate_time = #{record.candidateTime,jdbcType=DATE},
      train_time = #{record.trainTime,jdbcType=DATE},
      candidate_status = #{record.candidateStatus,jdbcType=TINYINT},
      plan_time = #{record.planTime,jdbcType=DATE},
      plan_status = #{record.planStatus,jdbcType=TINYINT},
      draw_time = #{record.drawTime,jdbcType=DATE},
      draw_status = #{record.drawStatus,jdbcType=TINYINT},
      grow_time = #{record.growTime,jdbcType=DATE},
      grow_status = #{record.growStatus,jdbcType=TINYINT},
      positive_time = #{record.positiveTime,jdbcType=DATE},
      positive_status = #{record.positiveStatus,jdbcType=TINYINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.MemberApply" >
    update ow_member_apply
    <set >
      <if test="partyId != null" >
        party_id = #{partyId,jdbcType=INTEGER},
      </if>
      <if test="branchId != null" >
        branch_id = #{branchId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="applyTime != null" >
        apply_time = #{applyTime,jdbcType=DATE},
      </if>
      <if test="fillTime != null" >
        fill_time = #{fillTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="stage != null" >
        stage = #{stage,jdbcType=TINYINT},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="passTime != null" >
        pass_time = #{passTime,jdbcType=DATE},
      </if>
      <if test="activeTime != null" >
        active_time = #{activeTime,jdbcType=DATE},
      </if>
      <if test="candidateTime != null" >
        candidate_time = #{candidateTime,jdbcType=DATE},
      </if>
      <if test="trainTime != null" >
        train_time = #{trainTime,jdbcType=DATE},
      </if>
      <if test="candidateStatus != null" >
        candidate_status = #{candidateStatus,jdbcType=TINYINT},
      </if>
      <if test="planTime != null" >
        plan_time = #{planTime,jdbcType=DATE},
      </if>
      <if test="planStatus != null" >
        plan_status = #{planStatus,jdbcType=TINYINT},
      </if>
      <if test="drawTime != null" >
        draw_time = #{drawTime,jdbcType=DATE},
      </if>
      <if test="drawStatus != null" >
        draw_status = #{drawStatus,jdbcType=TINYINT},
      </if>
      <if test="growTime != null" >
        grow_time = #{growTime,jdbcType=DATE},
      </if>
      <if test="growStatus != null" >
        grow_status = #{growStatus,jdbcType=TINYINT},
      </if>
      <if test="positiveTime != null" >
        positive_time = #{positiveTime,jdbcType=DATE},
      </if>
      <if test="positiveStatus != null" >
        positive_status = #{positiveStatus,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.MemberApply" >
    update ow_member_apply
    set party_id = #{partyId,jdbcType=INTEGER},
      branch_id = #{branchId,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      apply_time = #{applyTime,jdbcType=DATE},
      fill_time = #{fillTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      stage = #{stage,jdbcType=TINYINT},
      reason = #{reason,jdbcType=VARCHAR},
      pass_time = #{passTime,jdbcType=DATE},
      active_time = #{activeTime,jdbcType=DATE},
      candidate_time = #{candidateTime,jdbcType=DATE},
      train_time = #{trainTime,jdbcType=DATE},
      candidate_status = #{candidateStatus,jdbcType=TINYINT},
      plan_time = #{planTime,jdbcType=DATE},
      plan_status = #{planStatus,jdbcType=TINYINT},
      draw_time = #{drawTime,jdbcType=DATE},
      draw_status = #{drawStatus,jdbcType=TINYINT},
      grow_time = #{growTime,jdbcType=DATE},
      grow_status = #{growStatus,jdbcType=TINYINT},
      positive_time = #{positiveTime,jdbcType=DATE},
      positive_status = #{positiveStatus,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="domain.MemberApplyExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ow_member_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>