<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.dr.DrOnlinePostMapper">
  <resultMap id="BaseResultMap" type="domain.dr.DrOnlinePost">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="unit_post_id" jdbcType="INTEGER" property="unitPostId" />
    <result column="online_id" jdbcType="INTEGER" property="onlineId" />
    <result column="has_candidate" jdbcType="BIT" property="hasCandidate" />
    <result column="candidates" jdbcType="VARCHAR" property="candidates" />
    <result column="has_competitive" jdbcType="BIT" property="hasCompetitive" />
    <result column="competitive_num" jdbcType="INTEGER" property="competitiveNum" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, unit_post_id, online_id, has_candidate, candidates, has_competitive, competitive_num, 
    sort_order, remark
  </sql>
  <select id="selectByExample" parameterType="domain.dr.DrOnlinePostExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dr_online_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dr_online_post
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dr_online_post
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.dr.DrOnlinePostExample">
    delete from dr_online_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.dr.DrOnlinePost">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dr_online_post (unit_post_id, online_id, has_candidate, 
      candidates, has_competitive, competitive_num, 
      sort_order, remark)
    values (#{unitPostId,jdbcType=INTEGER}, #{onlineId,jdbcType=INTEGER}, #{hasCandidate,jdbcType=BIT}, 
      #{candidates,jdbcType=VARCHAR}, #{hasCompetitive,jdbcType=BIT}, #{competitiveNum,jdbcType=INTEGER}, 
      #{sortOrder,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.dr.DrOnlinePost">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dr_online_post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="unitPostId != null">
        unit_post_id,
      </if>
      <if test="onlineId != null">
        online_id,
      </if>
      <if test="hasCandidate != null">
        has_candidate,
      </if>
      <if test="candidates != null">
        candidates,
      </if>
      <if test="hasCompetitive != null">
        has_competitive,
      </if>
      <if test="competitiveNum != null">
        competitive_num,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="unitPostId != null">
        #{unitPostId,jdbcType=INTEGER},
      </if>
      <if test="onlineId != null">
        #{onlineId,jdbcType=INTEGER},
      </if>
      <if test="hasCandidate != null">
        #{hasCandidate,jdbcType=BIT},
      </if>
      <if test="candidates != null">
        #{candidates,jdbcType=VARCHAR},
      </if>
      <if test="hasCompetitive != null">
        #{hasCompetitive,jdbcType=BIT},
      </if>
      <if test="competitiveNum != null">
        #{competitiveNum,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.dr.DrOnlinePostExample" resultType="java.lang.Long">
    select count(*) from dr_online_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dr_online_post
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.unitPostId != null">
        unit_post_id = #{record.unitPostId,jdbcType=INTEGER},
      </if>
      <if test="record.onlineId != null">
        online_id = #{record.onlineId,jdbcType=INTEGER},
      </if>
      <if test="record.hasCandidate != null">
        has_candidate = #{record.hasCandidate,jdbcType=BIT},
      </if>
      <if test="record.candidates != null">
        candidates = #{record.candidates,jdbcType=VARCHAR},
      </if>
      <if test="record.hasCompetitive != null">
        has_competitive = #{record.hasCompetitive,jdbcType=BIT},
      </if>
      <if test="record.competitiveNum != null">
        competitive_num = #{record.competitiveNum,jdbcType=INTEGER},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dr_online_post
    set id = #{record.id,jdbcType=INTEGER},
      unit_post_id = #{record.unitPostId,jdbcType=INTEGER},
      online_id = #{record.onlineId,jdbcType=INTEGER},
      has_candidate = #{record.hasCandidate,jdbcType=BIT},
      candidates = #{record.candidates,jdbcType=VARCHAR},
      has_competitive = #{record.hasCompetitive,jdbcType=BIT},
      competitive_num = #{record.competitiveNum,jdbcType=INTEGER},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.dr.DrOnlinePost">
    update dr_online_post
    <set>
      <if test="unitPostId != null">
        unit_post_id = #{unitPostId,jdbcType=INTEGER},
      </if>
      <if test="onlineId != null">
        online_id = #{onlineId,jdbcType=INTEGER},
      </if>
      <if test="hasCandidate != null">
        has_candidate = #{hasCandidate,jdbcType=BIT},
      </if>
      <if test="candidates != null">
        candidates = #{candidates,jdbcType=VARCHAR},
      </if>
      <if test="hasCompetitive != null">
        has_competitive = #{hasCompetitive,jdbcType=BIT},
      </if>
      <if test="competitiveNum != null">
        competitive_num = #{competitiveNum,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null">
        sort_order = #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.dr.DrOnlinePost">
    update dr_online_post
    set unit_post_id = #{unitPostId,jdbcType=INTEGER},
      online_id = #{onlineId,jdbcType=INTEGER},
      has_candidate = #{hasCandidate,jdbcType=BIT},
      candidates = #{candidates,jdbcType=VARCHAR},
      has_competitive = #{hasCompetitive,jdbcType=BIT},
      competitive_num = #{competitiveNum,jdbcType=INTEGER},
      sort_order = #{sortOrder,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.dr.DrOnlinePostExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dr_online_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>