<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.dr.DrOnlinePostViewMapper">
  <resultMap id="BaseResultMap" type="domain.dr.DrOnlinePostView">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="unit_post_id" jdbcType="INTEGER" property="unitPostId" />
    <result column="online_id" jdbcType="INTEGER" property="onlineId" />
    <result column="has_candidate" jdbcType="BIT" property="hasCandidate" />
    <result column="candidates" jdbcType="VARCHAR" property="candidates" />
    <result column="has_competitive" jdbcType="BIT" property="hasCompetitive" />
    <result column="competitive_num" jdbcType="INTEGER" property="competitiveNum" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="online_type" jdbcType="INTEGER" property="onlineType" />
    <result column="exist_num" jdbcType="INTEGER" property="existNum" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="admin_level" jdbcType="INTEGER" property="adminLevel" />
    <result column="post_type" jdbcType="INTEGER" property="postType" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, unit_post_id, online_id, has_candidate, candidates, has_competitive, competitive_num, 
    sort_order, remark, online_type, exist_num, name, job, admin_level, post_type, unit_id, 
    type_id
  </sql>
  <select id="selectByExample" parameterType="domain.dr.DrOnlinePostViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dr_online_post_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="domain.dr.DrOnlinePostViewExample">
    delete from dr_online_post_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.dr.DrOnlinePostView">
    insert into dr_online_post_view (id, unit_post_id, online_id, 
      has_candidate, candidates, has_competitive, 
      competitive_num, sort_order, remark, 
      online_type, exist_num, name, 
      job, admin_level, post_type, 
      unit_id, type_id)
    values (#{id,jdbcType=INTEGER}, #{unitPostId,jdbcType=INTEGER}, #{onlineId,jdbcType=INTEGER}, 
      #{hasCandidate,jdbcType=BIT}, #{candidates,jdbcType=VARCHAR}, #{hasCompetitive,jdbcType=BIT}, 
      #{competitiveNum,jdbcType=INTEGER}, #{sortOrder,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR}, 
      #{onlineType,jdbcType=INTEGER}, #{existNum,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{job,jdbcType=VARCHAR}, #{adminLevel,jdbcType=INTEGER}, #{postType,jdbcType=INTEGER}, 
      #{unitId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="domain.dr.DrOnlinePostView">
    insert into dr_online_post_view
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="unitPostId != null">
        unit_post_id,
      </if>
      <if test="onlineId != null">
        online_id,
      </if>
      <if test="hasCandidate != null">
        has_candidate,
      </if>
      <if test="candidates != null">
        candidates,
      </if>
      <if test="hasCompetitive != null">
        has_competitive,
      </if>
      <if test="competitiveNum != null">
        competitive_num,
      </if>
      <if test="sortOrder != null">
        sort_order,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="onlineType != null">
        online_type,
      </if>
      <if test="existNum != null">
        exist_num,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="adminLevel != null">
        admin_level,
      </if>
      <if test="postType != null">
        post_type,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="unitPostId != null">
        #{unitPostId,jdbcType=INTEGER},
      </if>
      <if test="onlineId != null">
        #{onlineId,jdbcType=INTEGER},
      </if>
      <if test="hasCandidate != null">
        #{hasCandidate,jdbcType=BIT},
      </if>
      <if test="candidates != null">
        #{candidates,jdbcType=VARCHAR},
      </if>
      <if test="hasCompetitive != null">
        #{hasCompetitive,jdbcType=BIT},
      </if>
      <if test="competitiveNum != null">
        #{competitiveNum,jdbcType=INTEGER},
      </if>
      <if test="sortOrder != null">
        #{sortOrder,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="onlineType != null">
        #{onlineType,jdbcType=INTEGER},
      </if>
      <if test="existNum != null">
        #{existNum,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="adminLevel != null">
        #{adminLevel,jdbcType=INTEGER},
      </if>
      <if test="postType != null">
        #{postType,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.dr.DrOnlinePostViewExample" resultType="java.lang.Long">
    select count(*) from dr_online_post_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dr_online_post_view
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.unitPostId != null">
        unit_post_id = #{record.unitPostId,jdbcType=INTEGER},
      </if>
      <if test="record.onlineId != null">
        online_id = #{record.onlineId,jdbcType=INTEGER},
      </if>
      <if test="record.hasCandidate != null">
        has_candidate = #{record.hasCandidate,jdbcType=BIT},
      </if>
      <if test="record.candidates != null">
        candidates = #{record.candidates,jdbcType=VARCHAR},
      </if>
      <if test="record.hasCompetitive != null">
        has_competitive = #{record.hasCompetitive,jdbcType=BIT},
      </if>
      <if test="record.competitiveNum != null">
        competitive_num = #{record.competitiveNum,jdbcType=INTEGER},
      </if>
      <if test="record.sortOrder != null">
        sort_order = #{record.sortOrder,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.onlineType != null">
        online_type = #{record.onlineType,jdbcType=INTEGER},
      </if>
      <if test="record.existNum != null">
        exist_num = #{record.existNum,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null">
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.adminLevel != null">
        admin_level = #{record.adminLevel,jdbcType=INTEGER},
      </if>
      <if test="record.postType != null">
        post_type = #{record.postType,jdbcType=INTEGER},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dr_online_post_view
    set id = #{record.id,jdbcType=INTEGER},
      unit_post_id = #{record.unitPostId,jdbcType=INTEGER},
      online_id = #{record.onlineId,jdbcType=INTEGER},
      has_candidate = #{record.hasCandidate,jdbcType=BIT},
      candidates = #{record.candidates,jdbcType=VARCHAR},
      has_competitive = #{record.hasCompetitive,jdbcType=BIT},
      competitive_num = #{record.competitiveNum,jdbcType=INTEGER},
      sort_order = #{record.sortOrder,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      online_type = #{record.onlineType,jdbcType=INTEGER},
      exist_num = #{record.existNum,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      admin_level = #{record.adminLevel,jdbcType=INTEGER},
      post_type = #{record.postType,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.dr.DrOnlinePostViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dr_online_post_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>