<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.dr.common.IDrMapper">
    <sql id="selectUserList_where">
        <where>
            u.id=i.user_id
            <if test="status != null">
                and i.status = #{status}
            </if>
            <if test="search != null">
                and (u.username like #{search} or u.realname like #{search} or u.code like #{search})
            </if>
        </where>
    </sql>
    <select id="selectMemberList" resultMap="persistence.dr.DrMemberMapper.BaseResultMap" parameterType="map">
        select i.* from dr_member i, sys_user_view u
        <include refid="selectUserList_where"/>
        order by i.status asc, i.sort_order desc
    </select>
    <select id="countMemberList" parameterType="map" resultType="java.lang.Integer">
        select count(i.id) from dr_member i, sys_user_view u
        <include refid="selectUserList_where"/>
    </select>

    <insert id="batchInsert_result" parameterType="map">
        insert into dr_online_result (id, online_id, post_id,user_id,
        realname, inspector_id, inspector_type_id,
        status, remark)
        VALUES
        <foreach collection="records" item="item" index="index" separator=",">
            (#{item.id,jdbcType=INTEGER}, #{item.onlineId,jdbcType=INTEGER}, #{item.postId,jdbcType=INTEGER}, #{item.userId,jdbcType=INTEGER},
            #{item.realname,jdbcType=VARCHAR}, #{item.inspectorId,jdbcType=INTEGER},
            #{item.inspectorTypeId,jdbcType=INTEGER},
            #{item.status,jdbcType=BIT}, #{item.remark,jdbcType=VARCHAR})
        </foreach>
    </insert>

    <sql id="selectResultList_where">
        and r.realname is not null
        <if test="onlineId != null">
            and r.online_id = #{onlineId}
        </if>
        <if test="realname != null">
            and r.realname like #{realname}
        </if>
        <if test="postId != null">
            and r.post_id = #{postId}
        </if>
        <if test="typeIds != null and typeIds.size > 0">
            and r.inspector_type_id in
            <foreach collection="typeIds" open="(" close = ")" item = "typeId" separator=",">
                #{typeId}
            </foreach>
        </if>
        <if test="unitId != null">
            and i.unit_id = #{unitId}
        </if>
    </sql>

    <!--所有的统计结果/参评人过滤-->
    <select id="selectResultList" parameterType="map" resultType="persistence.dr.common.DrFinalResult">
        select r.online_id as onlineId, r.post_id as postId, p.name as postName,  r.realname, count(*) ballot
        from dr_online_result r, dr_online_post p, unit_post up, dr_online_inspector i
        <where>
            r.post_id=p.id and p.unit_post_id=up.id and r.inspector_id=i.id
            <include refid="selectResultList_where"/>
        </where>
        group by r.post_id, r.realname order by p.sort_order desc, count(*) desc
    </select>
    <select id="countResult" parameterType="map" resultType="java.lang.Integer" >
        select count(*) from (select r.* from dr_online_result r, dr_online_inspector i
        <where>
            r.inspector_id=i.id
            <include refid="selectResultList_where"/>
        </where>
        group by r.post_id, r.realname)tmp
    </select>
</mapper>