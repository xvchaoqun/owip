<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.dr.DrOnlineMapper">
  <resultMap id="BaseResultMap" type="domain.dr.DrOnline">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="record_id" jdbcType="INTEGER" property="recordId" />
    <result column="year" jdbcType="SMALLINT" property="year" />
    <result column="recommend_date" jdbcType="DATE" property="recommendDate" />
    <result column="seq" jdbcType="INTEGER" property="seq" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="chief_member_id" jdbcType="INTEGER" property="chiefMemberId" />
    <result column="members" jdbcType="VARCHAR" property="members" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="is_deleteed" jdbcType="BIT" property="isDeleteed" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="domain.dr.DrOnline">
    <result column="notice" jdbcType="LONGVARCHAR" property="notice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, record_id, year, recommend_date, seq, status, type, chief_member_id, members, 
    start_time, end_time, is_deleteed, remark
  </sql>
  <sql id="Blob_Column_List">
    notice
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="domain.dr.DrOnlineExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dr_online
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="domain.dr.DrOnlineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dr_online
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dr_online
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dr_online
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.dr.DrOnlineExample">
    delete from dr_online
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.dr.DrOnline">
    insert into dr_online (id, record_id, year, 
      recommend_date, seq, status, 
      type, chief_member_id, members, 
      start_time, end_time, is_deleteed, 
      remark, notice)
    values (#{id,jdbcType=INTEGER}, #{recordId,jdbcType=INTEGER}, #{year,jdbcType=SMALLINT}, 
      #{recommendDate,jdbcType=DATE}, #{seq,jdbcType=INTEGER}, #{status,jdbcType=TINYINT}, 
      #{type,jdbcType=INTEGER}, #{chiefMemberId,jdbcType=INTEGER}, #{members,jdbcType=VARCHAR}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, #{isDeleteed,jdbcType=BIT}, 
      #{remark,jdbcType=VARCHAR}, #{notice,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.dr.DrOnline">
    insert into dr_online
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="recordId != null">
        record_id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="recommendDate != null">
        recommend_date,
      </if>
      <if test="seq != null">
        seq,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="chiefMemberId != null">
        chief_member_id,
      </if>
      <if test="members != null">
        members,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="isDeleteed != null">
        is_deleteed,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="notice != null">
        notice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="recordId != null">
        #{recordId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=SMALLINT},
      </if>
      <if test="recommendDate != null">
        #{recommendDate,jdbcType=DATE},
      </if>
      <if test="seq != null">
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="chiefMemberId != null">
        #{chiefMemberId,jdbcType=INTEGER},
      </if>
      <if test="members != null">
        #{members,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleteed != null">
        #{isDeleteed,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="notice != null">
        #{notice,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.dr.DrOnlineExample" resultType="java.lang.Long">
    select count(*) from dr_online
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dr_online
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.recordId != null">
        record_id = #{record.recordId,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=SMALLINT},
      </if>
      <if test="record.recommendDate != null">
        recommend_date = #{record.recommendDate,jdbcType=DATE},
      </if>
      <if test="record.seq != null">
        seq = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.chiefMemberId != null">
        chief_member_id = #{record.chiefMemberId,jdbcType=INTEGER},
      </if>
      <if test="record.members != null">
        members = #{record.members,jdbcType=VARCHAR},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDeleteed != null">
        is_deleteed = #{record.isDeleteed,jdbcType=BIT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.notice != null">
        notice = #{record.notice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update dr_online
    set id = #{record.id,jdbcType=INTEGER},
      record_id = #{record.recordId,jdbcType=INTEGER},
      year = #{record.year,jdbcType=SMALLINT},
      recommend_date = #{record.recommendDate,jdbcType=DATE},
      seq = #{record.seq,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      type = #{record.type,jdbcType=INTEGER},
      chief_member_id = #{record.chiefMemberId,jdbcType=INTEGER},
      members = #{record.members,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      is_deleteed = #{record.isDeleteed,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR},
      notice = #{record.notice,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dr_online
    set id = #{record.id,jdbcType=INTEGER},
      record_id = #{record.recordId,jdbcType=INTEGER},
      year = #{record.year,jdbcType=SMALLINT},
      recommend_date = #{record.recommendDate,jdbcType=DATE},
      seq = #{record.seq,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      type = #{record.type,jdbcType=INTEGER},
      chief_member_id = #{record.chiefMemberId,jdbcType=INTEGER},
      members = #{record.members,jdbcType=VARCHAR},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      is_deleteed = #{record.isDeleteed,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.dr.DrOnline">
    update dr_online
    <set>
      <if test="recordId != null">
        record_id = #{recordId,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=SMALLINT},
      </if>
      <if test="recommendDate != null">
        recommend_date = #{recommendDate,jdbcType=DATE},
      </if>
      <if test="seq != null">
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="chiefMemberId != null">
        chief_member_id = #{chiefMemberId,jdbcType=INTEGER},
      </if>
      <if test="members != null">
        members = #{members,jdbcType=VARCHAR},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleteed != null">
        is_deleteed = #{isDeleteed,jdbcType=BIT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="notice != null">
        notice = #{notice,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="domain.dr.DrOnline">
    update dr_online
    set record_id = #{recordId,jdbcType=INTEGER},
      year = #{year,jdbcType=SMALLINT},
      recommend_date = #{recommendDate,jdbcType=DATE},
      seq = #{seq,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      type = #{type,jdbcType=INTEGER},
      chief_member_id = #{chiefMemberId,jdbcType=INTEGER},
      members = #{members,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      is_deleteed = #{isDeleteed,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      notice = #{notice,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.dr.DrOnline">
    update dr_online
    set record_id = #{recordId,jdbcType=INTEGER},
      year = #{year,jdbcType=SMALLINT},
      recommend_date = #{recommendDate,jdbcType=DATE},
      seq = #{seq,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      type = #{type,jdbcType=INTEGER},
      chief_member_id = #{chiefMemberId,jdbcType=INTEGER},
      members = #{members,jdbcType=VARCHAR},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      is_deleteed = #{isDeleteed,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="domain.dr.DrOnlineExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dr_online
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="domain.dr.DrOnlineExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dr_online
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>