<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.dr.DrOnlineInspectorLogMapper">
  <resultMap id="BaseResultMap" type="domain.dr.DrOnlineInspectorLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="online_id" jdbcType="INTEGER" property="onlineId" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="total_count" jdbcType="INTEGER" property="totalCount" />
    <result column="finish_count" jdbcType="INTEGER" property="finishCount" />
    <result column="pub_count" jdbcType="INTEGER" property="pubCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="export_count" jdbcType="INTEGER" property="exportCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, online_id, type_id, unit_id, remark, total_count, finish_count, pub_count, create_time, 
    export_count
  </sql>
  <select id="selectByExample" parameterType="domain.dr.DrOnlineInspectorLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dr_online_inspector_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dr_online_inspector_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dr_online_inspector_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.dr.DrOnlineInspectorLogExample">
    delete from dr_online_inspector_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.dr.DrOnlineInspectorLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dr_online_inspector_log (online_id, type_id, unit_id, 
      remark, total_count, finish_count, 
      pub_count, create_time, export_count
      )
    values (#{onlineId,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, #{unitId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{totalCount,jdbcType=INTEGER}, #{finishCount,jdbcType=INTEGER}, 
      #{pubCount,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{exportCount,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.dr.DrOnlineInspectorLog">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into dr_online_inspector_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="onlineId != null">
        online_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="totalCount != null">
        total_count,
      </if>
      <if test="finishCount != null">
        finish_count,
      </if>
      <if test="pubCount != null">
        pub_count,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="exportCount != null">
        export_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="onlineId != null">
        #{onlineId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="totalCount != null">
        #{totalCount,jdbcType=INTEGER},
      </if>
      <if test="finishCount != null">
        #{finishCount,jdbcType=INTEGER},
      </if>
      <if test="pubCount != null">
        #{pubCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exportCount != null">
        #{exportCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.dr.DrOnlineInspectorLogExample" resultType="java.lang.Long">
    select count(*) from dr_online_inspector_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dr_online_inspector_log
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.onlineId != null">
        online_id = #{record.onlineId,jdbcType=INTEGER},
      </if>
      <if test="record.typeId != null">
        type_id = #{record.typeId,jdbcType=INTEGER},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.totalCount != null">
        total_count = #{record.totalCount,jdbcType=INTEGER},
      </if>
      <if test="record.finishCount != null">
        finish_count = #{record.finishCount,jdbcType=INTEGER},
      </if>
      <if test="record.pubCount != null">
        pub_count = #{record.pubCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.exportCount != null">
        export_count = #{record.exportCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dr_online_inspector_log
    set id = #{record.id,jdbcType=INTEGER},
      online_id = #{record.onlineId,jdbcType=INTEGER},
      type_id = #{record.typeId,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      total_count = #{record.totalCount,jdbcType=INTEGER},
      finish_count = #{record.finishCount,jdbcType=INTEGER},
      pub_count = #{record.pubCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      export_count = #{record.exportCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.dr.DrOnlineInspectorLog">
    update dr_online_inspector_log
    <set>
      <if test="onlineId != null">
        online_id = #{onlineId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null">
        type_id = #{typeId,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="totalCount != null">
        total_count = #{totalCount,jdbcType=INTEGER},
      </if>
      <if test="finishCount != null">
        finish_count = #{finishCount,jdbcType=INTEGER},
      </if>
      <if test="pubCount != null">
        pub_count = #{pubCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="exportCount != null">
        export_count = #{exportCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.dr.DrOnlineInspectorLog">
    update dr_online_inspector_log
    set online_id = #{onlineId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      unit_id = #{unitId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      total_count = #{totalCount,jdbcType=INTEGER},
      finish_count = #{finishCount,jdbcType=INTEGER},
      pub_count = #{pubCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      export_count = #{exportCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.dr.DrOnlineInspectorLogExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dr_online_inspector_log
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>