<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.ext.ExtRetireSalaryMapper">
  <resultMap id="BaseResultMap" type="domain.ext.ExtRetireSalary">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="zgh" jdbcType="VARCHAR" property="zgh" />
    <result column="rq" jdbcType="VARCHAR" property="rq" />
    <result column="base" jdbcType="DECIMAL" property="base" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, zgh, rq, base
  </sql>
  <select id="selectByExample" parameterType="domain.ext.ExtRetireSalaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ext_retire_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ext_retire_salary
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ext_retire_salary
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.ext.ExtRetireSalaryExample">
    delete from ext_retire_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.ext.ExtRetireSalary">
    insert into ext_retire_salary (id, zgh, rq, 
      base)
    values (#{id,jdbcType=INTEGER}, #{zgh,jdbcType=VARCHAR}, #{rq,jdbcType=VARCHAR}, 
      #{base,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="domain.ext.ExtRetireSalary">
    insert into ext_retire_salary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="zgh != null">
        zgh,
      </if>
      <if test="rq != null">
        rq,
      </if>
      <if test="base != null">
        base,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="zgh != null">
        #{zgh,jdbcType=VARCHAR},
      </if>
      <if test="rq != null">
        #{rq,jdbcType=VARCHAR},
      </if>
      <if test="base != null">
        #{base,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.ext.ExtRetireSalaryExample" resultType="java.lang.Long">
    select count(*) from ext_retire_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ext_retire_salary
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.zgh != null">
        zgh = #{record.zgh,jdbcType=VARCHAR},
      </if>
      <if test="record.rq != null">
        rq = #{record.rq,jdbcType=VARCHAR},
      </if>
      <if test="record.base != null">
        base = #{record.base,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ext_retire_salary
    set id = #{record.id,jdbcType=INTEGER},
      zgh = #{record.zgh,jdbcType=VARCHAR},
      rq = #{record.rq,jdbcType=VARCHAR},
      base = #{record.base,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.ext.ExtRetireSalary">
    update ext_retire_salary
    <set>
      <if test="zgh != null">
        zgh = #{zgh,jdbcType=VARCHAR},
      </if>
      <if test="rq != null">
        rq = #{rq,jdbcType=VARCHAR},
      </if>
      <if test="base != null">
        base = #{base,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.ext.ExtRetireSalary">
    update ext_retire_salary
    set zgh = #{zgh,jdbcType=VARCHAR},
      rq = #{rq,jdbcType=VARCHAR},
      base = #{base,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="domain.ext.ExtRetireSalaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ext_retire_salary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>