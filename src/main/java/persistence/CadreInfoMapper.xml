<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.CadreInfoMapper" >
  <resultMap id="BaseResultMap" type="domain.CadreInfo" >
    <id column="cadre_id" property="cadreId" jdbcType="INTEGER" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="office_phone" property="officePhone" jdbcType="VARCHAR" />
    <result column="home_phone" property="homePhone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="work" property="work" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    cadre_id, mobile, office_phone, home_phone, email, work
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="domain.CadreInfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_cadre_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from base_cadre_info
    where cadre_id = #{cadreId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from base_cadre_info
    where cadre_id = #{cadreId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.CadreInfoExample" >
    delete from base_cadre_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.CadreInfo" >
    insert into base_cadre_info (cadre_id, mobile, office_phone, 
      home_phone, email, work
      )
    values (#{cadreId,jdbcType=INTEGER}, #{mobile,jdbcType=VARCHAR}, #{officePhone,jdbcType=VARCHAR}, 
      #{homePhone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{work,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="domain.CadreInfo" >
    insert into base_cadre_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="cadreId != null" >
        cadre_id,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="officePhone != null" >
        office_phone,
      </if>
      <if test="homePhone != null" >
        home_phone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="work != null" >
        work,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="cadreId != null" >
        #{cadreId,jdbcType=INTEGER},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="officePhone != null" >
        #{officePhone,jdbcType=VARCHAR},
      </if>
      <if test="homePhone != null" >
        #{homePhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="work != null" >
        #{work,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.CadreInfoExample" resultType="java.lang.Integer" >
    select count(*) from base_cadre_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update base_cadre_info
    <set >
      <if test="record.cadreId != null" >
        cadre_id = #{record.cadreId,jdbcType=INTEGER},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.officePhone != null" >
        office_phone = #{record.officePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.homePhone != null" >
        home_phone = #{record.homePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.work != null" >
        work = #{record.work,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update base_cadre_info
    set cadre_id = #{record.cadreId,jdbcType=INTEGER},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      office_phone = #{record.officePhone,jdbcType=VARCHAR},
      home_phone = #{record.homePhone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      work = #{record.work,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.CadreInfo" >
    update base_cadre_info
    <set >
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="officePhone != null" >
        office_phone = #{officePhone,jdbcType=VARCHAR},
      </if>
      <if test="homePhone != null" >
        home_phone = #{homePhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="work != null" >
        work = #{work,jdbcType=VARCHAR},
      </if>
    </set>
    where cadre_id = #{cadreId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.CadreInfo" >
    update base_cadre_info
    set mobile = #{mobile,jdbcType=VARCHAR},
      office_phone = #{officePhone,jdbcType=VARCHAR},
      home_phone = #{homePhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      work = #{work,jdbcType=VARCHAR}
    where cadre_id = #{cadreId,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="domain.CadreInfoExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from base_cadre_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>