<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.modify.ModifyBaseApplyMapper" >
  <resultMap id="BaseResultMap" type="domain.modify.ModifyBaseApply" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="apply_user_id" property="applyUserId" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="ip" property="ip" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="check_time" property="checkTime" jdbcType="TIMESTAMP" />
    <result column="check_ip" property="checkIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, apply_user_id, user_id, create_time, ip, status, check_time, check_ip
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="domain.modify.ModifyBaseApplyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from modify_base_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from modify_base_apply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from modify_base_apply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.modify.ModifyBaseApplyExample" >
    delete from modify_base_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert keyProperty="id" id="insert" parameterType="domain.modify.ModifyBaseApply" >
    insert into modify_base_apply (id, apply_user_id, user_id, 
      create_time, ip, status, 
      check_time, check_ip)
    values (#{id,jdbcType=INTEGER}, #{applyUserId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{ip,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, 
      #{checkTime,jdbcType=TIMESTAMP}, #{checkIp,jdbcType=VARCHAR})
  </insert>
  <insert keyProperty="id" id="insertSelective" parameterType="domain.modify.ModifyBaseApply" >
    insert into modify_base_apply
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="applyUserId != null" >
        apply_user_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="ip != null" >
        ip,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="checkTime != null" >
        check_time,
      </if>
      <if test="checkIp != null" >
        check_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="applyUserId != null" >
        #{applyUserId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="checkTime != null" >
        #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkIp != null" >
        #{checkIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.modify.ModifyBaseApplyExample" resultType="java.lang.Integer" >
    select count(*) from modify_base_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update modify_base_apply
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.applyUserId != null" >
        apply_user_id = #{record.applyUserId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.ip != null" >
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.checkTime != null" >
        check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.checkIp != null" >
        check_ip = #{record.checkIp,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update modify_base_apply
    set id = #{record.id,jdbcType=INTEGER},
      apply_user_id = #{record.applyUserId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      ip = #{record.ip,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=TINYINT},
      check_time = #{record.checkTime,jdbcType=TIMESTAMP},
      check_ip = #{record.checkIp,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.modify.ModifyBaseApply" >
    update modify_base_apply
    <set >
      <if test="applyUserId != null" >
        apply_user_id = #{applyUserId,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null" >
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="checkTime != null" >
        check_time = #{checkTime,jdbcType=TIMESTAMP},
      </if>
      <if test="checkIp != null" >
        check_ip = #{checkIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.modify.ModifyBaseApply" >
    update modify_base_apply
    set apply_user_id = #{applyUserId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      check_time = #{checkTime,jdbcType=TIMESTAMP},
      check_ip = #{checkIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select resultMap="BaseResultMap" parameterType="domain.modify.ModifyBaseApplyExample" id="selectByExampleWithRowbounds" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from modify_base_apply
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>