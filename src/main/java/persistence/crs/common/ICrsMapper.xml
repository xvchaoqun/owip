<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="persistence.crs.common.ICrsMapper">

    <resultMap id="ExpertBaseResultMap" type="persistence.common.bean.ICrsExpert"
               extends="persistence.crs.CrsExpertViewMapper.BaseResultMap">
        <result column="post_count" jdbcType="INTEGER" property="postCount"/>
    </resultMap>

    <resultMap id="PostBaseResultMap" type="persistence.common.bean.ICrsPost"
               extends="persistence.crs.CrsPostMapper.BaseResultMap">
        <result column="applicant_id" jdbcType="INTEGER" property="applicantId"/>
        <result column="applicant_is_quit" jdbcType="BIT" property="applicantIsQuit"/>
        <result column="info_check_status" jdbcType="TINYINT" property="infoCheckStatus"/>
        <result column="require_check_status" jdbcType="TINYINT" property="requireCheckStatus"/>
        <result column="is_require_check_pass" jdbcType="BIT" property="isRequireCheckPass"/>
    </resultMap>

    <resultMap id="statApplicantResultMap" type="persistence.common.bean.CrsStatApplicantBean">
        <result column="user_id" jdbcType="INTEGER" property="userId"/>
        <result column="realname" jdbcType="VARCHAR" property="realname"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="total_count" jdbcType="TINYINT" property="totalCount"/>
        <result column="pass_count" jdbcType="TINYINT" property="passCount"/>
    </resultMap>

    <select id="statApplicantList" resultMap="statApplicantResultMap" parameterType="map">
        select ca.user_id, cv.realname, cv.code, cv.title, count(*) as total_count, sum(if(ca.is_require_check_pass, 1, 0)) as pass_count from crs_applicant_view ca
            left join crs_post cp on cp.id = ca.post_id
            left join cadre_view cv on cv.user_id=ca.user_id
            where ca.status=#{applicantStatus} and cp.status=#{postStatus} group by ca.user_id order by ca.id asc
    </select>
    <select id="countStatApplicants" parameterType="map" resultType="java.lang.Integer">
        select count(DISTINCT  ca.user_id) from crs_applicant_view ca
            left join crs_post cp on cp.id = ca.post_id
            where ca.status=#{applicantStatus} and cp.status=#{postStatus}
    </select>

    <update id="recommend" parameterType="map">
        update crs_applicant
        <set>
            is_recommend = #{record.isRecommend},
            recommend_ow = #{record.recommendOw},
            recommend_cadre = #{record.recommendCadre},
            recommend_crowd = #{record.recommendCrowd},
            <if test="record.isRecommend and record.recommendPdf != null">
                recommend_pdf = #{record.recommendPdf},
            </if>
            <if test="!record.isRecommend">
                recommend_pdf = null,
            </if>
        </set>
        where id=#{record.id}
    </update>

    <sql id="searchExperts">
        from crs_expert_view ce left join
        (select cpe.user_id, count(cp.id) as post_count from crs_post_expert cpe,
        crs_post cp where cpe.post_id=cp.id and cp.status!=3
        <if test="meetingTimeStart!=null">
            and cp.meeting_time >= #{meetingTimeStart}
        </if>
        <if test="meetingTimeEnd!=null">
            and cp.meeting_time <![CDATA[<=]]> #{meetingTimeEnd}
        </if>
        group by cpe.user_id
        ) p on p.user_id=ce.user_id
        <where>
            <if test="userId!=null">
                and ce.user_id = #{userId}
            </if>
            <if test="status!=null">
                and ce.status = #{status}
            </if>
        </where>
    </sql>
    <select id="findExperts" resultMap="ExpertBaseResultMap" parameterType="map">
        select ce.*, if(isnull(p.post_count), 0, p.post_count) as post_count
        <include refid="searchExperts"/>
        <if test="orderType==null || orderType==0">
            order by ce.cadre_status desc, ce.cadre_sort_order desc
        </if>
        <if test="orderType==1">
            order by post_count desc, ce.cadre_status desc, ce.cadre_sort_order desc
        </if>
    </select>
    <select id="countExperts" parameterType="map" resultType="java.lang.Integer">
        select count(DISTINCT ce.id)
        <include refid="searchExperts"/>
    </select>


    <sql id="searchPosts">
        from crs_post cp, crs_applicant_view ca
        where ca.user_id=#{userId} and ca.status=1 and ca.post_id=cp.id
        <if test="isQuit!=null">
            and ca.is_quit=#{isQuit}
        </if>
        <if test="postStatusList!=null and postStatusList.size>0">
            and cp.status in
            <foreach collection="postStatusList" item="st"
                     index="index" open="(" close=")" separator=",">
                #{st}
            </foreach>
        </if>
    </sql>
    <select id="findUserApplyCrsPosts" resultMap="PostBaseResultMap" parameterType="map">
        select cp.*, ca.id as applicant_id, ca.is_quit as applicant_is_quit, ca.is_require_check_pass
        <include refid="searchPosts"/>
        order by cp.create_time desc
    </select>
    <select id="countUserApplyCrsPosts" parameterType="map" resultType="java.lang.Integer">
        select count(cp.id)
        <include refid="searchPosts"/>
    </select>
</mapper>