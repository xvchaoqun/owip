<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.crs.CrsPostMapper">
  <resultMap id="BaseResultMap" type="domain.crs.CrsPost">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="seq" jdbcType="INTEGER" property="seq" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="admin_level" jdbcType="INTEGER" property="adminLevel" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="notice" jdbcType="VARCHAR" property="notice" />
    <result column="post_require_id" jdbcType="INTEGER" property="postRequireId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="enroll_status" jdbcType="TINYINT" property="enrollStatus" />
    <result column="meeting_time" jdbcType="TIMESTAMP" property="meetingTime" />
    <result column="meeting_address" jdbcType="VARCHAR" property="meetingAddress" />
    <result column="report_deadline" jdbcType="TIMESTAMP" property="reportDeadline" />
    <result column="quit_deadline" jdbcType="TIMESTAMP" property="quitDeadline" />
    <result column="ppt_deadline" jdbcType="TIMESTAMP" property="pptDeadline" />
    <result column="ppt_upload_closed" jdbcType="BIT" property="pptUploadClosed" />
    <result column="meeting_status" jdbcType="BIT" property="meetingStatus" />
    <result column="committee_status" jdbcType="BIT" property="committeeStatus" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pub_status" jdbcType="TINYINT" property="pubStatus" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="stat_give_count" jdbcType="INTEGER" property="statGiveCount" />
    <result column="stat_back_count" jdbcType="INTEGER" property="statBackCount" />
    <result column="stat_file" jdbcType="VARCHAR" property="statFile" />
    <result column="stat_file_name" jdbcType="VARCHAR" property="statFileName" />
    <result column="stat_date" jdbcType="DATE" property="statDate" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="domain.crs.CrsPostWithBLOBs">
    <result column="post_duty" jdbcType="LONGVARCHAR" property="postDuty" />
    <result column="requirement" jdbcType="LONGVARCHAR" property="requirement" />
    <result column="qualification" jdbcType="LONGVARCHAR" property="qualification" />
    <result column="meeting_notice" jdbcType="LONGVARCHAR" property="meetingNotice" />
    <result column="meeting_summary" jdbcType="LONGVARCHAR" property="meetingSummary" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, year, type, seq, name, job, admin_level, unit_id, num, notice, post_require_id, 
    start_time, end_time, enroll_status, meeting_time, meeting_address, report_deadline, 
    quit_deadline, ppt_deadline, ppt_upload_closed, meeting_status, committee_status, 
    remark, create_time, pub_status, status, stat_give_count, stat_back_count, stat_file, 
    stat_file_name, stat_date
  </sql>
  <sql id="Blob_Column_List">
    post_duty, requirement, qualification, meeting_notice, meeting_summary
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="domain.crs.CrsPostExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from crs_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="domain.crs.CrsPostExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from crs_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from crs_post
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from crs_post
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="domain.crs.CrsPostExample">
    delete from crs_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="domain.crs.CrsPostWithBLOBs">
    insert into crs_post (id, year, type, 
      seq, name, job, admin_level, 
      unit_id, num, notice, 
      post_require_id, start_time, end_time, 
      enroll_status, meeting_time, meeting_address, 
      report_deadline, quit_deadline, ppt_deadline, 
      ppt_upload_closed, meeting_status, committee_status, 
      remark, create_time, pub_status, 
      status, stat_give_count, stat_back_count, 
      stat_file, stat_file_name, stat_date, 
      post_duty, requirement, qualification, 
      meeting_notice, meeting_summary)
    values (#{id,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, #{type,jdbcType=TINYINT}, 
      #{seq,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{job,jdbcType=VARCHAR}, #{adminLevel,jdbcType=INTEGER}, 
      #{unitId,jdbcType=INTEGER}, #{num,jdbcType=INTEGER}, #{notice,jdbcType=VARCHAR}, 
      #{postRequireId,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP}, 
      #{enrollStatus,jdbcType=TINYINT}, #{meetingTime,jdbcType=TIMESTAMP}, #{meetingAddress,jdbcType=VARCHAR}, 
      #{reportDeadline,jdbcType=TIMESTAMP}, #{quitDeadline,jdbcType=TIMESTAMP}, #{pptDeadline,jdbcType=TIMESTAMP}, 
      #{pptUploadClosed,jdbcType=BIT}, #{meetingStatus,jdbcType=BIT}, #{committeeStatus,jdbcType=BIT}, 
      #{remark,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{pubStatus,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{statGiveCount,jdbcType=INTEGER}, #{statBackCount,jdbcType=INTEGER}, 
      #{statFile,jdbcType=VARCHAR}, #{statFileName,jdbcType=VARCHAR}, #{statDate,jdbcType=DATE}, 
      #{postDuty,jdbcType=LONGVARCHAR}, #{requirement,jdbcType=LONGVARCHAR}, #{qualification,jdbcType=LONGVARCHAR}, 
      #{meetingNotice,jdbcType=LONGVARCHAR}, #{meetingSummary,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="domain.crs.CrsPostWithBLOBs">
    insert into crs_post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="seq != null">
        seq,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="adminLevel != null">
        admin_level,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="notice != null">
        notice,
      </if>
      <if test="postRequireId != null">
        post_require_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="enrollStatus != null">
        enroll_status,
      </if>
      <if test="meetingTime != null">
        meeting_time,
      </if>
      <if test="meetingAddress != null">
        meeting_address,
      </if>
      <if test="reportDeadline != null">
        report_deadline,
      </if>
      <if test="quitDeadline != null">
        quit_deadline,
      </if>
      <if test="pptDeadline != null">
        ppt_deadline,
      </if>
      <if test="pptUploadClosed != null">
        ppt_upload_closed,
      </if>
      <if test="meetingStatus != null">
        meeting_status,
      </if>
      <if test="committeeStatus != null">
        committee_status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="pubStatus != null">
        pub_status,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="statGiveCount != null">
        stat_give_count,
      </if>
      <if test="statBackCount != null">
        stat_back_count,
      </if>
      <if test="statFile != null">
        stat_file,
      </if>
      <if test="statFileName != null">
        stat_file_name,
      </if>
      <if test="statDate != null">
        stat_date,
      </if>
      <if test="postDuty != null">
        post_duty,
      </if>
      <if test="requirement != null">
        requirement,
      </if>
      <if test="qualification != null">
        qualification,
      </if>
      <if test="meetingNotice != null">
        meeting_notice,
      </if>
      <if test="meetingSummary != null">
        meeting_summary,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="seq != null">
        #{seq,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="adminLevel != null">
        #{adminLevel,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        #{unitId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="notice != null">
        #{notice,jdbcType=VARCHAR},
      </if>
      <if test="postRequireId != null">
        #{postRequireId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enrollStatus != null">
        #{enrollStatus,jdbcType=TINYINT},
      </if>
      <if test="meetingTime != null">
        #{meetingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meetingAddress != null">
        #{meetingAddress,jdbcType=VARCHAR},
      </if>
      <if test="reportDeadline != null">
        #{reportDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="quitDeadline != null">
        #{quitDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="pptDeadline != null">
        #{pptDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="pptUploadClosed != null">
        #{pptUploadClosed,jdbcType=BIT},
      </if>
      <if test="meetingStatus != null">
        #{meetingStatus,jdbcType=BIT},
      </if>
      <if test="committeeStatus != null">
        #{committeeStatus,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pubStatus != null">
        #{pubStatus,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="statGiveCount != null">
        #{statGiveCount,jdbcType=INTEGER},
      </if>
      <if test="statBackCount != null">
        #{statBackCount,jdbcType=INTEGER},
      </if>
      <if test="statFile != null">
        #{statFile,jdbcType=VARCHAR},
      </if>
      <if test="statFileName != null">
        #{statFileName,jdbcType=VARCHAR},
      </if>
      <if test="statDate != null">
        #{statDate,jdbcType=DATE},
      </if>
      <if test="postDuty != null">
        #{postDuty,jdbcType=LONGVARCHAR},
      </if>
      <if test="requirement != null">
        #{requirement,jdbcType=LONGVARCHAR},
      </if>
      <if test="qualification != null">
        #{qualification,jdbcType=LONGVARCHAR},
      </if>
      <if test="meetingNotice != null">
        #{meetingNotice,jdbcType=LONGVARCHAR},
      </if>
      <if test="meetingSummary != null">
        #{meetingSummary,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="domain.crs.CrsPostExample" resultType="java.lang.Long">
    select count(*) from crs_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update crs_post
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=TINYINT},
      </if>
      <if test="record.seq != null">
        seq = #{record.seq,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.job != null">
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.adminLevel != null">
        admin_level = #{record.adminLevel,jdbcType=INTEGER},
      </if>
      <if test="record.unitId != null">
        unit_id = #{record.unitId,jdbcType=INTEGER},
      </if>
      <if test="record.num != null">
        num = #{record.num,jdbcType=INTEGER},
      </if>
      <if test="record.notice != null">
        notice = #{record.notice,jdbcType=VARCHAR},
      </if>
      <if test="record.postRequireId != null">
        post_require_id = #{record.postRequireId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.enrollStatus != null">
        enroll_status = #{record.enrollStatus,jdbcType=TINYINT},
      </if>
      <if test="record.meetingTime != null">
        meeting_time = #{record.meetingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.meetingAddress != null">
        meeting_address = #{record.meetingAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.reportDeadline != null">
        report_deadline = #{record.reportDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="record.quitDeadline != null">
        quit_deadline = #{record.quitDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pptDeadline != null">
        ppt_deadline = #{record.pptDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pptUploadClosed != null">
        ppt_upload_closed = #{record.pptUploadClosed,jdbcType=BIT},
      </if>
      <if test="record.meetingStatus != null">
        meeting_status = #{record.meetingStatus,jdbcType=BIT},
      </if>
      <if test="record.committeeStatus != null">
        committee_status = #{record.committeeStatus,jdbcType=BIT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.pubStatus != null">
        pub_status = #{record.pubStatus,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.statGiveCount != null">
        stat_give_count = #{record.statGiveCount,jdbcType=INTEGER},
      </if>
      <if test="record.statBackCount != null">
        stat_back_count = #{record.statBackCount,jdbcType=INTEGER},
      </if>
      <if test="record.statFile != null">
        stat_file = #{record.statFile,jdbcType=VARCHAR},
      </if>
      <if test="record.statFileName != null">
        stat_file_name = #{record.statFileName,jdbcType=VARCHAR},
      </if>
      <if test="record.statDate != null">
        stat_date = #{record.statDate,jdbcType=DATE},
      </if>
      <if test="record.postDuty != null">
        post_duty = #{record.postDuty,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.requirement != null">
        requirement = #{record.requirement,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.qualification != null">
        qualification = #{record.qualification,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.meetingNotice != null">
        meeting_notice = #{record.meetingNotice,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.meetingSummary != null">
        meeting_summary = #{record.meetingSummary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update crs_post
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      seq = #{record.seq,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      admin_level = #{record.adminLevel,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      notice = #{record.notice,jdbcType=VARCHAR},
      post_require_id = #{record.postRequireId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      enroll_status = #{record.enrollStatus,jdbcType=TINYINT},
      meeting_time = #{record.meetingTime,jdbcType=TIMESTAMP},
      meeting_address = #{record.meetingAddress,jdbcType=VARCHAR},
      report_deadline = #{record.reportDeadline,jdbcType=TIMESTAMP},
      quit_deadline = #{record.quitDeadline,jdbcType=TIMESTAMP},
      ppt_deadline = #{record.pptDeadline,jdbcType=TIMESTAMP},
      ppt_upload_closed = #{record.pptUploadClosed,jdbcType=BIT},
      meeting_status = #{record.meetingStatus,jdbcType=BIT},
      committee_status = #{record.committeeStatus,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      pub_status = #{record.pubStatus,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      stat_give_count = #{record.statGiveCount,jdbcType=INTEGER},
      stat_back_count = #{record.statBackCount,jdbcType=INTEGER},
      stat_file = #{record.statFile,jdbcType=VARCHAR},
      stat_file_name = #{record.statFileName,jdbcType=VARCHAR},
      stat_date = #{record.statDate,jdbcType=DATE},
      post_duty = #{record.postDuty,jdbcType=LONGVARCHAR},
      requirement = #{record.requirement,jdbcType=LONGVARCHAR},
      qualification = #{record.qualification,jdbcType=LONGVARCHAR},
      meeting_notice = #{record.meetingNotice,jdbcType=LONGVARCHAR},
      meeting_summary = #{record.meetingSummary,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update crs_post
    set id = #{record.id,jdbcType=INTEGER},
      year = #{record.year,jdbcType=INTEGER},
      type = #{record.type,jdbcType=TINYINT},
      seq = #{record.seq,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      job = #{record.job,jdbcType=VARCHAR},
      admin_level = #{record.adminLevel,jdbcType=INTEGER},
      unit_id = #{record.unitId,jdbcType=INTEGER},
      num = #{record.num,jdbcType=INTEGER},
      notice = #{record.notice,jdbcType=VARCHAR},
      post_require_id = #{record.postRequireId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      enroll_status = #{record.enrollStatus,jdbcType=TINYINT},
      meeting_time = #{record.meetingTime,jdbcType=TIMESTAMP},
      meeting_address = #{record.meetingAddress,jdbcType=VARCHAR},
      report_deadline = #{record.reportDeadline,jdbcType=TIMESTAMP},
      quit_deadline = #{record.quitDeadline,jdbcType=TIMESTAMP},
      ppt_deadline = #{record.pptDeadline,jdbcType=TIMESTAMP},
      ppt_upload_closed = #{record.pptUploadClosed,jdbcType=BIT},
      meeting_status = #{record.meetingStatus,jdbcType=BIT},
      committee_status = #{record.committeeStatus,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      pub_status = #{record.pubStatus,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      stat_give_count = #{record.statGiveCount,jdbcType=INTEGER},
      stat_back_count = #{record.statBackCount,jdbcType=INTEGER},
      stat_file = #{record.statFile,jdbcType=VARCHAR},
      stat_file_name = #{record.statFileName,jdbcType=VARCHAR},
      stat_date = #{record.statDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="domain.crs.CrsPostWithBLOBs">
    update crs_post
    <set>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="seq != null">
        seq = #{seq,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="adminLevel != null">
        admin_level = #{adminLevel,jdbcType=INTEGER},
      </if>
      <if test="unitId != null">
        unit_id = #{unitId,jdbcType=INTEGER},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="notice != null">
        notice = #{notice,jdbcType=VARCHAR},
      </if>
      <if test="postRequireId != null">
        post_require_id = #{postRequireId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="enrollStatus != null">
        enroll_status = #{enrollStatus,jdbcType=TINYINT},
      </if>
      <if test="meetingTime != null">
        meeting_time = #{meetingTime,jdbcType=TIMESTAMP},
      </if>
      <if test="meetingAddress != null">
        meeting_address = #{meetingAddress,jdbcType=VARCHAR},
      </if>
      <if test="reportDeadline != null">
        report_deadline = #{reportDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="quitDeadline != null">
        quit_deadline = #{quitDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="pptDeadline != null">
        ppt_deadline = #{pptDeadline,jdbcType=TIMESTAMP},
      </if>
      <if test="pptUploadClosed != null">
        ppt_upload_closed = #{pptUploadClosed,jdbcType=BIT},
      </if>
      <if test="meetingStatus != null">
        meeting_status = #{meetingStatus,jdbcType=BIT},
      </if>
      <if test="committeeStatus != null">
        committee_status = #{committeeStatus,jdbcType=BIT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="pubStatus != null">
        pub_status = #{pubStatus,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="statGiveCount != null">
        stat_give_count = #{statGiveCount,jdbcType=INTEGER},
      </if>
      <if test="statBackCount != null">
        stat_back_count = #{statBackCount,jdbcType=INTEGER},
      </if>
      <if test="statFile != null">
        stat_file = #{statFile,jdbcType=VARCHAR},
      </if>
      <if test="statFileName != null">
        stat_file_name = #{statFileName,jdbcType=VARCHAR},
      </if>
      <if test="statDate != null">
        stat_date = #{statDate,jdbcType=DATE},
      </if>
      <if test="postDuty != null">
        post_duty = #{postDuty,jdbcType=LONGVARCHAR},
      </if>
      <if test="requirement != null">
        requirement = #{requirement,jdbcType=LONGVARCHAR},
      </if>
      <if test="qualification != null">
        qualification = #{qualification,jdbcType=LONGVARCHAR},
      </if>
      <if test="meetingNotice != null">
        meeting_notice = #{meetingNotice,jdbcType=LONGVARCHAR},
      </if>
      <if test="meetingSummary != null">
        meeting_summary = #{meetingSummary,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="domain.crs.CrsPostWithBLOBs">
    update crs_post
    set year = #{year,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      seq = #{seq,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      admin_level = #{adminLevel,jdbcType=INTEGER},
      unit_id = #{unitId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      notice = #{notice,jdbcType=VARCHAR},
      post_require_id = #{postRequireId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      enroll_status = #{enrollStatus,jdbcType=TINYINT},
      meeting_time = #{meetingTime,jdbcType=TIMESTAMP},
      meeting_address = #{meetingAddress,jdbcType=VARCHAR},
      report_deadline = #{reportDeadline,jdbcType=TIMESTAMP},
      quit_deadline = #{quitDeadline,jdbcType=TIMESTAMP},
      ppt_deadline = #{pptDeadline,jdbcType=TIMESTAMP},
      ppt_upload_closed = #{pptUploadClosed,jdbcType=BIT},
      meeting_status = #{meetingStatus,jdbcType=BIT},
      committee_status = #{committeeStatus,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pub_status = #{pubStatus,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      stat_give_count = #{statGiveCount,jdbcType=INTEGER},
      stat_back_count = #{statBackCount,jdbcType=INTEGER},
      stat_file = #{statFile,jdbcType=VARCHAR},
      stat_file_name = #{statFileName,jdbcType=VARCHAR},
      stat_date = #{statDate,jdbcType=DATE},
      post_duty = #{postDuty,jdbcType=LONGVARCHAR},
      requirement = #{requirement,jdbcType=LONGVARCHAR},
      qualification = #{qualification,jdbcType=LONGVARCHAR},
      meeting_notice = #{meetingNotice,jdbcType=LONGVARCHAR},
      meeting_summary = #{meetingSummary,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="domain.crs.CrsPost">
    update crs_post
    set year = #{year,jdbcType=INTEGER},
      type = #{type,jdbcType=TINYINT},
      seq = #{seq,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      job = #{job,jdbcType=VARCHAR},
      admin_level = #{adminLevel,jdbcType=INTEGER},
      unit_id = #{unitId,jdbcType=INTEGER},
      num = #{num,jdbcType=INTEGER},
      notice = #{notice,jdbcType=VARCHAR},
      post_require_id = #{postRequireId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      enroll_status = #{enrollStatus,jdbcType=TINYINT},
      meeting_time = #{meetingTime,jdbcType=TIMESTAMP},
      meeting_address = #{meetingAddress,jdbcType=VARCHAR},
      report_deadline = #{reportDeadline,jdbcType=TIMESTAMP},
      quit_deadline = #{quitDeadline,jdbcType=TIMESTAMP},
      ppt_deadline = #{pptDeadline,jdbcType=TIMESTAMP},
      ppt_upload_closed = #{pptUploadClosed,jdbcType=BIT},
      meeting_status = #{meetingStatus,jdbcType=BIT},
      committee_status = #{committeeStatus,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pub_status = #{pubStatus,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      stat_give_count = #{statGiveCount,jdbcType=INTEGER},
      stat_back_count = #{statBackCount,jdbcType=INTEGER},
      stat_file = #{statFile,jdbcType=VARCHAR},
      stat_file_name = #{statFileName,jdbcType=VARCHAR},
      stat_date = #{statDate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByExampleWithBLOBsWithRowbounds" parameterType="domain.crs.CrsPostExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from crs_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="domain.crs.CrsPostExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from crs_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>