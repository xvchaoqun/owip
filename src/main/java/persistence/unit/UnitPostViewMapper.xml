<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="persistence.unit.UnitPostViewMapper">
  <resultMap id="BaseResultMap" type="domain.unit.UnitPostView">
    <result column="id" jdbcType="INTEGER" property="id" />
    <result column="unit_id" jdbcType="INTEGER" property="unitId" />
    <result column="group_id" jdbcType="INTEGER" property="groupId" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="is_principal" jdbcType="BIT" property="isPrincipal" />
    <result column="leader_type" jdbcType="TINYINT" property="leaderType" />
    <result column="admin_level" jdbcType="INTEGER" property="adminLevel" />
    <result column="post_type" jdbcType="INTEGER" property="postType" />
    <result column="post_class" jdbcType="INTEGER" property="postClass" />
    <result column="is_cpc" jdbcType="BIT" property="isCpc" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="abolish_date" jdbcType="DATE" property="abolishDate" />
    <result column="open_date" jdbcType="DATE" property="openDate" />
    <result column="sort_order" jdbcType="INTEGER" property="sortOrder" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="unit_name" jdbcType="VARCHAR" property="unitName" />
    <result column="unit_code" jdbcType="VARCHAR" property="unitCode" />
    <result column="unit_type_id" jdbcType="INTEGER" property="unitTypeId" />
    <result column="unit_status" jdbcType="TINYINT" property="unitStatus" />
    <result column="unit_sort_order" jdbcType="INTEGER" property="unitSortOrder" />
    <result column="group_name" jdbcType="VARCHAR" property="groupName" />
    <result column="cadre_id" jdbcType="INTEGER" property="cadreId" />
    <result column="cadre_post_id" jdbcType="INTEGER" property="cadrePostId" />
    <result column="cp_admin_level" jdbcType="INTEGER" property="cpAdminLevel" />
    <result column="is_main_post" jdbcType="BIT" property="isMainPost" />
    <result column="gender" jdbcType="TINYINT" property="gender" />
    <result column="cadre_admin_level" jdbcType="INTEGER" property="cadreAdminLevel" />
    <result column="cadre_post_type" jdbcType="INTEGER" property="cadrePostType" />
    <result column="lp_work_time" jdbcType="DATE" property="lpWorkTime" />
    <result column="np_work_time" jdbcType="DATE" property="npWorkTime" />
    <result column="s_work_time" jdbcType="DATE" property="sWorkTime" />
    <result column="cadre_is_principal" jdbcType="BIT" property="cadreIsPrincipal" />
    <result column="cadre_post_year" jdbcType="INTEGER" property="cadrePostYear" />
    <result column="admin_level_year" jdbcType="INTEGER" property="adminLevelYear" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, unit_id, group_id, code, name, job, is_principal, leader_type, admin_level, post_type, 
    post_class, is_cpc, label, status, abolish_date, open_date, sort_order, remark, unit_name, 
    unit_code, unit_type_id, unit_status, unit_sort_order, group_name, cadre_id, cadre_post_id, 
    cp_admin_level, is_main_post, gender, cadre_admin_level, cadre_post_type, lp_work_time, 
    np_work_time, s_work_time, cadre_is_principal, cadre_post_year, admin_level_year
  </sql>
  <select id="selectByExample" parameterType="domain.unit.UnitPostViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from unit_post_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="countByExample" parameterType="domain.unit.UnitPostViewExample" resultType="java.lang.Long">
    select count(*) from unit_post_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectByExampleWithRowbounds" parameterType="domain.unit.UnitPostViewExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from unit_post_view
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
</mapper>